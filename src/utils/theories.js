export const theories = [
  {
    starId: 1,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Ol√°, seja bem-vindo. Primeiramente para come√ßarmos essa jornada, √© necess√°rio deixar claro o conceito de l√≥gica e algoritmos, pois esse conceito ser√° de vital import√¢ncia para o entendido de assuntos mais avan√ßados, ent√£o vamos l√°!.',
      },
      {
        type: 'default',
        title: 'Introdu√ß√£o',
        body: 'Sempre que decidimos fazer qualquer atividade em nosso dia a dia, acabamos seguindo uma sequ√™ncia l√≥gica. Na maior parte do tempo, fazemos isso de maneira t√£o natural que nem nos damos conta, mas quando percebemos, conseguimos enxergar passos que levaram ao resultado final.',
      },
      {
        type: 'default',
        title: null,
        body: 'Ou seja, uma sequ√™ncia l√≥gica s√£o passos executados at√© atingir um objetivo ou solu√ß√£o de um problema.',
      },
      {
        type: 'default',
        title: 'Algoritmo est√° em todo lugar',
        body: 'Na grande maioria das vezes, n√£o nos damos conta disso, mas ao fazer uma an√°lise do nosso cotidiano, podemos compreender como todas as nossas a√ß√µes s√£o consequ√™ncia de uma cadeia de outras a√ß√µes menores que nos levaram at√© uma atitude final.',
      },
      {
        type: 'alert',
        body: 'Embora, n√£o estamos acostumados a pensar desta maneira sobre nossas atividades cotidianas, mas, quando falamos de programa√ß√£o, estipular uma sequ√™ncia de etapas √© um procedimento muito importante e necess√°rio, uma vez que, diferente de n√≥s, seres humanos, os computadores n√£o s√£o capazes de prever nenhum comportamento.',
      },
      {
        type: 'default',
        title: null,
        body: 'Veja um exemplo a seguir mostrando uma sequ√™ncia de passos l√≥gicos comum no dia a dia.',
      },
      {
        type: 'code',
        body: `
     algorimto Tomar Banho
  
      In√≠cio
    
        Pegar a toalha e roupas;
        Entrar no banheiro e fechar a porta;
        Tirar a roupa que est√° usando;
        Ligar o chuveiro e esperar a √°gua esquentar;
        Entrar no box do banho;
        Se molhar, ensaboar, enxaguar = banho;
        Fechar o chuveiro;
        Pegar a toalha e se secar;
        Sair do box;
        Se vestir com a roupa limpa;
        Sair do banheiro.
    
      Fim
            `,
      },
      {
        type: 'default',
        body: 'Obviamente, h√° v√°rias formas de chegar nesse mesmo resultado, mas a maneira de pensar logicamente para estipular uma sequ√™ncia de passos para a resolu√ß√£o de um problema, damos o nome de l√≥gica de programa√ß√£o dentro da √°rea da computa√ß√£o, enquanto a sequ√™ncia narrativa desses eventos, damos o nome de algoritmo.',
      },
      {
        type: 'alert',
        body: 'A diferen√ßa √© que qualquer sequ√™ncia l√≥gica de passos pode ser considerado um algorimto, j√° em programa√ß√£o, os algoritmos s√£o escritos de tal forma que sempre deve obedecer uma s√©rie de regras estabelecidas por cada linguagem de programa√ß√£o, o que a gente chama de sintaxe.',
      },
      {
        type: 'default',
        title: 'Por que aprender L√≥gica de Programa√ß√£o?',
        body: 'Aprender l√≥gica de programa√ß√£o √© importante porque permite que voc√™ resolva problemas de maneira mais eficiente e organizada, ajuda na solu√ß√£o de tarefas complexas e facilita a cria√ß√£o de programas que automatizam tarefas e processos. Al√©m disso, √© uma habilidade altamente valorizada no mercado de trabalho.',
      },
      {
        type: 'default',
        title: 'Como funciona a L√≥gica de Programa√ß√£o?',
        body: 'Como voc√™ j√° percebeu, a L√≥gica de Programa√ß√£o funciona atrav√©s de algoritmos, ou seja, por meio de passos l√≥gicos e bem definidos que deve ser seguidos para resolver um problema. Esses passos s√£o escritos em um c√≥digo que √© interpretado pelo computador para que ele possa executar a tarefa desejada.',
      },
      {
        type: 'list',
        body: 'Agora que voc√™ aprendeu o conceito de l√≥gica e algoritmos, vamos testar seus conhecimentos at√© ent√£o adquiridos üöÄ.',
      },
    ],
  },
  {
    starId: 2,
    texts: [
      {
        type: 'default',
        title: 'Introdu√ß√£o',
        body: 'Os programas de computadores nada mais s√£o do que algoritmos escritos numa linguagem de programa√ß√£o (PHP, Python, JavaScript, entre outras) e que s√£o interpretados e executados por uma m√°quina, no caso um computador.',
      },
      {
        type: 'alert',
        body: 'Uma linguagem de programa√ß√£o normalmente possui uma sintaxe pr√≥pria, que √© o conjunto de regras que determina quais combina√ß√µes de s√≠mbolos e palavras-chaves podem ser utilizadas para escrever o c√≥digo.',
      },
      {
        type: 'default',
        title: null,
        body: 'Os algoritmos, por sua vez, s√£o descritos em uma linguagem chamada pseudoc√≥digo.',
      },
      {
        type: 'default',
        title: 'O que √© pseudoc√≥digo ?',
        body: 'O pseudoc√≥digo √© uma representa√ß√£o informal de um algoritmo, que permite a comunica√ß√£o clara e eficiente de uma ideia de programa√ß√£o sem se preocupar com a sintaxe espec√≠fica de uma linguagem de programa√ß√£o',
      },
      {
        type: 'alert',
        body: 'Colocando dessa maneira, o pseudoc√≥digo n√£o √© uma linguagem de programa√ß√£o, pois ele √© uma descri√ß√£o gen√©rica de um algoritmo e tampou pode ser executado ou compilado por nenhum compilador ou interpretador.',
      },
      {
        type: 'default',
        title: null,
        body: 'Por esse motivo o pseudoc√≥digo acaba sendo uma ferramenta valiosa para ajudar a planejar e projetar a l√≥gica de um programa antes de escrever o c√≥digo de verdade.',
      },
      {
        type: 'default',
        title: 'Mas ent√£o por que usar pseudoc√≥digo?',
        body: 'Oras, usar pseudoc√≥digo possui muitas vantagens, incluindo:',
      },
      {
        type: 'list',
        body: '1 - Permite uma representa√ß√£o clara e compreens√≠vel do algoritmo, o que facilita a comunica√ß√£o da ideia que voc√™ quer implementar com outras pessoas',
      },
      {
        type: 'list',
        body: '2 - Ajuda a identificar e corrigir problemas de l√≥gica antes de escrever o c√≥digo de verdade',
      },
      {
        type: 'list',
        body: '3 - Facilita a manuten√ß√£o e atualiza√ß√£o do c√≥digo existente',
      },
      {
        type: 'list',
        body: '4 - N√£o requer conhecimento avan√ßado de sintaxe, o que facilita o aprendizado da l√≥gica de programa√ß√£o',
      },
      {
        type: 'default',
        title: 'Como escrever pseudoc√≥digo?',
        body: 'Existem algumas conven√ß√µes gerais que ajudam a escrever pseudoc√≥digo de forma clara e eficiente.',
      },
      {
        type: 'list',
        body: '. Use comandos claros e f√°ceis de entender, geralmente em portugu√™s',
      },
      {
        type: 'list',
        body: '. Indente (fazer recuo) o c√≥digo de forma apropriada para indicar a estrutura do algoritmo;',
      },
      {
        type: 'list',
        body: '. Use coment√°rios para explicar o que o c√≥digo est√° fazendo em termos gerais',
      },
      {
        type: 'list',
        body: '. Mantenha o pseudoc√≥digo o mais simples poss√≠vel, evitando detalhes desnecess√°rios.',
      },
      {
        type: 'alert',
        body: 'A pseudolinguagem que iremos utilizar ser√° o portugol, pois ela possui a sintaxe (maneira de escrever um c√≥digo) em portugu√™s, o que facilita bastante para iniciantes o aprendizado de l√≥gica de programa√ß√£o.',
      },
      {
        type: 'default',
        title: null,
        body: 'Veja um exemplo de pseudoc√≥digo escrito em portugol:',
      },
      {
        type: 'code',
        body: `
          In√≠cio
          Leia n√∫mero1
          Leia n√∫mero2
          Se n√∫mero1 > n√∫mero2
            Escreva "n√∫mero1 √© maior"
          Sen√£o
            Escreva "n√∫mero2 √© maior"
          Fimalgoritmo`,
      },
      {
        type: 'alert',
        body: 'Voc√™ n√£o precisa enteder toda essa estrutura por agora, pois entraremos em cada detalhe ao decorrer da jornada.',
      },
      {
        type: 'default',
        title: 'conclus√£o',
        body: 'Em resumo, o pseudoc√≥digo √© uma ferramenta valiosa para ajudar a projetar e planejar a l√≥gica de um programa antes de escrever o c√≥digo de verdade. Ao usar pseudoc√≥digo, √© poss√≠vel comunicar de forma clara e eficiente a ideia de um algoritmo, identificar problemas de l√≥gica e facilitar a manuten√ß√£o e atualiza√ß√£o do c√≥digo existente.',
      },
      {
        type: 'alert',
        body: 'Agora que voc√™ um pouco mais sobre programas e pseudoc√≥digos t√° na hora revisar tudo isso, preparado(a)?.',
      },
    ],
  },
  {
    starId: 3,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Nesta aula, voc√™ aprender√° sobre os tr√™s elementos b√°sicos de qualquer programa de computador utilizando a pseudo-linguagem Portugol: entrada, processamento e sa√≠da. Estes tr√™s elementos s√£o importantes para compreender a l√≥gica por tr√°s de qualquer programa de computador, independentemente da linguagem de programa√ß√£o ou do sistema operacional utilizado.',
      },
      {
        type: 'default',
        title: 'Entrada',
        body: 'A entrada √© o processo de ler ou receber informa√ß√µes do usu√°rio ou de outra fonte externa. Em Portugol, a entrada de dados pode ser feita atrav√©s do comando "LEIA". Por exemplo:',
      },
      {
        type: 'code',
        body: `
          leia nome
          `,
      },
      {
        type: 'default',
        title: 'Processamento',
        body: 'O processamento √© o processo de transformar as informa√ß√µes de entrada em resultados √∫teis. Em Portugol, isso pode ser feito atrav√©s de comandos matem√°ticos, condicionais e de loop. Por exemplo, para calcular a m√©dia de duas notas:',
      },
      {
        type: 'code',
        body: `
          leia nota1
          leia nota2
          media <- (nota1 + nota2) / 2
          `,
      },
      {
        type: 'Sa√≠da',
        title: 'Processamento',
        body: 'A sa√≠da √© o processo de apresentar os resultados do processamento para o usu√°rio ou para outra fonte externa. Em Portugol, a sa√≠da pode ser feita atrav√©s do comando "ESCREVA". Por exemplo, para exibir a m√©dia calculada:',
      },
      {
        type: 'code',
        body: `
          ESCREVA "A m√©dia √©: ", media
          `,
      },
      {
        type: 'default',
        title: 'Exemplo completo',
        body: 'Aqui est√° um exemplo completo de c√°lculo da m√©dia de duas notas em Portugol:',
      },
      {
        type: 'code',
        body: `
          LEIA nota1
          LEIA nota2
          media <- (nota1 + nota2) / 2
          ESCREVA "A m√©dia √©: ", media
          `,
      },
      {
        type: 'alert',
        body: 'Note que quando queremos escrever alguma mensagem na tela (letra, frase, n√∫mero etc.) literalmente, devemos utilizar aspas para identificar o que ser√° escrito, pois o que estiver entre aspas no algoritmo, ser√° exatamente o que aparecer√° na tela do computador. Diferente de quando queremos escrever conte√∫do de uma vari√°vel, pois neste caso n√£o utiliza-se aspas.',
      },
      {
        type: 'default',
        title: 'Conclus√£o',
        body: 'Em resumo, entrada, processamento e sa√≠da s√£o os tr√™s elementos b√°sicos de qualquer programa de computador e em Portugol eles podem ser implementados atrav√©s dos comandos "LEIA", "ESCREVA" e comandos matem√°ticos, condicionais e de loop, conceitos que abordaremos mais para frente.',
      },
      {
        type: 'default',
        body: ' A compreens√£o desses elementos √© fundamental para a constru√ß√£o de qualquer programa eficaz e funcional em Portugol. Agora, qua tal verificar o que voc√™ acabou de ver sobre entrada, processamento e sa√≠da respondendo algumas quest√µes?',
      },
    ],
  },
  {
    starId: 4,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Ol√°, parab√©ns por conseguir chegar nessa nova etapa! Vamos come√ßar a falar agora sobre vari√°veis.',
      },
      {
        type: 'default',
        title: 'O que s√£o vari√°veis?',
        body: 'Antes de aprender a atribuir valores a vari√°veis, precisamos entender o que s√£o vari√°veis. Em programa√ß√£o, uma vari√°vel √© uma localiza√ß√£o na mem√≥ria do computador onde √© poss√≠vel armazenar um valor.',
      },
      {
        type: 'default',
        title: null,
        body: 'Cada vari√°vel tem um nome √∫nico que a identifica e um tipo de dado que determina o tipo de informa√ß√µes que ela pode armazenar.',
      },
      {
        type: 'default',
        title: null,
        body: 'Por esse motivo, eles s√£o usados para armazenar dados que podem ser modificados ao longo do tempo, como nomes de pessoas, idades, pre√ßos de produtos e outros.',
      },
      {
        type: 'default',
        title: 'O que √© declara√ß√£o de vari√°veis?',
        body: 'Antes de come√ßarmos a utilizar vari√°veis em nosso c√≥digo, √© preciso que as declaremos. A declara√ß√£o de uma vari√°vel em Portugol √© simples e consiste na defini√ß√£o do tipo da vari√°vel e do seu nome.',
      },
      {
        type: 'code',
        body: `
    nome_da_variavel: tipo;
          `,
      },
      {
        type: 'default',
        title: null,
        body: 'Ok, se eu quiser declarar uma vari√°vel inteira chamada "idade", escreveremos:',
      },
      {
        type: 'code',
        body: `
          var
              idade: inteiro;
          `,
      },
      {
        type: 'alert',
        body: 'Observe que deve ser usado o comando "VAR" para informar que estamos declarando vari√°veis. Em seguida, informamos o nome da vari√°vel e o tipo de dado que ser√° armazenado nela.',
      },
      {
        type: 'list',
        body: 'Os tipos de vari√°veis dispon√≠veis em Portugol s√£o: inteiro, real, caractere e l√≥gico',
      },
      {
        type: 'alert',
        body: 'N√£o se preocupe, vamos falar sobre cada um dos tipos ao decorrer desse mundo.',
      },
      {
        type: 'default',
        title: 'O que √© atribui√ß√£o?',
        body: 'A atribui√ß√£o √© a maneira utilizada para atribuir um valor a uma vari√°vel, ou seja, para armazenar um determinado conte√∫do em uma vari√°vel.',
      },
      {
        type: 'default',
        title: null,
        title: 'Como fazer atribui√ß√£o?',
        body: 'A sintaxe b√°sica para atribuir valores a vari√°veis em Portugol √© a seguinte.',
      },
      {
        type: 'code',
        body: `
    nome_da_variavel <- valor;
          `,
      },
      {
        type: 'alert',
        body: 'Perceba que a opera√ß√£o de atribui√ß√£o, normalmente, √© representada por uma seta apontando para a esquerda, mas existem outros s√≠mbolos para representar a atribui√ß√£o dependendo da forma de representa√ß√£o do algoritmo mas aqui vamos nos contentar apenas com setas',
      },
      {
        type: 'default',
        title: null,
        body: 'Veja um exemplo.',
      },
      {
        type: 'code',
        body: `
    nome <- "Jo√£o";
    idade <- 30;
          `,
      },
      {
        type: 'default',
        title: null,
        body: 'Neste exemplo, estamos criando duas vari√°veis, uma chamada "NOME" que armazenar√° o valor "Jo√£o" e outra chamada "IDADE" que armazenar√° o valor 30.',
      },
      {
        type: 'alert',
        body: 'Al√©m disso, voc√™ tamb√©m pode atribuir o valor de uma vari√°vel a outra, utilizando o seguinte formato:.',
      },
      {
        type: 'code',
        body: `
          uma_variavel <- outra_variavel
          `,
      },
      {
        type: 'default',
        title: null,
        body: 'Veja um exemplo.',
      },
      {
        type: 'code',
        body: `
    nome_completo <- "Lucas Silva"
    nome_para_uso <- nome_completo
          `,
      },
      {
        type: 'default',
        title: null,
        body: 'Neste exemplo, estamos atribuindo o valor da vari√°vel "nome_completo" √† vari√°vel "nome_para_uso". Agora, ambas as vari√°veis possuem o mesmo valor.',
      },
      {
        type: 'default',
        title: 'Regras para nomes de vari√°veis',
        body: 'Ao nomear suas vari√°veis em Portugol, √© importante seguir algumas regras b√°sicas:',
      },
      {
        type: 'list',
        body: '1 - O nome da vari√°vel deve iniciar com uma letra ou sublinhado (_).',
      },
      {
        type: 'list',
        body: '2 - O nome da vari√°vel n√£o pode conter espa√ßos.',
      },
      {
        type: 'list',
        body: '3 - O nome da vari√°vel n√£o pode ser uma palavra reservada do Portugol, ou seja, um nome de um comando por exemplo.',
      },
      {
        type: 'list',
        body: '4 - O nome da vari√°vel deve ser descritivo e f√°cil de entender.',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora observe um exemplo completo utilizando tudo que aprendemos at√© agora.',
      },
      {
        type: 'code',
        body: `
algoritmo "Exemplo"
var
    nome: caractere
    idade: inteiro
inicio
    escreva("Seu nome √©: ", nome)
    escreva("Sua idade √©: ", idade)
fimalgoritmo
          `,
      },
      {
        type: 'default',
        title: 'Conclus√£o',
        body: 'A atribui√ß√£o de vari√°veis √© uma parte fundamental da programa√ß√£o, pois permite armazenar valores e acess√°-los ao longo do c√≥digo. Ao seguir as regras e a sintaxe corretas, voc√™ poder√° atribuir valores a suas vari√°veis sem problemas em Portugol.',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora que tal testar seus conhecimentos?.',
      },
    ],
  },
  {
    starId: 5,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Ol√°, agora que voc√™ aprendeu mais sobre vari√°veis para armazenar dados, vamos nos aprofundar nos tipos de dados',
      },
      {
        type: 'default',
        title: null,
        body: 'Na programa√ß√£o, os tipos de dados s√£o importantes para identificarmos o tipo de informa√ß√£o que estamos lidando, e, com isso, agir de maneira adequada na manipula√ß√£o dos dados.',
      },
      {
        type: 'default',
        title: null,
        body: 'como voc√™ j√° sabe, existem 4 tipos de dados b√°sicos',
      },
      {
        type: 'list',
        body: `
        1 - Caractere 
        2 - Inteiro 
        3 - Real 
        4 - L√≥gico
        `,
      },
      {
        type: 'alert',
        body: 'Por agora, vamos falar sobre o tipo que caracter, que nada mais do que um tipo para lidar com textos.',
      },
      {
        type: 'default',
        title: null,
        body: 'Ent√£o, o tipo caractere √© utilizado para representar valores que s√£o compostos por uma ou mais letras, n√∫meros ou s√≠mbolos. Esses valores s√£o conhecidos como "strings".',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de caractere',
        body: 'Para declarar uma vari√°vel do tipo caractere em Portugol, voc√™ deve escrever o seguinte:',
      },
      {
        type: 'code',
        body: `
    var
        nome: caractere
          `,
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de caractere',
        body: 'Agora voc√™ pode atribuir valores a vari√°veis do tipo caractere da seguinte forma:',
      },
      {
        type: 'code',
        body: `
    nomeDaVarivael <- "algum texto"
          `,
      },
      {
        type: 'alert',
        body: 'Lembre-se sempre de colocar as aspas para indicar que √© uma string.',
      },
      {
        type: 'alert',
        body: '√â importante notar tamb√©m que, na hora de atribuir um valor √† uma vari√°vel, o tipo de dado da vari√°vel seja compat√≠vel com o tipo de dado da informa√ß√£o que estamos atribuindo, ou seja, uma vari√°vel do tipo caractere apenas aceitas valores que s√£o string',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de caractere',
        body: 'Aqui est√£o alguns exemplos de como voc√™ pode declarar e atribuir valores a vari√°veis do tipo caractere em Portugol:',
      },
      {
        type: 'code',
        body: `
algoritmo "aprendendoSobreStrings"

var
    nome: caractere
    sobrenome: caractere
    frase: caractere 

inicio
    nome <- "Jo√£o"
    sobrenome <- "Santos"
    frase <- "Ol√°, mundo!" 
fimalgoritmo 
          `,
      },
      {
        type: 'default',
        title: 'Concatena√ß√£o',
        body: '√â poss√≠vel tamb√©m unir textos por meio do operador +, a√ß√£o que chamamos de concatena√ß√£o:',
      },
      {
        type: 'code',
        body: `
    escreva('Hoje fui para' + 'padaria')

    Resultado:
        Hoje fui para padaria
          `,
      },
      {
        type: 'alert',
        body: 'Voc√™ tamb√©m pode concatenar conte√∫dos de texto que est√£o em vari√°veis. Veja o exemplo',
      },
      {
        type: 'code',
        body: `
jogador1 = "Pedro"
jogador2 = "Matheus"
escreva("Os jogadores: " + jogador1 + "e" + jogador2)
escreva("v√£o estreiar na quadra hoje!")

Resultado:
Os jogadores Pedro e Matheus v√£o treinar na quadra hoje!
          `,
      },
      {
        type: 'default',
        title: null,
        body: 'Agora que voc√™ conchece mais sobre tipo caractere, que tal refor√ßar isso com algumas quest√µes?.',
      },
    ],
  },
  {
    starId: 6,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Muito bom, agora vamos falar sobre o tipos que representam os num√©ricos.',
      },
      {
        type: 'default',
        title: 'Tipo inteiro',
        body: 'Primeiramente, vamos falar o tipo inteiro. Ele diz respeito aos n√∫meros sem parte decimal ou fracion√°ria, como -5, 0, 1, 2, 3, entre outros.',
      },
      {
        type: 'default',
        title: 'Declarando inteiros',
        body: 'No Portugol, declaramos uma vari√°vel inteira da seguinte forma:',
      },
      {
        type: 'code',
        body: `
    var
        numero: inteiro
          `,
      },
      {
        type: 'default',
        title: 'Declarando inteiros',
        body: 'Em seguida, podemos atribuir um valor a ela, por exemplo:',
      },
      {
        type: 'code',
        body: `
        numero <- 5
          `,
      },
      {
        type: 'default',
        title: 'Opera√ß√µes Matem√°ticas com Inteiros',
        body: 'Podemos realizar opera√ß√µes matem√°ticas com inteiros, como adi√ß√£o, subtra√ß√£o, multiplica√ß√£o e divis√£o e atribuir a vari√°veis. Aqui est√£o alguns exemplos:',
      },
      {
        type: 'code',
        body: `
        var
            a = 10;
            b = 5;
        inicio
            soma = a + b;
            subtracao = a - b;
            multiplicacao = a * b;
            divisao = a / b;

            escreval(soma)
            escreval(subtracao)
            escreval(multiplicacao)
            escreva(divisao)
        fimalgoritmo

        resultado:
        15
        5
        50
        2
 `,
      },
      {
        type: 'alert',
        body: 'Cuidade, ao dividir inteiros, o resultado ser√° sempre inteiro. Por exemplo, 10 dividido por 3 √© 3, e n√£o 3,3333...',
      },
      {
        type: 'default',
        title: null,
        body: 'Falaremos mais sobre esses operadores futuramente. Agora como lidar com n√∫meros reais?',
      },
      {
        type: 'default',
        title: 'Tipo real',
        body: 'Tipo real √© um tipo de dado que armazena n√∫meros com parte decimal ou fracion√°ria, como 3.14, -0.5, 0.0, entre outros.',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de real',
        body: 'No Portugol, declaramos uma vari√°vel real da seguinte forma:',
      },
      {
        type: 'code',
        body: `
    var
        pi: real
          `,
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de real',
        body: 'Em seguida, podemos atribuir um valor a ela, por exemplo:',
      },
      {
        type: 'code',
        body: `
    pi <- 3.14;
          `,
      },
      {
        type: 'alert',
        body: 'Em outras palavras, um tipo inteiro sempre vai ser um n√∫mero inteiro, enquanto um tipo real sempre vai ser um n√∫mero real d√£.',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora vamos testar o que voc√™ aprendeu sobre num√©ricos',
      },
    ],
  },
  {
    starId: 7,
    texts: [
      {
        type: 'default',
        title: 'introdu√ß√£o',
        body: 'Os dados do tipo l√≥gico s√£o valores que armazenam uma √∫nica op√ß√£o entre duas possibilidades poss√≠veis: Verdadeiro ou Falso.',
      },
      {
        type: 'alert',
        body: 'O tipo l√≥gico tamb√©m √© conhecido por booleano ou em ingl√™s boolean em homenagem ao matem√°tico George Boole.',
      },
      {
        type: 'default',
        title: null,
        body: 'O tipo l√≥gico representa a linguagem que um computador verdadeiramente entende, ou seja, o bin√°rio, j√° que verdadeiro e falso representam 1 e 0 respectivamente:',
      },
      {
        type: 'alert',
        body: 'Dessa forma, √© poss√≠vel usar esse valores para trabalhar com opera√ß√µes l√≥gicas, como "e" e "ou", como tamb√©m com estruturas condicionais, mas vamos deixar isso para outra hora.',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o do tipo l√≥gico',
        body: 'Em Portugol, o tipo de dado l√≥gico √© representado pela palavra reservada logico. Logo, para declarar uma vari√°vel do tipo l√≥gico, podemos usar a seguinte sintaxe:',
      },
      {
        type: 'code',
        body: `
    var
        nomeDaVariavel: logico
          `,
      },
      {
        type: 'default',
        title: 'declara√ß√£o do tipo l√≥gico',
        body: 'Por exemplo, para declarar uma vari√°vel que armazena se uma pessoa √© maior de idade, podemos fazer:',
      },
      {
        type: 'code',
        body: `
    var
        eMaiorDeIdade: logico
          `,
      },
      {
        type: 'default',
        title: null,
        body: 'Agora, podemos inicializar a vari√°vel com um valor l√≥gico (verdadeiro ou falso):',
      },
      {
        type: 'code',
        body: `
        eMaiorDeIdade <- verdadeiro
          `,
      },
      {
        type: 'alert',
        body: 'Quando n√£o iniciamos uma vari√°vel do tipo l√≥gico ela recebe o valor padr√£o de falso',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora que voc√™ aprendeu um pouco mais sobre valores l√≥gicos que tal praticar um pouco mais?',
      },
    ],
  },
];

// body: `
// ALGORITMO ‚Äúdeclaracao‚Äù

// VAR
//     varInteiro: inteiro
//     varReal: real
//     varCaractere: caractere
//     varLogico: Logico
// INICIO
//     varInteiro <- 1
//     varReal <- 1.5
//     varCaractere <- ‚Äúteste‚Äù
//     varLogico <- VERDADEIRO
//     ESCREVAL(varInteiro, varReal, varCaractere, varLogico)

// FIMALGORITMO
//     `,

// TIPOS DE DADOS
/*
  Ol√°! Vamos come√ßar uma aula introdut√≥ria sobre tipos de dados usando Portugol.
  
  O que s√£o tipos de dados?
  Tipos de dados s√£o categorias que s√£o atribu√≠das a vari√°veis em um programa de computador. Isso ajuda a identificar o tipo de informa√ß√£o que uma vari√°vel armazena, permitindo ao computador tomar decis√µes sobre como tratar esses dados.
  
  Quais s√£o os tipos de dados b√°sicos no Portugol?
  
  INTEIRO: Armazena n√∫meros inteiros, sem casas decimais. Exemplo: -10, 0, 5, 100.
  REAL: Armazena n√∫meros reais, com casas decimais. Exemplo: -10,5, 0,25, 5,7.
  CARACTERE: Armazena um √∫nico caractere, entre aspas simples. Exemplo: 'a', 'Z', '#'.
  CADEIA: Armazena uma cadeia de caracteres, entre aspas duplas. Exemplo: "Ol√° mundo!", "12345".
  
  Ol√°! Vamos come√ßar uma aula introdut√≥ria sobre tipos de dados usando Portugol.
  
  O que s√£o tipos de dados?
  Tipos de dados s√£o categorias que s√£o atribu√≠das a vari√°veis em um programa de computador. Isso ajuda a identificar o tipo de informa√ß√£o que uma vari√°vel armazena, permitindo ao computador tomar decis√µes sobre como tratar esses dados.
  
  Quais s√£o os tipos de dados b√°sicos no Portugol?
  
  INTEIRO: Armazena n√∫meros inteiros, sem casas decimais. Exemplo: -10, 0, 5, 100.
  REAL: Armazena n√∫meros reais, com casas decimais. Exemplo: -10,5, 0,25, 5,7.
  CARACTERE: Armazena um √∫nico caractere, entre aspas simples. Exemplo: 'a', 'Z', '#'.
  CADEIA: Armazena uma cadeia de caracteres, entre aspas duplas. Exemplo: "Ol√° mundo!", "12345".
  Por que √© importante identificar o tipo de dado de uma vari√°vel?
  Identificar o tipo de dado de uma vari√°vel √© importante porque permite ao computador saber como tratar esses dados. Por exemplo, se voc√™ est√° trabalhando com uma vari√°vel INTEIRO, o computador sabe que essa vari√°vel armazena apenas n√∫meros inteiros, ent√£o ele s√≥ permitir√° que voc√™ execute opera√ß√µes matem√°ticas v√°lidas para n√∫meros inteiros. Se voc√™ tentar fazer uma opera√ß√£o inv√°lida, como dividir um n√∫mero inteiro por outro n√∫mero inteiro e obter um resultado com casas decimais, o computador apresentar√° um erro.
  
  Como declarar vari√°veis com tipos de dados no Portugol?
  Para declarar uma vari√°vel com um tipo de dado espec√≠fico, voc√™ precisa usar a seguinte sintaxe:
  TIPO NOME_DA_VARIAVEL;
  Exemplos:
  INTEIRO idade;
  REAL altura;
  CARACTERE primeiraLetra;
  CADEIA nomeCompleto;
  
  Em resumo, os tipos de dados s√£o importantes porque permitem que o computador saiba como tratar as informa√ß√µes armazenadas em vari√°veis. No Portugol, existem 4 tipos de dados b√°sicos: INTEIRO, REAL, CARACTERE e CADEIA. √â importante declarar as vari√°veis corretamente para garantir que o programa funcione de maneira correta.
  
  */
