<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "CAShapeLayer.addStrokeAnimations(for:context:):StrokeAnimation.swift">
      </ContextState>
      <ContextState
         contextName = "PathOutputNode.setPath(_:updateFrame:):PathOutputNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: path.cgPath())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShapeItemLayer.setupSolidFillAnimations(shapeLayer:context:):ShapeItemLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: BezierPath.ellipse(size: (shape.item as! Ellipse).size.keyframes[0].value.sizeValue, center: (shape.item as! Ellipse).position.keyframes[0].value.pointValue, direction: (shape.item as! Ellipse).direction).cgPath())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in CALayer.addScaleAnimations(from:context:):TransformAnimations.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeLayer.init(shapeLayer:context:):ShapeLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.defaultAnimation&lt;&#x3c4;_0_0, &#x3c4;_0_1&gt;(for:keyframes:value:context:):CALayer+addAnimation.swift">
      </ContextState>
      <ContextState
         contextName = "PreCompLayer.setupAnimations(context:):PreCompLayer.swift">
      </ContextState>
      <ContextState
         contextName = "TextLayer.setupSublayers(context:):TextLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "text.fillColorData!.cgColorValue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Array&lt;&#x3c4;_0_0&gt;.initializeNodeTree():ItemsExtension.swift">
      </ContextState>
      <ContextState
         contextName = "ExperimentalAnimationLayer.init(animation:imageProvider:):ExperimentalAnimationLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CAShapeLayer.addAnimations(for:context:):ShapeAnimation.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.addPositionAnimations(from:context:):TransformAnimations.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.setupGroups(from:parentGroup:context:):ShapeLayer.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeRenderLayer.rebuildContents(forFrame:):ShapeRenderLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: renderer.outputPath!)">
            </PersistentString>
            <PersistentString
               value = "UIBezierPath(cgPath: shapeLayer.path!)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "BaseCompositionLayer.setupChildAnimations(context:):BaseCompositionLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.addVisibilityAnimation(inFrame:outFrame:context:):VisibilityAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "context.timingConfiguration._layerOffset / context.animation.duration">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CALayer.setupLayerHierarchy(for:context:):CALayer+setupLayerHierarchy.swift">
      </ContextState>
      <ContextState
         contextName = "LayerAnimationContext.progressTime(for:):AnimationLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "layerTimeOffset(frame)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GroupNode.performAdditionalOutputUpdates(_:forceOutputUpdate:):GroupNode.swift">
      </ContextState>
      <ContextState
         contextName = "PathOutputNode.hasOutputUpdates(_:):PathOutputNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: newPath)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PassThroughOutputNode.outputPath.getter:PassThroughOutputNode.swift">
      </ContextState>
      <ContextState
         contextName = "LinkView.setContent(_:animated:):LinkView.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeItemLayer.setupSolidFillLayerHierarchy():ShapeItemLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: (shape.item as! Shape).path.keyframes[0].value.cgPath())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in CALayer.keyframeAnimation&lt;&#x3c4;_0_0, &#x3c4;_0_1&gt;(for:keyframes:value:context:):CALayer+addAnimation.swift">
      </ContextState>
      <ContextState
         contextName = "ExperimentalAnimationLayer.playAnimation(context:timingConfiguration:playbackState:):ExperimentalAnimationLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.timingFunctions&lt;&#x3c4;_0_0, &#x3c4;_0_1&gt;(for:property:context:):CALayer+addAnimation.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeRenderLayer.hasRenderUpdate(forFrame:):ShapeRenderLayer.swift">
      </ContextState>
      <ContextState
         contextName = "AnimatorNode.updateTree(_:forceUpdates:):AnimatorNode.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeCompositionLayer.init(shapeLayer:):ShapeCompositionLayer.swift">
      </ContextState>
      <ContextState
         contextName = "BaseCompositionLayer.setupAnimations(context:):BaseCompositionLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.path(for:):CALayer+addAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: path)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "BaseAnimationLayer.setupAnimations(context:):BaseAnimationLayer.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeItemLayer.setupAnimations(context:):ShapeItemLayer.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
