<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "closure #1 in CAShapeLayer.addAnimations(for:context:pathMultiplier:transformPath:):CustomPathAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: pathKeyframe.cgPath())">
            </PersistentString>
            <PersistentString
               value = "path.boundingBox">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in CAShapeLayer.addAnimations(for:context:pathMultiplier:):CombinedShapeAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: combinedPath)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in GradientRenderLayer.addGradientAnimations(for:type:context:):GradientAnimations.swift">
         <PersistentStrings>
            <PersistentString
               value = "gradient.colorConfiguration(from: colorComponents, type: type)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in MaskCompositionLayer.MaskLayer.setupAnimations(context:):MaskCompositionLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: maskPath)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GradientRenderLayer.addGradientAnimations(for:type:context:):GradientAnimations.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeNodeProperties.init(shape:):ShapeNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: shape.path.keyframes[0].value.cgPath())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShapeNode.rebuildOutputs(frame:):ShapeNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "properties.path">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MaskLayer.updateWithFrame(frame:forceUpdates:):MaskContainerLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: shapePath)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MaskCompositionLayer.init(masks:):MaskCompositionLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CoreAnimationLayer.init(animation:imageProvider:fontProvider:compatibilityTrackerMode:logger:):CoreAnimationLayer.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in CAShapeLayer.addAnimations(for:context:pathMultiplier:):RectangleAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: BezierPath.rectangle(position: keyframe.position.pointValue, size: keyframe.size.sizeValue, cornerRadius: keyframe.cornerRadius.cgFloatValue, direction: rectangle.direction).cgPath())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Array&lt;&#x3c4;_0_0&gt;.shapeRenderGroups.getter:ShapeLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.path&lt;&#x3c4;_0_0&gt;(keyframes:value:):CALayer+addAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIBezierPath(cgPath: path)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CAShapeLayer.addStrokeAnimations(for:context:):StrokeAnimation.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIColor(cgColor: strokeColor.keyframes[0].value.cgColorValue)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Collection&lt;&gt;.pairedLayersAndMasks(context:):CALayer+setupLayerHierarchy.swift">
      </ContextState>
      <ContextState
         contextName = "ShapeItemLayer.setupSolidFillAnimations(shapeLayer:context:):ShapeItemLayer.swift">
         <PersistentStrings>
            <PersistentString
               value = "fill.color.keyframes.last!.value.cgColorValue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShapeItemLayer.init(shape:otherItems:context:):ShapeItemLayer.swift">
      </ContextState>
      <ContextState
         contextName = "FillNode.rebuildOutputs(frame:):FillNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "fillProperties.color.value.cgColorValue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CALayer.keyframeAnimation&lt;&#x3c4;_0_0, &#x3c4;_0_1&gt;(for:keyframes:value:context:):CALayer+addAnimation.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.makeGroupLayers(from:parentGroup:context:):ShapeLayer.swift">
      </ContextState>
      <ContextState
         contextName = "CALayer.addPositionAnimations(from:context:):TransformAnimations.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in Array&lt;&#x3c4;_0_0&gt;.shapeRenderGroups.getter:ShapeLayer.swift">
      </ContextState>
      <ContextState
         contextName = "GroupLayer.init(group:inheritedItems:context:):ShapeLayer.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
