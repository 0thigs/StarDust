{"version":3,"names":["appendTransformProps","props","x","y","originX","originY","scaleX","scaleY","rotation","skewX","skewY","appendTransform","universal2axis","universal","axisX","axisY","defaultValue","coords","split","length","Array","isArray","isNaN","props2transform","translate","translateX","translateY","origin","scale","skew","console","warn","tr","or","sc","sk","transformToMatrix","transform","reset","append","t","parse","e","error","transformProps","toArray","extractTransform","identity"],"sources":["extractTransform.ts"],"sourcesContent":["import { append, appendTransform, identity, reset, toArray } from '../Matrix2D';\nimport { parse } from './transform';\nimport { NumberProp, TransformedProps, TransformProps } from './types';\n\nfunction appendTransformProps(props: TransformedProps) {\n  const { x, y, originX, originY, scaleX, scaleY, rotation, skewX, skewY } =\n    props;\n  appendTransform(\n    x + originX,\n    y + originY,\n    scaleX,\n    scaleY,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n  );\n}\n\nfunction universal2axis(\n  universal: NumberProp | NumberProp[] | undefined,\n  axisX: NumberProp | void,\n  axisY: NumberProp | void,\n  defaultValue?: number,\n): [number, number] {\n  let x;\n  let y;\n  if (typeof universal === 'number') {\n    x = y = universal;\n  } else if (typeof universal === 'string') {\n    const coords = universal.split(/\\s*,\\s*/);\n    if (coords.length === 2) {\n      x = +coords[0];\n      y = +coords[1];\n    } else if (coords.length === 1) {\n      x = y = +coords[0];\n    }\n  } else if (Array.isArray(universal)) {\n    if (universal.length === 2) {\n      x = +universal[0];\n      y = +universal[1];\n    } else if (universal.length === 1) {\n      x = y = +universal[0];\n    }\n  }\n\n  axisX = +axisX;\n  if (!isNaN(axisX)) {\n    x = axisX;\n  }\n\n  axisY = +axisY;\n  if (!isNaN(axisY)) {\n    y = axisY;\n  }\n\n  return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nexport function props2transform(\n  props: TransformProps,\n): TransformedProps | null {\n  const {\n    rotation,\n    translate,\n    translateX,\n    translateY,\n    origin,\n    originX,\n    originY,\n    scale,\n    scaleX,\n    scaleY,\n    skew,\n    skewX,\n    skewY,\n    x,\n    y,\n  } = props;\n  if (\n    rotation == null &&\n    translate == null &&\n    translateX == null &&\n    translateY == null &&\n    origin == null &&\n    originX == null &&\n    originY == null &&\n    scale == null &&\n    scaleX == null &&\n    scaleY == null &&\n    skew == null &&\n    skewX == null &&\n    skewY == null &&\n    x == null &&\n    y == null\n  ) {\n    return null;\n  }\n\n  if (Array.isArray(x) || Array.isArray(y)) {\n    console.warn(\n      'Passing SvgLengthList to x or y attribute where SvgLength expected',\n    );\n  }\n  const tr = universal2axis(\n    translate,\n    translateX || (Array.isArray(x) ? x[0] : x),\n    translateY || (Array.isArray(y) ? y[0] : y),\n  );\n  const or = universal2axis(origin, originX, originY);\n  const sc = universal2axis(scale, scaleX, scaleY, 1);\n  const sk = universal2axis(skew, skewX, skewY);\n\n  return {\n    rotation: rotation == null ? 0 : +rotation || 0,\n    originX: or[0],\n    originY: or[1],\n    scaleX: sc[0],\n    scaleY: sc[1],\n    skewX: sk[0],\n    skewY: sk[1],\n    x: tr[0],\n    y: tr[1],\n  };\n}\n\nexport function transformToMatrix(\n  props: TransformedProps | null,\n  transform: number[] | string | TransformProps | void | null | undefined,\n): [number, number, number, number, number, number] | null {\n  if (!props && !transform) {\n    return null;\n  }\n  reset();\n  props && appendTransformProps(props);\n\n  if (transform) {\n    if (Array.isArray(transform)) {\n      if (typeof transform[0] === 'number') {\n        append(\n          transform[0],\n          transform[1],\n          transform[2],\n          transform[3],\n          transform[4],\n          transform[5],\n        );\n      }\n      // noop for react-native transform arrays, let animated handle them\n    } else if (typeof transform === 'string') {\n      try {\n        const t = parse(transform);\n        append(t[0], t[3], t[1], t[4], t[2], t[5]);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      const transformProps = props2transform(transform);\n      transformProps && appendTransformProps(transformProps);\n    }\n  }\n\n  return toArray();\n}\n\nexport default function extractTransform(\n  props: number[] | string | TransformProps,\n) {\n  if (Array.isArray(props)) {\n    return props;\n  }\n  if (typeof props === 'string') {\n    try {\n      const t = parse(props);\n      return [t[0], t[3], t[1], t[4], t[2], t[5]];\n    } catch (e) {\n      console.error(e);\n      return identity;\n    }\n  }\n  return transformToMatrix(props2transform(props), props.transform);\n}\n"],"mappings":"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"}