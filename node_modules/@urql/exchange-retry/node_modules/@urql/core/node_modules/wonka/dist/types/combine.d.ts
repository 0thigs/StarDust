import { Source, TypeOfSource } from './types';
declare type TypeOfSourceArray<T extends readonly [...any[]]> = T extends [infer Head, ...infer Tail] ? [TypeOfSource<Head>, ...TypeOfSourceArray<Tail>] : [];
export declare function zip<Sources extends readonly [...Source<any>[]]>(sources: [...Sources]): Source<TypeOfSourceArray<Sources>>;
export declare function zip<Sources extends {
    [prop: string]: Source<any>;
}>(sources: Sources): Source<{
    [Property in keyof Sources]: TypeOfSource<Sources[Property]>;
}>;
export declare function combine<Sources extends Source<any>[]>(...sources: Sources): Source<TypeOfSourceArray<Sources>>;
export {};
