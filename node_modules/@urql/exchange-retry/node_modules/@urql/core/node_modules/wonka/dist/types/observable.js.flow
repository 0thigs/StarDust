// @flow

import type { Source } from "./types";
declare interface ObservableSubscription {
  closed?: boolean;
  unsubscribe(): void;
}
declare interface ObservableObserver<T> {
  next(value: T): void;
  error(error: any): void;
  complete(): void;
}
declare interface Observable<T> {
  subscribe(observer: ObservableObserver<T>): ObservableSubscription;
}
declare export function fromObservable<T>(input: Observable<T>): Source<T>;
declare export function toObservable<T>(source: Source<T>): Observable<T>;
