import { Source } from './types';
interface ObservableSubscription {
    closed?: boolean;
    unsubscribe(): void;
}
interface ObservableObserver<T> {
    next(value: T): void;
    error(error: any): void;
    complete(): void;
}
interface Observable<T> {
    subscribe(observer: ObservableObserver<T>): ObservableSubscription;
}
export declare function fromObservable<T>(input: Observable<T>): Source<T>;
export declare function toObservable<T>(source: Source<T>): Observable<T>;
export {};
