{"version":3,"file":"createExoticTransformer.js","names":["createExoticTransformer","nodeModulesPaths","transpileModules","nodeModuleMatcher","createModuleMatcher","folders","moduleIds","impossibleNodeModuleMatcher","transform","createMultiRuleTransformer","getRuleType","filename","test","rules","name","type","loaders","passthroughModule","warn","createReactNativeMatcher","reactNativeModule","createExpoMatcher","expoModule","createKnownCommunityMatcher","untranspiledModule","app","getCacheKey"],"sources":["../../src/transformer/createExoticTransformer.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\nimport { BabelTransformer } from 'metro-babel-transformer';\n\nimport {\n  createExpoMatcher,\n  createKnownCommunityMatcher,\n  createModuleMatcher,\n  createReactNativeMatcher,\n} from './createMatcher';\nimport { createMultiRuleTransformer, loaders } from './createMultiRuleTransformer';\nimport { getCacheKey } from './getCacheKey';\n\n/**\n * Create an experimental multi-rule transformer for a React Native app.\n *\n * @example\n * ```\n * module.exports = createExoticTransformer({\n *    nodeModulesPaths: ['react-native'],\n *    transpileModules: ['@stripe/stripe-react-native'],\n * });\n * ```\n *\n * @param props.nodeModulesPaths paths to node_modules folders, relative to project root. Default: `['node_modules']`\n * @param props.transpileModules matchers for module names that should be transpiled using the project Babel configuration. Example: `['@stripe/stripe-react-native']`\n * @returns a Metro `transformer` function and default `getCacheKey` function.\n */\nexport function createExoticTransformer({\n  nodeModulesPaths,\n  transpileModules,\n}: {\n  nodeModulesPaths?: string[];\n  transpileModules?: string[];\n}): BabelTransformer {\n  if (!nodeModulesPaths) {\n    nodeModulesPaths = ['node_modules'];\n  }\n  // Match any node modules, or monorepo module.\n  const nodeModuleMatcher = createModuleMatcher({ folders: nodeModulesPaths, moduleIds: [] });\n\n  // Match node modules which are so oddly written that we must\n  // transpile them with every possible option (most expensive).\n  const impossibleNodeModuleMatcher = createModuleMatcher({\n    moduleIds: [\n      // victory is too wild\n      // SyntaxError in ../../node_modules/victory-native/lib/components/victory-primitives/bar.js: Missing semicolon. (9:1)\n      'victory',\n      // vector icons has some hidden issues that break NCL\n      '@expo/vector-icons',\n      ...(transpileModules || []),\n    ],\n    folders: nodeModulesPaths,\n  });\n\n  const transform = createMultiRuleTransformer({\n    // Specify which rules to use on a per-file basis, basically\n    // this is used to determine which modules are node modules, and which are application code.\n    getRuleType({ filename }) {\n      // Is a node module, and is not one of the impossible modules.\n      return nodeModuleMatcher.test(filename) && !impossibleNodeModuleMatcher.test(filename)\n        ? 'module'\n        : 'app';\n    },\n\n    // Order is very important, we use wild card matchers to transpile\n    // \"every unhandled node module\" and \"every unhandled application module\".\n    rules: [\n      // Match bob compiler modules, use the passthrough loader.\n      {\n        name: 'bob',\n        type: 'module',\n        test: createModuleMatcher({ moduleIds: ['.*/lib/commonjs/'], folders: nodeModulesPaths }),\n        transform: loaders.passthroughModule,\n        warn: true,\n      },\n      // Match React Native modules, convert them statically using sucrase.\n      {\n        name: 'react-native',\n        type: 'module',\n        test: createReactNativeMatcher({ folders: nodeModulesPaths }),\n        transform: loaders.reactNativeModule,\n        warn: true,\n      },\n      // Match Expo SDK modules, convert them statically using sucrase.\n      {\n        name: 'expo-module',\n        type: 'module',\n        test: createExpoMatcher({ folders: nodeModulesPaths }),\n        transform: loaders.expoModule,\n        warn: true,\n      },\n      // Match known problematic modules, convert them statically using an expensive, dynamic sucrase.\n      {\n        name: 'sucrase',\n        type: 'module',\n        test: createKnownCommunityMatcher({\n          folders: nodeModulesPaths,\n        }),\n        transform: loaders.untranspiledModule,\n        warn: true,\n      },\n      // Pass through any unhandled node modules as passthrough, this is where the most savings occur.\n      // Ideally, you want your project to pass all node modules through this loader.\n      // This should be the last \"module\" rule.\n      // Message library authors and ask them to ship their modules as pre-transpiled\n      // commonjs, to improve the development speed of your project.\n      {\n        name: 'skip-module',\n        type: 'module',\n        test: () => true,\n        transform: loaders.passthroughModule,\n      },\n      // All application code should be transpiled with the user's babel preset,\n      // this is the most expensive operation but provides the most customization to the user.\n      // The goal is to use this as sparingly as possible.\n      {\n        name: 'babel',\n        test: () => true,\n        transform: loaders.app,\n      },\n    ],\n  });\n\n  return {\n    transform,\n    getCacheKey,\n  };\n}\n"],"mappings":";;;;;;;AAGA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAMA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAVA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,uBAAT,CAAiC;EACtCC,gBADsC;EAEtCC;AAFsC,CAAjC,EAMc;EACnB,IAAI,CAACD,gBAAL,EAAuB;IACrBA,gBAAgB,GAAG,CAAC,cAAD,CAAnB;EACD,CAHkB,CAInB;;;EACA,MAAME,iBAAiB,GAAG,IAAAC,oCAAA,EAAoB;IAAEC,OAAO,EAAEJ,gBAAX;IAA6BK,SAAS,EAAE;EAAxC,CAApB,CAA1B,CALmB,CAOnB;EACA;;EACA,MAAMC,2BAA2B,GAAG,IAAAH,oCAAA,EAAoB;IACtDE,SAAS,EAAE,CACT;IACA;IACA,SAHS,EAIT;IACA,oBALS,EAMT,IAAIJ,gBAAgB,IAAI,EAAxB,CANS,CAD2C;IAStDG,OAAO,EAAEJ;EAT6C,CAApB,CAApC;EAYA,MAAMO,SAAS,GAAG,IAAAC,wDAAA,EAA2B;IAC3C;IACA;IACAC,WAAW,CAAC;MAAEC;IAAF,CAAD,EAAe;MACxB;MACA,OAAOR,iBAAiB,CAACS,IAAlB,CAAuBD,QAAvB,KAAoC,CAACJ,2BAA2B,CAACK,IAA5B,CAAiCD,QAAjC,CAArC,GACH,QADG,GAEH,KAFJ;IAGD,CAR0C;;IAU3C;IACA;IACAE,KAAK,EAAE,CACL;IACA;MACEC,IAAI,EAAE,KADR;MAEEC,IAAI,EAAE,QAFR;MAGEH,IAAI,EAAE,IAAAR,oCAAA,EAAoB;QAAEE,SAAS,EAAE,CAAC,kBAAD,CAAb;QAAmCD,OAAO,EAAEJ;MAA5C,CAApB,CAHR;MAIEO,SAAS,EAAEQ,qCAAA,CAAQC,iBAJrB;MAKEC,IAAI,EAAE;IALR,CAFK,EASL;IACA;MACEJ,IAAI,EAAE,cADR;MAEEC,IAAI,EAAE,QAFR;MAGEH,IAAI,EAAE,IAAAO,yCAAA,EAAyB;QAAEd,OAAO,EAAEJ;MAAX,CAAzB,CAHR;MAIEO,SAAS,EAAEQ,qCAAA,CAAQI,iBAJrB;MAKEF,IAAI,EAAE;IALR,CAVK,EAiBL;IACA;MACEJ,IAAI,EAAE,aADR;MAEEC,IAAI,EAAE,QAFR;MAGEH,IAAI,EAAE,IAAAS,kCAAA,EAAkB;QAAEhB,OAAO,EAAEJ;MAAX,CAAlB,CAHR;MAIEO,SAAS,EAAEQ,qCAAA,CAAQM,UAJrB;MAKEJ,IAAI,EAAE;IALR,CAlBK,EAyBL;IACA;MACEJ,IAAI,EAAE,SADR;MAEEC,IAAI,EAAE,QAFR;MAGEH,IAAI,EAAE,IAAAW,4CAAA,EAA4B;QAChClB,OAAO,EAAEJ;MADuB,CAA5B,CAHR;MAMEO,SAAS,EAAEQ,qCAAA,CAAQQ,kBANrB;MAOEN,IAAI,EAAE;IAPR,CA1BK,EAmCL;IACA;IACA;IACA;IACA;IACA;MACEJ,IAAI,EAAE,aADR;MAEEC,IAAI,EAAE,QAFR;MAGEH,IAAI,EAAE,MAAM,IAHd;MAIEJ,SAAS,EAAEQ,qCAAA,CAAQC;IAJrB,CAxCK,EA8CL;IACA;IACA;IACA;MACEH,IAAI,EAAE,OADR;MAEEF,IAAI,EAAE,MAAM,IAFd;MAGEJ,SAAS,EAAEQ,qCAAA,CAAQS;IAHrB,CAjDK;EAZoC,CAA3B,CAAlB;EAqEA,OAAO;IACLjB,SADK;IAELkB,WAAW,EAAXA;EAFK,CAAP;AAID"}