{"version":3,"file":"getWatchFolders.js","names":["globAllPackageJsonPaths","workspaceProjectRoot","linkedPackages","map","glob","globSync","path","join","replace","cwd","absolute","ignore","pkgPath","JsonFile","read","flat","filter","Boolean","p","getWorkspacePackagesArray","workspaces","Array","isArray","assert","packages","resolveAllWorkspacePackageJsonPaths","rootPackageJsonFilePath","rootPackageJson","getWatchFolders","projectRoot","workspaceRoot","getWorkspaceRoot","resolve","length","uniqueItems","pkg","dirname","items","Set"],"sources":["../src/getWatchFolders.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport assert from 'assert';\nimport { sync as globSync } from 'glob';\nimport path from 'path';\n\nimport { getWorkspaceRoot } from './getModulesPaths';\n\n/**\n * @param workspaceProjectRoot Root file path for the yarn workspace\n * @param linkedPackages List of folders that contain linked node modules, ex: `['packages/*', 'apps/*']`\n * @returns List of valid package.json file paths, ex: `['/Users/me/app/apps/my-app/package.json', '/Users/me/app/packages/my-package/package.json']`\n */\nexport function globAllPackageJsonPaths(\n  workspaceProjectRoot: string,\n  linkedPackages: string[]\n): string[] {\n  return linkedPackages\n    .map((glob) => {\n      return globSync(path.join(glob, 'package.json').replace(/\\\\/g, '/'), {\n        cwd: workspaceProjectRoot,\n        absolute: true,\n        ignore: ['**/@(Carthage|Pods|node_modules)/**'],\n      }).map((pkgPath) => {\n        try {\n          JsonFile.read(pkgPath);\n          return pkgPath;\n        } catch {\n          // Skip adding path if the package.json is invalid or cannot be read.\n        }\n        return null;\n      });\n    })\n    .flat()\n    .filter(Boolean)\n    .map((p) => path.join(p as string));\n}\n\nfunction getWorkspacePackagesArray({ workspaces }: any): string[] {\n  if (Array.isArray(workspaces)) {\n    return workspaces;\n  }\n\n  assert(workspaces?.packages, 'Could not find a `workspaces` object in the root package.json');\n\n  return workspaces.packages;\n}\n\n/**\n * @param workspaceProjectRoot root file path for a yarn workspace.\n * @returns list of package.json file paths that are linked to the yarn workspace.\n */\nexport function resolveAllWorkspacePackageJsonPaths(workspaceProjectRoot: string) {\n  try {\n    const rootPackageJsonFilePath = path.join(workspaceProjectRoot, 'package.json');\n    // Could throw if package.json is invalid.\n    const rootPackageJson = JsonFile.read(rootPackageJsonFilePath);\n\n    // Extract the \"packages\" array or use \"workspaces\" as packages array (yarn workspaces spec).\n    const packages = getWorkspacePackagesArray(rootPackageJson);\n\n    // Glob all package.json files and return valid paths.\n    return globAllPackageJsonPaths(workspaceProjectRoot, packages);\n  } catch {\n    return [];\n  }\n}\n\n/**\n * @param projectRoot file path to app's project root\n * @returns list of node module paths to watch in Metro bundler, ex: `['/Users/me/app/node_modules/', '/Users/me/app/apps/my-app/', '/Users/me/app/packages/my-package/']`\n */\nexport function getWatchFolders(projectRoot: string): string[] {\n  const workspaceRoot = getWorkspaceRoot(path.resolve(projectRoot));\n  // Rely on default behavior in standard projects.\n  if (!workspaceRoot) {\n    return [];\n  }\n\n  const packages = resolveAllWorkspacePackageJsonPaths(workspaceRoot);\n  if (!packages.length) {\n    return [];\n  }\n\n  return uniqueItems([\n    path.join(workspaceRoot, 'node_modules'),\n    ...packages.map((pkg) => path.dirname(pkg)),\n  ]);\n}\n\nfunction uniqueItems(items: string[]): string[] {\n  return [...new Set(items)];\n}\n"],"mappings":";;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASA,uBAAT,CACLC,oBADK,EAELC,cAFK,EAGK;EACV,OAAOA,cAAc,CAClBC,GADI,CACCC,IAAD,IAAU;IACb,OAAO,IAAAC,YAAA,EAASC,eAAA,CAAKC,IAAL,CAAUH,IAAV,EAAgB,cAAhB,EAAgCI,OAAhC,CAAwC,KAAxC,EAA+C,GAA/C,CAAT,EAA8D;MACnEC,GAAG,EAAER,oBAD8D;MAEnES,QAAQ,EAAE,IAFyD;MAGnEC,MAAM,EAAE,CAAC,qCAAD;IAH2D,CAA9D,EAIJR,GAJI,CAICS,OAAD,IAAa;MAClB,IAAI;QACFC,mBAAA,CAASC,IAAT,CAAcF,OAAd;;QACA,OAAOA,OAAP;MACD,CAHD,CAGE,MAAM,CACN;MACD;;MACD,OAAO,IAAP;IACD,CAZM,CAAP;EAaD,CAfI,EAgBJG,IAhBI,GAiBJC,MAjBI,CAiBGC,OAjBH,EAkBJd,GAlBI,CAkBCe,CAAD,IAAOZ,eAAA,CAAKC,IAAL,CAAUW,CAAV,CAlBP,CAAP;AAmBD;;AAED,SAASC,yBAAT,CAAmC;EAAEC;AAAF,CAAnC,EAAkE;EAChE,IAAIC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAJ,EAA+B;IAC7B,OAAOA,UAAP;EACD;;EAED,IAAAG,iBAAA,EAAOH,UAAP,aAAOA,UAAP,uBAAOA,UAAU,CAAEI,QAAnB,EAA6B,+DAA7B;EAEA,OAAOJ,UAAU,CAACI,QAAlB;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASC,mCAAT,CAA6CxB,oBAA7C,EAA2E;EAChF,IAAI;IACF,MAAMyB,uBAAuB,GAAGpB,eAAA,CAAKC,IAAL,CAAUN,oBAAV,EAAgC,cAAhC,CAAhC,CADE,CAEF;;;IACA,MAAM0B,eAAe,GAAGd,mBAAA,CAASC,IAAT,CAAcY,uBAAd,CAAxB,CAHE,CAKF;;;IACA,MAAMF,QAAQ,GAAGL,yBAAyB,CAACQ,eAAD,CAA1C,CANE,CAQF;;IACA,OAAO3B,uBAAuB,CAACC,oBAAD,EAAuBuB,QAAvB,CAA9B;EACD,CAVD,CAUE,MAAM;IACN,OAAO,EAAP;EACD;AACF;AAED;AACA;AACA;AACA;;;AACO,SAASI,eAAT,CAAyBC,WAAzB,EAAwD;EAC7D,MAAMC,aAAa,GAAG,IAAAC,mCAAA,EAAiBzB,eAAA,CAAK0B,OAAL,CAAaH,WAAb,CAAjB,CAAtB,CAD6D,CAE7D;;EACA,IAAI,CAACC,aAAL,EAAoB;IAClB,OAAO,EAAP;EACD;;EAED,MAAMN,QAAQ,GAAGC,mCAAmC,CAACK,aAAD,CAApD;;EACA,IAAI,CAACN,QAAQ,CAACS,MAAd,EAAsB;IACpB,OAAO,EAAP;EACD;;EAED,OAAOC,WAAW,CAAC,CACjB5B,eAAA,CAAKC,IAAL,CAAUuB,aAAV,EAAyB,cAAzB,CADiB,EAEjB,GAAGN,QAAQ,CAACrB,GAAT,CAAcgC,GAAD,IAAS7B,eAAA,CAAK8B,OAAL,CAAaD,GAAb,CAAtB,CAFc,CAAD,CAAlB;AAID;;AAED,SAASD,WAAT,CAAqBG,KAArB,EAAgD;EAC9C,OAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQD,KAAR,CAAJ,CAAP;AACD"}