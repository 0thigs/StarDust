{"version":3,"sources":["../../../../src/start/server/DevServerManager.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { logEventAsync } from '../../utils/analytics/rudderstackClient';\nimport { ProjectPrerequisite } from '../doctor/Prerequisite';\nimport * as AndroidDebugBridge from '../platforms/android/adb';\nimport { BundlerDevServer, BundlerStartOptions } from './BundlerDevServer';\nimport { getPlatformBundlers } from './platformBundlers';\n\nconst debug = require('debug')('expo:start:server:devServerManager') as typeof console.log;\n\nexport type MultiBundlerStartOptions = {\n  type: keyof typeof BUNDLERS;\n  options?: BundlerStartOptions;\n}[];\n\nconst devServers: BundlerDevServer[] = [];\n\nconst BUNDLERS = {\n  webpack: () =>\n    require('./webpack/WebpackBundlerDevServer')\n      .WebpackBundlerDevServer as typeof import('./webpack/WebpackBundlerDevServer').WebpackBundlerDevServer,\n  metro: () =>\n    require('./metro/MetroBundlerDevServer')\n      .MetroBundlerDevServer as typeof import('./metro/MetroBundlerDevServer').MetroBundlerDevServer,\n};\n\n/** Manages interacting with multiple dev servers. */\nexport class DevServerManager {\n  private projectPrerequisites: ProjectPrerequisite[] = [];\n\n  constructor(\n    public projectRoot: string,\n    /** Keep track of the original CLI options for bundlers that are started interactively. */\n    public options: BundlerStartOptions\n  ) {\n    this.watchBabelConfig();\n  }\n\n  private watchBabelConfig() {\n    const notifier = new FileNotifier(\n      this.projectRoot,\n      [\n        './babel.config.js',\n        './babel.config.json',\n        './.babelrc.json',\n        './.babelrc',\n        './.babelrc.js',\n      ],\n      {\n        additionalWarning: chalk` You may need to clear the bundler cache with the {bold --clear} flag for your changes to take effect.`,\n      }\n    );\n\n    notifier.startObserving();\n\n    return notifier;\n  }\n\n  /** Lazily load and assert a project-level prerequisite. */\n  async ensureProjectPrerequisiteAsync(PrerequisiteClass: typeof ProjectPrerequisite) {\n    let prerequisite = this.projectPrerequisites.find(\n      (prerequisite) => prerequisite instanceof PrerequisiteClass\n    );\n    if (!prerequisite) {\n      prerequisite = new PrerequisiteClass(this.projectRoot);\n      this.projectPrerequisites.push(prerequisite);\n    }\n    await prerequisite.assertAsync();\n  }\n\n  /**\n   * Sends a message over web sockets to all connected devices,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params extra event info to send over the socket.\n   */\n  broadcastMessage(method: 'reload' | 'devMenu' | 'sendDevCommand', params?: Record<string, any>) {\n    devServers.forEach((server) => {\n      server.broadcastMessage(method, params);\n    });\n  }\n\n  /** Get the port for the dev server (either Webpack or Metro) that is hosting code for React Native runtimes. */\n  getNativeDevServerPort() {\n    const server = devServers.find((server) => server.isTargetingNative());\n    return server?.getInstance()?.location.port ?? null;\n  }\n\n  /** Get the first server that targets web. */\n  getWebDevServer() {\n    const server = devServers.find((server) => server.isTargetingWeb());\n    return server ?? null;\n  }\n\n  getDefaultDevServer(): BundlerDevServer {\n    // Return the first native dev server otherwise return the first dev server.\n    const server = devServers.find((server) => server.isTargetingNative());\n    const defaultServer = server ?? devServers[0];\n    assert(defaultServer, 'No dev servers are running');\n    return defaultServer;\n  }\n\n  async ensureWebDevServerRunningAsync() {\n    const [server] = devServers.filter((server) => server.isTargetingWeb());\n    if (server) {\n      return;\n    }\n    const { exp } = getConfig(this.projectRoot, {\n      skipPlugins: true,\n      skipSDKVersionRequirement: true,\n    });\n    const bundler = getPlatformBundlers(exp).web;\n    debug(`Starting ${bundler} dev server for web`);\n    return this.startAsync([\n      {\n        type: bundler,\n        options: this.options,\n      },\n    ]);\n  }\n\n  /** Start all dev servers. */\n  async startAsync(startOptions: MultiBundlerStartOptions): Promise<ExpoConfig> {\n    const { exp } = getConfig(this.projectRoot);\n\n    await logEventAsync('Start Project', {\n      sdkVersion: exp.sdkVersion ?? null,\n    });\n\n    const platformBundlers = getPlatformBundlers(exp);\n\n    // Start all dev servers...\n    for (const { type, options } of startOptions) {\n      const BundlerDevServerClass = await BUNDLERS[type]();\n      const server = new BundlerDevServerClass(\n        this.projectRoot,\n        platformBundlers,\n        !!options?.devClient\n      );\n      await server.startAsync(options ?? this.options);\n      devServers.push(server);\n    }\n\n    return exp;\n  }\n\n  /** Stop all servers including ADB. */\n  async stopAsync(): Promise<void> {\n    await Promise.allSettled([\n      // Stop all dev servers\n      ...devServers.map((server) => server.stopAsync()),\n      // Stop ADB\n      AndroidDebugBridge.getServer().stopAsync(),\n    ]);\n  }\n}\n"],"names":["AndroidDebugBridge","debug","require","devServers","BUNDLERS","webpack","WebpackBundlerDevServer","metro","MetroBundlerDevServer","DevServerManager","constructor","projectRoot","options","projectPrerequisites","watchBabelConfig","notifier","FileNotifier","additionalWarning","chalk","startObserving","ensureProjectPrerequisiteAsync","PrerequisiteClass","prerequisite","find","push","assertAsync","broadcastMessage","method","params","forEach","server","getNativeDevServerPort","isTargetingNative","getInstance","location","port","getWebDevServer","isTargetingWeb","getDefaultDevServer","defaultServer","assert","ensureWebDevServerRunningAsync","filter","exp","getConfig","skipPlugins","skipSDKVersionRequirement","bundler","getPlatformBundlers","web","startAsync","type","startOptions","logEventAsync","sdkVersion","platformBundlers","BundlerDevServerClass","devClient","stopAsync","Promise","allSettled","map","getServer"],"mappings":"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"}