{"version":3,"file":"clientLogsMiddleware.js","names":["clientLogsMiddleware","logger","req","res","next","deviceId","headers","deviceName","expoPlatform","writeHead","end","body","handleDeviceLogs","toString","logs","devicePlatform","error","tag","stack","isIgnorableBugReportingExtraData","length","isAppRegistryStartupMessage","test","getDevicePlatformFromAppRegistryStartupMessage","match","formatDevicePlatform","platform","formatted","ios","android","web","chalk","bold","log","Array","isArray","level","platformId","args","map","obj","JSON","stringify","logLevel","groupDepth","shouldHide","includesStack"],"sources":["../../src/middleware/clientLogsMiddleware.ts"],"sourcesContent":["import Log from '@expo/bunyan';\nimport chalk from 'chalk';\nimport { HandleFunction } from 'connect';\nimport http from 'http';\n\ntype ConsoleLogLevel = 'info' | 'warn' | 'error' | 'debug';\n\nexport default function clientLogsMiddleware(logger: Log): HandleFunction {\n  return function (\n    req: http.IncomingMessage & { body?: any },\n    res: http.ServerResponse,\n    next: (err?: Error) => void\n  ) {\n    try {\n      const deviceId = req.headers['device-id'];\n      const deviceName = req.headers['device-name'];\n      const expoPlatform = req.headers['expo-platform'];\n      if (!deviceId) {\n        res.writeHead(400).end('Missing Device-Id.');\n        return;\n      }\n      if (!deviceName) {\n        res.writeHead(400).end('Missing Device-Name.');\n        return;\n      }\n      if (!req.body) {\n        res.writeHead(400).end('Missing request body.');\n        return;\n      }\n      handleDeviceLogs(logger, {\n        deviceId: deviceId.toString(),\n        deviceName: deviceName.toString(),\n        logs: req.body,\n        devicePlatform: expoPlatform?.toString(),\n      });\n    } catch (error: any) {\n      logger.error({ tag: 'expo' }, `Error getting device logs: ${error} ${error.stack}`);\n      next(error);\n    }\n    res.end('Success');\n  };\n}\n\nfunction isIgnorableBugReportingExtraData(body: any[]): boolean {\n  return body.length === 2 && body[0] === 'BugReporting extraData:';\n}\n\nfunction isAppRegistryStartupMessage(body: any[]): boolean {\n  return (\n    body.length === 1 &&\n    (/^Running application \"main\" with appParams:/.test(body[0]) ||\n      /^Running \"main\" with \\{/.test(body[0]))\n  );\n}\n\nexport function getDevicePlatformFromAppRegistryStartupMessage(body: string[]): string | null {\n  if (body.length === 1 && typeof body[0] === 'string') {\n    // Dangerously pick the platform out of the request URL\n    // like: http:\\\\\\\\/\\\\\\\\/192.168.6.113:19000\\\\\\\\/index.bundle&platform=android\\dev=true&hot=false&minify=false\n    return body[0].match(/[?|&]platform=(\\w+)[&|\\\\]/)?.[1] ?? null;\n  }\n  return null;\n}\n\nfunction formatDevicePlatform(platform: string): string {\n  // Map the ID like \"ios\" to \"iOS\"\n  const formatted = { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform;\n  return `${chalk.bold(formatted)} `;\n}\n\nfunction handleDeviceLogs(\n  logger: Log,\n  {\n    deviceId,\n    deviceName,\n    logs,\n    devicePlatform,\n  }: { deviceId: string; deviceName: string; devicePlatform?: string; logs: any }\n): void {\n  for (const log of logs) {\n    let body = Array.isArray(log.body) ? log.body : [log.body];\n    let { level } = log;\n\n    if (isIgnorableBugReportingExtraData(body)) {\n      level = 'debug';\n    }\n    if (isAppRegistryStartupMessage(body)) {\n      // If the installed version of expo is sending back the `device-platform` header\n      // then use that, otherwise find it in the query string.\n      const platformId = devicePlatform\n        ? devicePlatform\n        : getDevicePlatformFromAppRegistryStartupMessage(body);\n\n      const platform = platformId ? formatDevicePlatform(platformId) : '';\n      body = [`${platform}Running app on ${deviceName}`];\n    }\n\n    const args = body.map((obj: any) => {\n      if (typeof obj === 'undefined') {\n        return 'undefined';\n      }\n      if (obj === 'null') {\n        return 'null';\n      }\n      if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean') {\n        return obj;\n      }\n      try {\n        return JSON.stringify(obj);\n      } catch {\n        return obj.toString();\n      }\n    });\n    const logLevel =\n      level === 'info' || level === 'warn' || level === 'error' || level === 'debug'\n        ? (level as ConsoleLogLevel)\n        : 'info';\n    logger[logLevel](\n      {\n        tag: 'device',\n        deviceId,\n        deviceName,\n        groupDepth: log.groupDepth,\n        shouldHide: log.shouldHide,\n        includesStack: log.includesStack,\n      },\n      ...args\n    );\n  }\n}\n"],"mappings":"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"}