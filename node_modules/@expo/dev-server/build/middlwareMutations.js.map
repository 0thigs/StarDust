{"version":3,"file":"middlwareMutations.js","names":["prependMiddleware","app","middleware","use","stack","unshift","pop","replaceMiddlewareWith","sourceMiddleware","targetMiddleware","item","find","handle"],"sources":["../src/middlwareMutations.ts"],"sourcesContent":["import type { Server as ConnectServer, HandleFunction } from 'connect';\n\n/**\n * Prepends a `middleware` to current server middleware stack.\n *\n * @param app connect app server instance\n * @param middleware target middleware to be prepended\n */\nexport function prependMiddleware(app: ConnectServer, middleware: HandleFunction) {\n  app.use(middleware);\n  app.stack.unshift(app.stack.pop()!);\n}\n\n/**\n * Replaces source middleware with a new middlware in connect app\n *\n * @param app connect app server instance\n * @param sourceMiddleware source middlware to be matched and replaces\n * @param targetMiddleware new middlware\n */\nexport function replaceMiddlewareWith(\n  app: ConnectServer,\n  sourceMiddleware: HandleFunction,\n  targetMiddleware: HandleFunction\n) {\n  const item = app.stack.find((middleware) => middleware.handle === sourceMiddleware);\n  if (item) {\n    item.handle = targetMiddleware;\n  }\n}\n"],"mappings":";;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CAA2BC,GAA3B,EAA+CC,UAA/C,EAA2E;EAChFD,GAAG,CAACE,GAAJ,CAAQD,UAAR;EACAD,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBJ,GAAG,CAACG,KAAJ,CAAUE,GAAV,EAAlB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,qBAAT,CACLN,GADK,EAELO,gBAFK,EAGLC,gBAHK,EAIL;EACA,MAAMC,IAAI,GAAGT,GAAG,CAACG,KAAJ,CAAUO,IAAV,CAAgBT,UAAD,IAAgBA,UAAU,CAACU,MAAX,KAAsBJ,gBAArD,CAAb;;EACA,IAAIE,IAAJ,EAAU;IACRA,IAAI,CAACE,MAAL,GAAcH,gBAAd;EACD;AACF"}