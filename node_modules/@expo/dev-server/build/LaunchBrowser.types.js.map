{"version":3,"file":"LaunchBrowser.types.js","names":["LaunchBrowserTypes"],"sources":["../src/LaunchBrowser.types.ts"],"sourcesContent":["export interface LaunchBrowserInstance {\n  close: () => Promise<void>;\n}\n\n/**\n * Supported browser types\n */\nexport enum LaunchBrowserTypes {\n  CHROME,\n  EDGE,\n}\n\n/**\n * Internal browser implementation constraints\n */\nexport interface LaunchBrowserImpl {\n  /**\n   * Return whether the given `browserType` is supported\n   */\n  isSupportedBrowser: (browserType: LaunchBrowserTypes) => Promise<boolean>;\n\n  /**\n   * Create temp directory for browser profile\n   *\n   * @param baseDirName The base directory name for the created directory\n   */\n  createTempBrowserDir: (baseDirName: string) => Promise<string>;\n\n  /**\n   * Launch the browser\n   */\n  launchAsync: (browserType: LaunchBrowserTypes, args: string[]) => Promise<LaunchBrowserInstance>;\n\n  /**\n   * Close current browser instance\n   */\n  close: () => Promise<void>;\n}\n"],"mappings":";;;;;;;AAIA;AACA;AACA;IACYA,kB;AAKZ;AACA;AACA;;;;WAPYA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;GAAAA,kB,kCAAAA,kB"}