{"version":3,"file":"fs.js","names":["copyFilePathToPathAsync","src","dest","srcFile","fs","promises","readFile","mkdir","path","dirname","recursive","writeFile","removeFile","filePath","unlinkSync","error","code"],"sources":["../../src/utils/fs.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\n/** A basic function that copies a single file to another file location. */\nexport async function copyFilePathToPathAsync(src: string, dest: string): Promise<void> {\n  const srcFile = await fs.promises.readFile(src);\n  await fs.promises.mkdir(path.dirname(dest), { recursive: true });\n  await fs.promises.writeFile(dest, srcFile);\n}\n\n/** Remove a single file (not directory). Returns `true` if a file was actually deleted. */\nexport function removeFile(filePath: string): boolean {\n  try {\n    fs.unlinkSync(filePath);\n    return true;\n  } catch (error: any) {\n    // Skip if the remove did nothing.\n    if (error.code === 'ENOENT') {\n      return false;\n    }\n    throw error;\n  }\n}\n"],"mappings":";;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA;AACO,eAAeA,uBAAf,CAAuCC,GAAvC,EAAoDC,IAApD,EAAiF;EACtF,MAAMC,OAAO,GAAG,MAAMC,aAAA,CAAGC,QAAH,CAAYC,QAAZ,CAAqBL,GAArB,CAAtB;EACA,MAAMG,aAAA,CAAGC,QAAH,CAAYE,KAAZ,CAAkBC,eAAA,CAAKC,OAAL,CAAaP,IAAb,CAAlB,EAAsC;IAAEQ,SAAS,EAAE;EAAb,CAAtC,CAAN;EACA,MAAMN,aAAA,CAAGC,QAAH,CAAYM,SAAZ,CAAsBT,IAAtB,EAA4BC,OAA5B,CAAN;AACD;AAED;;;AACO,SAASS,UAAT,CAAoBC,QAApB,EAA+C;EACpD,IAAI;IACFT,aAAA,CAAGU,UAAH,CAAcD,QAAd;;IACA,OAAO,IAAP;EACD,CAHD,CAGE,OAAOE,KAAP,EAAmB;IACnB;IACA,IAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;MAC3B,OAAO,KAAP;IACD;;IACD,MAAMD,KAAN;EACD;AACF"}