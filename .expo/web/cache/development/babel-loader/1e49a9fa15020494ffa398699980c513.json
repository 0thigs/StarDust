{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from \"../../modules/canUseDom\";\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\n\nfunction update() {\n  if (!canUseDOM) {\n    return;\n  }\n\n  var win = window;\n  var docEl = win.document.documentElement;\n  dimensions.window = {\n    fontScale: 1,\n    height: docEl.clientHeight,\n    scale: win.devicePixelRatio || 1,\n    width: docEl.clientWidth\n  };\n  dimensions.screen = {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width\n  };\n}\n\nfunction handleResize() {\n  update();\n\n  if (Array.isArray(listeners['change'])) {\n    listeners['change'].forEach(function (handler) {\n      return handler(dimensions);\n    });\n  }\n}\n\nvar Dimensions = function () {\n  function Dimensions() {\n    _classCallCheck(this, Dimensions);\n  }\n\n  _createClass(Dimensions, null, [{\n    key: \"get\",\n    value: function get(dimension) {\n      if (shouldInit) {\n        shouldInit = false;\n        update();\n      }\n\n      invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n      return dimensions[dimension];\n    }\n  }, {\n    key: \"set\",\n    value: function set(initialDimensions) {\n      if (initialDimensions) {\n        if (canUseDOM) {\n          invariant(false, 'Dimensions cannot be set in the browser');\n        } else {\n          if (initialDimensions.screen != null) {\n            dimensions.screen = initialDimensions.screen;\n          }\n\n          if (initialDimensions.window != null) {\n            dimensions.window = initialDimensions.window;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      var _this = this;\n\n      listeners[type] = listeners[type] || [];\n      listeners[type].push(handler);\n      return {\n        remove: function remove() {\n          _this.removeEventListener(type, handler);\n        }\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, handler) {\n      if (Array.isArray(listeners[type])) {\n        listeners[type] = listeners[type].filter(function (_handler) {\n          return _handler !== handler;\n        });\n      }\n    }\n  }]);\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nif (canUseDOM) {\n  window.addEventListener('resize', handleResize, false);\n}","map":{"version":3,"names":["invariant","canUseDOM","dimensions","window","fontScale","height","scale","width","screen","listeners","shouldInit","update","win","docEl","document","documentElement","clientHeight","devicePixelRatio","clientWidth","handleResize","Array","isArray","forEach","handler","Dimensions","dimension","initialDimensions","type","push","remove","removeEventListener","filter","_handler","addEventListener"],"sources":["/home/user/Documentos/code/JavaScript/ProjetosReactNative/StarDust/node_modules/react-native-web/dist/exports/Dimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\n\nfunction update() {\n  if (!canUseDOM) {\n    return;\n  }\n\n  var win = window;\n  var docEl = win.document.documentElement;\n  dimensions.window = {\n    fontScale: 1,\n    height: docEl.clientHeight,\n    scale: win.devicePixelRatio || 1,\n    width: docEl.clientWidth\n  };\n  dimensions.screen = {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width\n  };\n}\n\nfunction handleResize() {\n  update();\n\n  if (Array.isArray(listeners['change'])) {\n    listeners['change'].forEach(handler => handler(dimensions));\n  }\n}\n\nexport default class Dimensions {\n  static get(dimension) {\n    if (shouldInit) {\n      shouldInit = false;\n      update();\n    }\n\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  }\n\n  static set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  }\n\n  static addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: () => {\n        this.removeEventListener(type, handler);\n      }\n    };\n  }\n\n  static removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(_handler => _handler !== handler);\n    }\n  }\n\n}\n\nif (canUseDOM) {\n  window.addEventListener('resize', handleResize, false);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}