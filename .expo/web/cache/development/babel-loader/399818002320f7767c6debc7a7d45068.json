{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport invariant from 'invariant';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\nexport var EventEmitter = function () {\n  function EventEmitter(nativeModule) {\n    _classCallCheck(this, EventEmitter);\n\n    this._listenerCount = 0;\n\n    if (nativeModule.__expo_module_name__ && NativeModules.EXReactNativeEventEmitter) {\n      nativeModule.addListener = function () {\n        var _NativeModules$EXReac;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_NativeModules$EXReac = NativeModules.EXReactNativeEventEmitter).addProxiedListener.apply(_NativeModules$EXReac, [nativeModule.__expo_module_name__].concat(args));\n      };\n\n      nativeModule.removeListeners = function () {\n        var _NativeModules$EXReac2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return (_NativeModules$EXReac2 = NativeModules.EXReactNativeEventEmitter).removeProxiedListeners.apply(_NativeModules$EXReac2, [nativeModule.__expo_module_name__].concat(args));\n      };\n    }\n\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule);\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      var _this = this,\n          _subscription;\n\n      if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n        this._nativeModule.startObserving();\n      }\n\n      this._listenerCount++;\n\n      var nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n\n      var subscription = (_subscription = {}, _defineProperty(_subscription, nativeEmitterSubscriptionKey, nativeEmitterSubscription), _defineProperty(_subscription, \"remove\", function remove() {\n        _this.removeSubscription(subscription);\n      }), _subscription);\n      return subscription;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      var removedListenerCount = this._eventEmitter.listenerCount ? this._eventEmitter.listenerCount(eventName) : this._eventEmitter.listeners(eventName).length;\n\n      this._eventEmitter.removeAllListeners(eventName);\n\n      this._listenerCount -= removedListenerCount;\n      invariant(this._listenerCount >= 0, \"EventEmitter must have a non-negative number of listeners\");\n\n      if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      var nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n\n      if (!nativeEmitterSubscription) {\n        return;\n      }\n\n      if ('remove' in nativeEmitterSubscription) {\n        nativeEmitterSubscription.remove();\n      } else if ('removeSubscription' in this._eventEmitter) {\n        this._eventEmitter.removeSubscription(nativeEmitterSubscription);\n      }\n\n      this._listenerCount--;\n      delete subscription[nativeEmitterSubscriptionKey];\n\n      subscription.remove = function () {};\n\n      if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _this$_eventEmitter;\n\n      for (var _len3 = arguments.length, params = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        params[_key3 - 1] = arguments[_key3];\n      }\n\n      (_this$_eventEmitter = this._eventEmitter).emit.apply(_this$_eventEmitter, [eventName].concat(params));\n    }\n  }]);\n\n  return EventEmitter;\n}();","map":{"version":3,"sources":["../src/EventEmitter.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, NativeModules, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  __expo_module_name__?: string;\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\n// @needsAudit\nexport type Subscription = {\n  /**\n   * A method to unsubscribe the listener.\n   */\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    // Expo modules installed through the JSI don't have `addListener` and `removeListeners` set,\n    // so if someone wants to use them with `EventEmitter`, make sure to provide these functions\n    // as they are required by `NativeEventEmitter`. This is only temporary â€” in the future\n    // JSI modules will have event emitter built in.\n    if (nativeModule.__expo_module_name__ && NativeModules.EXReactNativeEventEmitter) {\n      nativeModule.addListener = (...args) =>\n        NativeModules.EXReactNativeEventEmitter.addProxiedListener(\n          nativeModule.__expo_module_name__,\n          ...args\n        );\n      nativeModule.removeListeners = (...args) =>\n        NativeModules.EXReactNativeEventEmitter.removeProxiedListeners(\n          nativeModule.__expo_module_name__,\n          ...args\n        );\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      // `react-native-web@0.17.1` doesn't support `removeSubscription`\n      nativeEmitterSubscription.remove();\n    } else if ('removeSubscription' in this._eventEmitter) {\n      this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}