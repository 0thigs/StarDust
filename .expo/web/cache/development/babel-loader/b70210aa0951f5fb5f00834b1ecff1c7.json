{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar dataUriPattern = /^data:/;\nexport var ImageUriCache = function () {\n  function ImageUriCache() {\n    _classCallCheck(this, ImageUriCache);\n  }\n\n  _createClass(ImageUriCache, null, [{\n    key: \"has\",\n    value: function has(uri) {\n      var entries = ImageUriCache._entries;\n      var isDataUri = dataUriPattern.test(uri);\n      return isDataUri || Boolean(entries[uri]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(uri) {\n      var entries = ImageUriCache._entries;\n      var lastUsedTimestamp = Date.now();\n\n      if (entries[uri]) {\n        entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n        entries[uri].refCount += 1;\n      } else {\n        entries[uri] = {\n          lastUsedTimestamp: lastUsedTimestamp,\n          refCount: 1\n        };\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(uri) {\n      var entries = ImageUriCache._entries;\n\n      if (entries[uri]) {\n        entries[uri].refCount -= 1;\n      }\n\n      ImageUriCache._cleanUpIfNeeded();\n    }\n  }, {\n    key: \"_cleanUpIfNeeded\",\n    value: function _cleanUpIfNeeded() {\n      var entries = ImageUriCache._entries;\n      var imageUris = Object.keys(entries);\n\n      if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n        var leastRecentlyUsedKey;\n        var leastRecentlyUsedEntry;\n        imageUris.forEach(function (uri) {\n          var entry = entries[uri];\n\n          if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n            leastRecentlyUsedKey = uri;\n            leastRecentlyUsedEntry = entry;\n          }\n        });\n\n        if (leastRecentlyUsedKey) {\n          delete entries[leastRecentlyUsedKey];\n        }\n      }\n    }\n  }]);\n\n  return ImageUriCache;\n}();\nImageUriCache._maximumEntries = 256;\nImageUriCache._entries = {};\nvar id = 0;\nvar requests = {};\nvar ImageLoader = {\n  abort: function abort(requestId) {\n    var image = requests[\"\" + requestId];\n\n    if (image) {\n      image.onerror = null;\n      image.onload = null;\n      image = null;\n      delete requests[\"\" + requestId];\n    }\n  },\n  getSize: function getSize(uri, success, failure) {\n    var complete = false;\n    var interval = setInterval(callback, 16);\n    var requestId = ImageLoader.load(uri, callback, errorCallback);\n\n    function callback() {\n      var image = requests[\"\" + requestId];\n\n      if (image) {\n        var naturalHeight = image.naturalHeight,\n            naturalWidth = image.naturalWidth;\n\n        if (naturalHeight && naturalWidth) {\n          success(naturalWidth, naturalHeight);\n          complete = true;\n        }\n      }\n\n      if (complete) {\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    }\n\n    function errorCallback() {\n      if (typeof failure === 'function') {\n        failure();\n      }\n\n      ImageLoader.abort(requestId);\n      clearInterval(interval);\n    }\n  },\n  has: function has(uri) {\n    return ImageUriCache.has(uri);\n  },\n  load: function load(uri, onLoad, onError) {\n    id += 1;\n    var image = new window.Image();\n    image.onerror = onError;\n\n    image.onload = function (e) {\n      var onDecode = function onDecode() {\n        return onLoad({\n          nativeEvent: e\n        });\n      };\n\n      if (typeof image.decode === 'function') {\n        image.decode().then(onDecode, onDecode);\n      } else {\n        setTimeout(onDecode, 0);\n      }\n    };\n\n    image.src = uri;\n    requests[\"\" + id] = image;\n    return id;\n  },\n  prefetch: function prefetch(uri) {\n    return new Promise(function (resolve, reject) {\n      ImageLoader.load(uri, function () {\n        ImageUriCache.add(uri);\n        ImageUriCache.remove(uri);\n        resolve();\n      }, reject);\n    });\n  },\n  queryCache: function queryCache(uris) {\n    var result = {};\n    uris.forEach(function (u) {\n      if (ImageUriCache.has(u)) {\n        result[u] = 'disk/memory';\n      }\n    });\n    return Promise.resolve(result);\n  }\n};\nexport default ImageLoader;","map":{"version":3,"names":["dataUriPattern","ImageUriCache","uri","entries","_entries","isDataUri","test","Boolean","lastUsedTimestamp","Date","now","refCount","_cleanUpIfNeeded","imageUris","Object","keys","length","_maximumEntries","leastRecentlyUsedKey","leastRecentlyUsedEntry","forEach","entry","id","requests","ImageLoader","abort","requestId","image","onerror","onload","getSize","success","failure","complete","interval","setInterval","callback","load","errorCallback","naturalHeight","naturalWidth","clearInterval","has","onLoad","onError","window","Image","e","onDecode","nativeEvent","decode","then","setTimeout","src","prefetch","Promise","resolve","reject","add","remove","queryCache","uris","result","u"],"sources":["/home/user/Documentos/code/JavaScript/ProjetosReactNative/StarDust/node_modules/react-native-web/dist/modules/ImageLoader/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar dataUriPattern = /^data:/;\nexport class ImageUriCache {\n  static has(uri) {\n    var entries = ImageUriCache._entries;\n    var isDataUri = dataUriPattern.test(uri);\n    return isDataUri || Boolean(entries[uri]);\n  }\n\n  static add(uri) {\n    var entries = ImageUriCache._entries;\n    var lastUsedTimestamp = Date.now();\n\n    if (entries[uri]) {\n      entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n      entries[uri].refCount += 1;\n    } else {\n      entries[uri] = {\n        lastUsedTimestamp,\n        refCount: 1\n      };\n    }\n  }\n\n  static remove(uri) {\n    var entries = ImageUriCache._entries;\n\n    if (entries[uri]) {\n      entries[uri].refCount -= 1;\n    } // Free up entries when the cache is \"full\"\n\n\n    ImageUriCache._cleanUpIfNeeded();\n  }\n\n  static _cleanUpIfNeeded() {\n    var entries = ImageUriCache._entries;\n    var imageUris = Object.keys(entries);\n\n    if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n      var leastRecentlyUsedKey;\n      var leastRecentlyUsedEntry;\n      imageUris.forEach(uri => {\n        var entry = entries[uri];\n\n        if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n          leastRecentlyUsedKey = uri;\n          leastRecentlyUsedEntry = entry;\n        }\n      });\n\n      if (leastRecentlyUsedKey) {\n        delete entries[leastRecentlyUsedKey];\n      }\n    }\n  }\n\n}\nImageUriCache._maximumEntries = 256;\nImageUriCache._entries = {};\nvar id = 0;\nvar requests = {};\nvar ImageLoader = {\n  abort(requestId) {\n    var image = requests[\"\" + requestId];\n\n    if (image) {\n      image.onerror = null;\n      image.onload = null;\n      image = null;\n      delete requests[\"\" + requestId];\n    }\n  },\n\n  getSize(uri, success, failure) {\n    var complete = false;\n    var interval = setInterval(callback, 16);\n    var requestId = ImageLoader.load(uri, callback, errorCallback);\n\n    function callback() {\n      var image = requests[\"\" + requestId];\n\n      if (image) {\n        var naturalHeight = image.naturalHeight,\n            naturalWidth = image.naturalWidth;\n\n        if (naturalHeight && naturalWidth) {\n          success(naturalWidth, naturalHeight);\n          complete = true;\n        }\n      }\n\n      if (complete) {\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    }\n\n    function errorCallback() {\n      if (typeof failure === 'function') {\n        failure();\n      }\n\n      ImageLoader.abort(requestId);\n      clearInterval(interval);\n    }\n  },\n\n  has(uri) {\n    return ImageUriCache.has(uri);\n  },\n\n  load(uri, onLoad, onError) {\n    id += 1;\n    var image = new window.Image();\n    image.onerror = onError;\n\n    image.onload = e => {\n      // avoid blocking the main thread\n      var onDecode = () => onLoad({\n        nativeEvent: e\n      });\n\n      if (typeof image.decode === 'function') {\n        // Safari currently throws exceptions when decoding svgs.\n        // We want to catch that error and allow the load handler\n        // to be forwarded to the onLoad handler in this case\n        image.decode().then(onDecode, onDecode);\n      } else {\n        setTimeout(onDecode, 0);\n      }\n    };\n\n    image.src = uri;\n    requests[\"\" + id] = image;\n    return id;\n  },\n\n  prefetch(uri) {\n    return new Promise((resolve, reject) => {\n      ImageLoader.load(uri, () => {\n        // Add the uri to the cache so it can be immediately displayed when used\n        // but also immediately remove it to correctly reflect that it has no active references\n        ImageUriCache.add(uri);\n        ImageUriCache.remove(uri);\n        resolve();\n      }, reject);\n    });\n  },\n\n  queryCache(uris) {\n    var result = {};\n    uris.forEach(u => {\n      if (ImageUriCache.has(u)) {\n        result[u] = 'disk/memory';\n      }\n    });\n    return Promise.resolve(result);\n  }\n\n};\nexport default ImageLoader;"],"mappings":"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"},"metadata":{},"sourceType":"module"}