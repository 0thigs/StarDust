{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport { SingleNavigatorContext } from \"./EnsureSingleNavigator\";\nexport default function useRegisterNavigator() {\n  var _React$useState = React.useState(function () {\n    return nanoid();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      key = _React$useState2[0];\n\n  var container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\");\n  }\n\n  React.useEffect(function () {\n    var register = container.register,\n        unregister = container.unregister;\n    register(key);\n    return function () {\n      return unregister(key);\n    };\n  }, [container, key]);\n  return key;\n}","map":{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["nanoid","React","SingleNavigatorContext","useRegisterNavigator","key","useState","container","useContext","undefined","Error","useEffect","register","unregister"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT;AAMA,eAAe,SAASC,oBAAT,GAAgC;EAC7C,sBAAcF,KAAK,CAACI,QAANJ,CAAe;IAAA,OAAMD,MAAM,EAAZ;EAAA,CAAfC,CAAd;EAAA;EAAA,IAAOG,GAAP;;EACA,IAAME,SAAS,GAAGL,KAAK,CAACM,UAANN,CAAiBC,sBAAjBD,CAAlB;;EAEA,IAAIK,SAAS,KAAKE,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,wLADI,CAAN;EAGF;;EAEAR,KAAK,CAACS,SAANT,CAAgB,YAAM;IACpB,IAAQU,QAAR,GAAiCL,SAAjC,CAAQK,QAAR;IAAA,IAAkBC,UAAlB,GAAiCN,SAAjC,CAAkBM,UAAlB;IAEAD,QAAQ,CAACP,GAAD,CAARO;IAEA,OAAO;MAAA,OAAMC,UAAU,CAACR,GAAD,CAAhB;IAAA,CAAP;EACD,CANDH,EAMG,CAACK,SAAD,EAAYF,GAAZ,CANHH;EAQA,OAAOG,GAAP;AACF","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\");\n  }\n  React.useEffect(() => {\n    const {\n      register,\n      unregister\n    } = container;\n    register(key);\n    return () => unregister(key);\n  }, [container, key]);\n  return key;\n}\n//# sourceMappingURL=useRegisterNavigator.js.map"]},"metadata":{},"sourceType":"module"}