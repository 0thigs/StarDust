{"ast":null,"code":"import normalizeColor from \"./compiler/normalizeColor\";\nimport normalizeValueWithProperty from \"./compiler/normalizeValueWithProperty\";\nvar emptyObject = {};\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = function createBoxShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = function createTextShadowValue(style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref2 = textShadowOffset || defaultOffset,\n      height = _ref2.height,\n      width = _ref2.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var preprocess = function preprocess(originalStyle) {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  }\n\n  return nextStyle;\n};\nexport default preprocess;","map":{"version":3,"names":["normalizeColor","normalizeValueWithProperty","emptyObject","defaultOffset","height","width","createBoxShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color","createTextShadowValue","textShadowColor","textShadowOffset","textShadowRadius","_ref2","radius","preprocess","originalStyle","nextStyle","originalProp","originalValue","prop","value","Object","prototype","hasOwnProperty","call","boxShadowValue","boxShadow","textShadowValue","textShadow"],"sources":["/home/user/Documentos/code/JavaScript/ProjetosReactNative/StarDust/node_modules/react-native-web/dist/exports/StyleSheet/preprocess.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from './compiler/normalizeColor';\nimport normalizeValueWithProperty from './compiler/normalizeValueWithProperty';\nvar emptyObject = {};\n/**\n * Shadows\n */\n\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = style => {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = style => {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref2 = textShadowOffset || defaultOffset,\n      height = _ref2.height,\n      width = _ref2.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n/**\n * Preprocess styles\n */\n\nexport var preprocess = originalStyle => {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    } // Convert shadow styles\n\n\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    } // Convert text shadow styles\n\n\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  } // $FlowIgnore\n\n\n  return nextStyle;\n};\nexport default preprocess;"],"mappings":"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"},"metadata":{},"sourceType":"module"}