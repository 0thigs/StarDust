{"ast":null,"code":"var isErrorHandlingEnabled = true;\nvar developmentBuildMessage = \"If you're trying to use a module that is not supported in Expo Go, you need to create a development build of your app. See https://docs.expo.dev/development/introduction/ for more info.\";\n\nfunction customizeUnavailableMessage(error) {\n  error.message += '\\n\\n' + developmentBuildMessage;\n}\n\nfunction customizeModuleIsMissingMessage(error) {\n  error.message = \"Your JavaScript code tried to access a native module that doesn't exist. \\n\\n\" + developmentBuildMessage;\n}\n\nfunction customizeError(error) {\n  if ('code' in error && error.code === 'ERR_UNAVAILABLE') {\n    customizeUnavailableMessage(error);\n  } else if (error.message.includes('Native module cannot be null') || error.message.includes('`new NativeEventEmitter()` requires a non-null argument.')) {\n    customizeModuleIsMissingMessage(error);\n  }\n}\n\nfunction errorHandler(originalHandler, error, isFatal) {\n  if (error instanceof Error) {\n    customizeError(error);\n  }\n\n  originalHandler(error, isFatal);\n}\n\nexport function createErrorHandler(originalHandler) {\n  return function (error, isFatal) {\n    if (isErrorHandlingEnabled) {\n      errorHandler(originalHandler, error, isFatal);\n      return;\n    }\n\n    originalHandler(error, isFatal);\n  };\n}\nexport function disableErrorHandling() {\n  isErrorHandlingEnabled = false;\n}","map":{"version":3,"sources":["../../src/errors/ExpoErrorManager.ts"],"names":[],"mappings":"AAGA,IAAI,sBAAsB,GAAG,IAA7B;AAEA,IAAM,uBAAuB,8LAA7B;;AAEA,SAAS,2BAAT,CAAqC,KAArC,EAAsD;EACpD,KAAK,CAAC,OAAN,IAAiB,SAAS,uBAA1B;AACD;;AAED,SAAS,+BAAT,CAAyC,KAAzC,EAAqD;EACnD,KAAK,CAAC,OAAN,qFAEA,uBAFA;AAGD;;AAED,SAAS,cAAT,CAAwB,KAAxB,EAAiD;EAC/C,IAAI,UAAU,KAAV,IAAmB,KAAK,CAAC,IAAN,KAAe,iBAAtC,EAAyD;IACvD,2BAA2B,CAAC,KAAD,CAA3B;EACD,CAFD,MAEO,IACL,KAAK,CAAC,OAAN,CAAc,QAAd,CAAuB,8BAAvB,KACA,KAAK,CAAC,OAAN,CAAc,QAAd,CAAuB,0DAAvB,CAFK,EAGL;IACA,+BAA+B,CAAC,KAAD,CAA/B;EACD;AACF;;AAED,SAAS,YAAT,CAAsB,eAAtB,EAAuC,KAAvC,EAA8C,OAA9C,EAAqD;EACnD,IAAI,KAAK,YAAY,KAArB,EAA4B;IAC1B,cAAc,CAAC,KAAD,CAAd;EACD;;EACD,eAAe,CAAC,KAAD,EAAQ,OAAR,CAAf;AACD;;AAED,OAAM,SAAU,kBAAV,CAA6B,eAA7B,EAA4C;EAChD,OAAO,UAAC,KAAD,EAAQ,OAAR,EAAmB;IACxB,IAAI,sBAAJ,EAA4B;MAC1B,YAAY,CAAC,eAAD,EAAkB,KAAlB,EAAyB,OAAzB,CAAZ;MACA;IACD;;IAED,eAAe,CAAC,KAAD,EAAQ,OAAR,CAAf;EACD,CAPD;AAQD;AAED,OAAM,SAAU,oBAAV,GAA8B;EAClC,sBAAsB,GAAG,KAAzB;AACD","sourcesContent":["// Similar interface to the one used in expo modules.\ntype CodedError = Error & { code?: string };\n\nlet isErrorHandlingEnabled = true;\n\nconst developmentBuildMessage = `If you're trying to use a module that is not supported in Expo Go, you need to create a development build of your app. See https://docs.expo.dev/development/introduction/ for more info.`;\n\nfunction customizeUnavailableMessage(error: CodedError) {\n  error.message += '\\n\\n' + developmentBuildMessage;\n}\n\nfunction customizeModuleIsMissingMessage(error: Error) {\n  error.message = `Your JavaScript code tried to access a native module that doesn't exist. \n\n${developmentBuildMessage}`;\n}\n\nfunction customizeError(error: Error | CodedError) {\n  if ('code' in error && error.code === 'ERR_UNAVAILABLE') {\n    customizeUnavailableMessage(error);\n  } else if (\n    error.message.includes('Native module cannot be null') || // RN 0.64 and below message\n    error.message.includes('`new NativeEventEmitter()` requires a non-null argument.') // RN 0.65+ message\n  ) {\n    customizeModuleIsMissingMessage(error);\n  }\n}\n\nfunction errorHandler(originalHandler, error, isFatal) {\n  if (error instanceof Error) {\n    customizeError(error);\n  }\n  originalHandler(error, isFatal);\n}\n\nexport function createErrorHandler(originalHandler) {\n  return (error, isFatal) => {\n    if (isErrorHandlingEnabled) {\n      errorHandler(originalHandler, error, isFatal);\n      return;\n    }\n\n    originalHandler(error, isFatal);\n  };\n}\n\nexport function disableErrorHandling() {\n  isErrorHandlingEnabled = false;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}