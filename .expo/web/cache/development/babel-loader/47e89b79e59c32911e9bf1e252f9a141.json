{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _EventSubscription = function () {\n  function _EventSubscription(subscriber) {\n    _classCallCheck(this, _EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  _createClass(_EventSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.subscriber.removeSubscription(this);\n    }\n  }]);\n\n  return _EventSubscription;\n}();\n\nexport default _EventSubscription;","map":{"version":3,"names":["_EventSubscription","subscriber","removeSubscription"],"sources":["/home/user/Documentos/code/JavaScript/ProjetosReactNative/StarDust/node_modules/react-native-web/dist/vendor/react-native/emitter/_EventSubscription.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nclass _EventSubscription {\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  constructor(subscriber) {\n    this.subscriber = subscriber;\n  }\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n\n}\n\nexport default _EventSubscription;"],"mappings":"AASA;;;;;IAMMA,kB;EAKJ,4BAAYC,UAAZ,EAAwB;IAAA;;IACtB,KAAKA,UAAL,GAAkBA,UAAlB;EACD;;;;WAMD,kBAAS;MACP,KAAKA,UAAL,CAAgBC,kBAAhB,CAAmC,IAAnC;IACD;;;;;;AAIH,eAAeF,kBAAf"},"metadata":{},"sourceType":"module"}