{"ast":null,"code":"function murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = function hash(str) {\n  return murmurhash2_32_gc(str, 1).toString(36);\n};\n\nexport default hash;","map":{"version":3,"names":["murmurhash2_32_gc","str","seed","l","length","h","i","k","charCodeAt","hash","toString"],"sources":["/home/user/Documentos/code/JavaScript/ProjetosReactNative/StarDust/node_modules/react-native-web/dist/exports/StyleSheet/compiler/hash.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * JS Implementation of MurmurHash2\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n *\n * \n */\nfunction murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = str => murmurhash2_32_gc(str, 1).toString(36);\n\nexport default hash;"],"mappings":"AAgBA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;EACpC,IAAIC,CAAC,GAAGF,GAAG,CAACG,MAAZ;EAAA,IACIC,CAAC,GAAGH,IAAI,GAAGC,CADf;EAAA,IAEIG,CAAC,GAAG,CAFR;EAAA,IAGIC,CAHJ;;EAKA,OAAOJ,CAAC,IAAI,CAAZ,EAAe;IACbI,CAAC,GAAGN,GAAG,CAACO,UAAJ,CAAeF,CAAf,IAAoB,IAApB,GAA2B,CAACL,GAAG,CAACO,UAAJ,CAAe,EAAEF,CAAjB,IAAsB,IAAvB,KAAgC,CAA3D,GAA+D,CAACL,GAAG,CAACO,UAAJ,CAAe,EAAEF,CAAjB,IAAsB,IAAvB,KAAgC,EAA/F,GAAoG,CAACL,GAAG,CAACO,UAAJ,CAAe,EAAEF,CAAjB,IAAsB,IAAvB,KAAgC,EAAxI;IACAC,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,MAA3B,KAAsC,EAAnE,CAAJ;IACAA,CAAC,IAAIA,CAAC,KAAK,EAAX;IACAA,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,MAA3B,KAAsC,EAAnE,CAAJ;IACAF,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,MAA3B,KAAsC,EAAnE,IAAyEE,CAA7E;IACAJ,CAAC,IAAI,CAAL;IACA,EAAEG,CAAF;EACD;;EAED,QAAQH,CAAR;IACE,KAAK,CAAL;MACEE,CAAC,IAAI,CAACJ,GAAG,CAACO,UAAJ,CAAeF,CAAC,GAAG,CAAnB,IAAwB,IAAzB,KAAkC,EAAvC;;IAEF,KAAK,CAAL;MACED,CAAC,IAAI,CAACJ,GAAG,CAACO,UAAJ,CAAeF,CAAC,GAAG,CAAnB,IAAwB,IAAzB,KAAkC,CAAvC;;IAEF,KAAK,CAAL;MACED,CAAC,IAAIJ,GAAG,CAACO,UAAJ,CAAeF,CAAf,IAAoB,IAAzB;MACAD,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,MAA3B,KAAsC,EAAnE,CAAJ;EATJ;;EAYAA,CAAC,IAAIA,CAAC,KAAK,EAAX;EACAA,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,MAA3B,KAAsC,EAAnE,CAAJ;EACAA,CAAC,IAAIA,CAAC,KAAK,EAAX;EACA,OAAOA,CAAC,KAAK,CAAb;AACD;;AAED,IAAII,IAAI,GAAG,SAAPA,IAAO,CAAAR,GAAG;EAAA,OAAID,iBAAiB,CAACC,GAAD,EAAM,CAAN,CAAjB,CAA0BS,QAA1B,CAAmC,EAAnC,CAAJ;AAAA,CAAd;;AAEA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}