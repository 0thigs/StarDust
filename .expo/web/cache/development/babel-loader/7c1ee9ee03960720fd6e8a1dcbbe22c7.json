{"ast":null,"code":"import * as React from 'react';\nexport default function useChildListeners() {\n  var _React$useRef = React.useRef({\n    action: [],\n    focus: []\n  }),\n      listeners = _React$useRef.current;\n\n  var addListener = React.useCallback(function (type, listener) {\n    listeners[type].push(listener);\n    var removed = false;\n    return function () {\n      var index = listeners[type].indexOf(listener);\n\n      if (!removed && index > -1) {\n        removed = true;\n        listeners[type].splice(index, 1);\n      }\n    };\n  }, [listeners]);\n  return {\n    listeners: listeners,\n    addListener: addListener\n  };\n}","map":{"version":3,"sources":["useChildListeners.tsx"],"names":["React","useChildListeners","current","listeners","useRef","action","focus","addListener","useCallback","type","listener","push","removed","index","indexOf","splice"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,eAAe,SAASC,iBAAT,GAA6B;EAC1C,oBAA+BD,KAAK,CAACI,MAANJ,CAE5B;IACDK,MAAM,EAAE,EADP;IAEDC,KAAK,EAAE;EAFN,CAF4BN,CAA/B;EAAA,IAAiBG,SAAjB,iBAAQD,OAAR;;EAOA,IAAMK,WAAW,GAAGP,KAAK,CAACQ,WAANR,CAClB,UAA8BS,IAA9B,EAAuCC,QAAvC,EAAoE;IAClEP,SAAS,CAACM,IAAD,CAATN,CAAgBQ,IAAhBR,CAAqBO,QAArBP;IAEA,IAAIS,OAAO,GAAG,KAAd;IACA,OAAO,YAAM;MACX,IAAMC,KAAK,GAAGV,SAAS,CAACM,IAAD,CAATN,CAAgBW,OAAhBX,CAAwBO,QAAxBP,CAAd;;MAEA,IAAI,CAACS,OAAD,IAAYC,KAAK,GAAG,CAAC,CAAzB,EAA4B;QAC1BD,OAAO,GAAG,IAAVA;QACAT,SAAS,CAACM,IAAD,CAATN,CAAgBY,MAAhBZ,CAAuBU,KAAvBV,EAA8B,CAA9BA;MACF;IACD,CAPD;EAQD,CAbiBH,EAclB,CAACG,SAAD,CAdkBH,CAApB;EAiBA,OAAO;IACLG,SAAS,EAATA,SADK;IAELI,WAAAA,EAAAA;EAFK,CAAP;AAIF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const {\n    current: listeners\n  } = React.useRef({\n    action: [],\n    focus: []\n  });\n  const addListener = React.useCallback((type, listener) => {\n    listeners[type].push(listener);\n    let removed = false;\n    return () => {\n      const index = listeners[type].indexOf(listener);\n      if (!removed && index > -1) {\n        removed = true;\n        listeners[type].splice(index, 1);\n      }\n    };\n  }, [listeners]);\n  return {\n    listeners,\n    addListener\n  };\n}\n//# sourceMappingURL=useChildListeners.js.map"]},"metadata":{},"sourceType":"module"}