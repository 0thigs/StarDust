{"ast":null,"code":"import { EventEmitter } from \"../EventEmitter\";\nimport Platform from \"../Platform\";\nimport { CodedError } from \"../errors/CodedError\";\nimport NativeErrorManager from \"./NativeErrorManager\";\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  var onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  var eventEmitter = new EventEmitter(NativeErrorManager);\n  eventEmitter.addListener(onNewException, function (_ref) {\n    var message = _ref.message;\n    console.error(message);\n  });\n}\n\nglobal.ExpoModulesCore_CodedError = CodedError;","map":{"version":3,"sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT;AACA,OAAO,QAAP;AACA,SAAS,UAAT;AACA,OAAO,kBAAP;;AAEA,IAAI,OAAO,IAAI,QAAQ,CAAC,EAAT,KAAgB,SAA3B,IAAwC,kBAA5C,EAAgE;EAC9D,IAAM,cAAc,GAAG,4CAAvB;EACA,IAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,kBAAjB,CAArB;EAEA,YAAY,CAAC,WAAb,CAAyB,cAAzB,EAAyC,gBAAqC;IAAA,IAAlC,OAAkC,QAAlC,OAAkC;IAC5E,OAAO,CAAC,KAAR,CAAc,OAAd;EACD,CAFD;AAGD;;AAGD,MAAM,CAAC,0BAAP,GAAoC,UAApC","sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobal.ExpoModulesCore_CodedError = CodedError;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}