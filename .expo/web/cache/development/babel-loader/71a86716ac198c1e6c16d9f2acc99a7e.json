{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"emit\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nexport default function useNavigationCache(_ref) {\n  var state = _ref.state,\n      getState = _ref.getState,\n      navigation = _ref.navigation,\n      _setOptions = _ref.setOptions,\n      router = _ref.router,\n      emitter = _ref.emitter;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      stackRef = _React$useContext.stackRef;\n\n  var cache = React.useMemo(function () {\n    return {\n      current: {}\n    };\n  }, [getState, navigation, _setOptions, router, emitter]);\n\n  var actions = _objectSpread(_objectSpread({}, router.actionCreators), CommonActions);\n\n  cache.current = state.routes.reduce(function (acc, route) {\n    var previous = cache.current[route.key];\n\n    if (previous) {\n      acc[route.key] = previous;\n    } else {\n      var emit = navigation.emit,\n          rest = _objectWithoutProperties(navigation, _excluded);\n\n      var _dispatch = function dispatch(thunk) {\n        var action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n\n        if (action != null) {\n          navigation.dispatch(_objectSpread({\n            source: route.key\n          }, action));\n        }\n      };\n\n      var withStack = function withStack(callback) {\n        var isStackSet = false;\n\n        try {\n          if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n\n      var helpers = Object.keys(actions).reduce(function (acc, name) {\n        acc[name] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return withStack(function () {\n            return _dispatch(actions[name].apply(actions, args));\n          });\n        };\n\n        return acc;\n      }, {});\n      acc[route.key] = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), helpers), emitter.create(route.key)), {}, {\n        dispatch: function dispatch(thunk) {\n          return withStack(function () {\n            return _dispatch(thunk);\n          });\n        },\n        getParent: function getParent(id) {\n          if (id !== undefined && id === rest.getId()) {\n            return acc[route.key];\n          }\n\n          return rest.getParent(id);\n        },\n        setOptions: function setOptions(options) {\n          return _setOptions(function (o) {\n            return _objectSpread(_objectSpread({}, o), {}, _defineProperty({}, route.key, _objectSpread(_objectSpread({}, o[route.key]), options)));\n          });\n        },\n        isFocused: function isFocused() {\n          var state = getState();\n\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          return navigation ? navigation.isFocused() : true;\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n  return cache.current;\n}","map":{"version":3,"sources":["useNavigationCache.tsx"],"names":["CommonActions","React","NavigationBuilderContext","useNavigationCache","state","getState","navigation","setOptions","router","emitter","stackRef","useContext","cache","useMemo","current","actions","actionCreators","routes","reduce","acc","route","previous","key","emit","rest","dispatch","thunk","action","source","withStack","callback","isStackSet","process","env","NODE_ENV","Error","stack","undefined","helpers","Object","keys","name","args","create","getParent","id","getId","options","o","isFocused","index"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache(_ref) {\n  let {\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter\n  } = _ref;\n  const {\n    stackRef\n  } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(() => ({\n    current: {}\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [getState, navigation, setOptions, router, emitter]);\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions\n  };\n  cache.current = state.routes.reduce((acc, route) => {\n    const previous = cache.current[route.key];\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        emit,\n        ...rest\n      } = navigation;\n      const dispatch = thunk => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n        if (action != null) {\n          navigation.dispatch({\n            source: route.key,\n            ...action\n          });\n        }\n      };\n      const withStack = callback => {\n        let isStackSet = false;\n        try {\n          if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n      const helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return withStack(() =>\n          // @ts-expect-error: name is a valid key, but TypeScript is dumb\n          dispatch(actions[name](...args)));\n        };\n        return acc;\n      }, {});\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...emitter.create(route.key),\n        dispatch: thunk => withStack(() => dispatch(thunk)),\n        getParent: id => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n          return rest.getParent(id);\n        },\n        setOptions: options => setOptions(o => ({\n          ...o,\n          [route.key]: {\n            ...o[route.key],\n            ...options\n          }\n        })),\n        isFocused: () => {\n          const state = getState();\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        }\n      };\n    }\n    return acc;\n  }, {});\n  return cache.current;\n}\n//# sourceMappingURL=useNavigationCache.js.map"]},"metadata":{},"sourceType":"module"}