{"ast":null,"code":"import createEventHandle from \"../createEventHandle\";\nimport useLayoutEffect from \"../useLayoutEffect\";\nimport useStable from \"../useStable\";\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(function () {\n    return new Map();\n  });\n  var addListener = useStable(function () {\n    var addEventListener = createEventHandle(event, options);\n    return function (target, callback) {\n      var removeTargetListener = targetListeners.get(target);\n\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(function () {\n    return function () {\n      targetListeners.forEach(function (removeListener) {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","map":{"version":3,"names":["createEventHandle","useLayoutEffect","useStable","useEvent","event","options","targetListeners","Map","addListener","addEventListener","target","callback","removeTargetListener","get","delete","removeEventListener","set","forEach","removeListener","clear"],"sources":["/home/user/Documentos/code/JavaScript/ProjetosReactNative/StarDust/node_modules/react-native-web/dist/modules/useEvent/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createEventHandle from '../createEventHandle';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    var addEventListener = createEventHandle(event, options);\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}"],"mappings":"AAQA,OAAOA,iBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,SAAP;AAWA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;EAC/C,IAAIC,eAAe,GAAGJ,SAAS,CAAC;IAAA,OAAM,IAAIK,GAAJ,EAAN;EAAA,CAAD,CAA/B;EACA,IAAIC,WAAW,GAAGN,SAAS,CAAC,YAAM;IAChC,IAAIO,gBAAgB,GAAGT,iBAAiB,CAACI,KAAD,EAAQC,OAAR,CAAxC;IACA,OAAO,UAACK,MAAD,EAASC,QAAT,EAAsB;MAC3B,IAAIC,oBAAoB,GAAGN,eAAe,CAACO,GAAhB,CAAoBH,MAApB,CAA3B;;MAEA,IAAIE,oBAAoB,IAAI,IAA5B,EAAkC;QAChCA,oBAAoB;MACrB;;MAED,IAAID,QAAQ,IAAI,IAAhB,EAAsB;QACpBL,eAAe,CAACQ,MAAhB,CAAuBJ,MAAvB;MACD;;MAED,IAAIK,mBAAmB,GAAGN,gBAAgB,CAACC,MAAD,EAASC,QAAT,CAA1C;MACAL,eAAe,CAACU,GAAhB,CAAoBN,MAApB,EAA4BK,mBAA5B;MACA,OAAOA,mBAAP;IACD,CAdD;EAeD,CAjB0B,CAA3B;EAkBAd,eAAe,CAAC,YAAM;IACpB,OAAO,YAAM;MACXK,eAAe,CAACW,OAAhB,CAAwB,UAAAC,cAAc,EAAI;QACxCA,cAAc;MACf,CAFD;MAGAZ,eAAe,CAACa,KAAhB;IACD,CALD;EAMD,CAPc,EAOZ,CAACb,eAAD,CAPY,CAAf;EAQA,OAAOE,WAAP;AACD"},"metadata":{},"sourceType":"module"}