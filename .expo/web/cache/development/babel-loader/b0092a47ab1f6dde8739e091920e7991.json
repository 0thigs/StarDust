{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"to\", \"action\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useLinkProps from \"./useLinkProps\";\nexport default function Link(_ref) {\n  var to = _ref.to,\n      action = _ref.action,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var props = useLinkProps({\n    to: to,\n    action: action\n  });\n\n  var onPress = function onPress(e) {\n    if ('onPress' in rest) {\n      var _rest$onPress;\n\n      (_rest$onPress = rest.onPress) === null || _rest$onPress === void 0 ? void 0 : _rest$onPress.call(rest, e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, _objectSpread(_objectSpread(_objectSpread({}, props), rest), Platform.select({\n    web: {\n      onClick: onPress\n    },\n    default: {\n      onPress: onPress\n    }\n  })));\n}","map":{"version":3,"sources":["Link.tsx"],"names":["React","useLinkProps","Link","to","action","rest","props","onPress","e","createElement","Text","Platform","select","web","onClick","default"],"mappings":";;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,OAAOC,YAAP;AAoBA,eAAe,SAASC,IAAT,CAAa,IAAb,EAIM;EAJyD,IAC5EC,EAD4E,GAI3D,IAJ2D,CAC5EA,EAD4E;EAAA,IAE5EC,MAF4E,GAI3D,IAJ2D,CAE5EA,MAF4E;EAAA,IAGzEC,IAHyE,4BAI3D,IAJ2D;;EAK5E,IAAMC,KAAK,GAAGL,YAAY,CAAY;IAAEE,EAAE,EAAFA,EAAF;IAAMC,MAAAA,EAAAA;EAAN,CAAZ,CAA1B;;EAEA,IAAMG,OAAO,GACXC,SADID,OACJC,CAAAA,CAA0E,EACvE;IACH,IAAI,aAAaH,IAAjB,EAAuB;MAAA,IAAA,aAAA;;MACrB,CAAA,aAAA,GAAA,IAAI,CAACE,OAAL,MAAY,IAAZ,IAAY,aAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,aAAA,CAAA,IAAA,CAAA,IAAA,EAAeC,CAAf,CAAA;IACF;;IAEAF,KAAK,CAACC,OAAND,CAAcE,CAAdF;EACD,CARD;;EAUA,OAAON,KAAK,CAACS,aAANT,CAAoBU,IAApBV,gDACFM,KADEN,GAEFK,IAFEL,GAGFW,QAAQ,CAACC,MAATD,CAAgB;IACjBE,GAAG,EAAE;MAAEC,OAAO,EAAEP;IAAX,CADY;IAEjBQ,OAAO,EAAE;MAAER,OAAAA,EAAAA;IAAF;EAFQ,CAAhBI,CAHEX,EAAP;AAQF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Platform, Text } from 'react-native';\nimport useLinkProps from './useLinkProps';\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link(_ref) {\n  let {\n    to,\n    action,\n    ...rest\n  } = _ref;\n  const props = useLinkProps({\n    to,\n    action\n  });\n  const onPress = e => {\n    if ('onPress' in rest) {\n      var _rest$onPress;\n      (_rest$onPress = rest.onPress) === null || _rest$onPress === void 0 ? void 0 : _rest$onPress.call(rest, e);\n    }\n    props.onPress(e);\n  };\n  return /*#__PURE__*/React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: {\n        onClick: onPress\n      },\n      default: {\n        onPress\n      }\n    })\n  });\n}\n//# sourceMappingURL=Link.js.map"]},"metadata":{},"sourceType":"module"}