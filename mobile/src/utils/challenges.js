export const challenges = [
  {
    id: 1,
    starId: 4,
    title: 'Enviar mensagem',
    texts: [
      {
        type: 'default',
        body: 'Parece que finalmente voc√™ encontrou um planeta √† vista!',
      },
      {
        type: 'default',
        body: 'Para verifcar se h√° vida inteligente, voc√™ pode enviar uma mensagem dizendo: "Ol√°, mundo!".',
      },
      {
        type: 'default',
        body: 'Para fazer isso voc√™ deve fazer um programa na aba de c√≥digo que receba essa mensagem e a escreva, sendo a entrada e sa√≠da de dados respectivamente.',
      },
      {
        type: 'default',
        body: 'Veja o exemplo para entender melhor:',
      },
      {
        type: 'code',
        body: `Entrada: "Ol√°, mundo!"
Sa√≠da: "Ol√°, mundo!"`,
      },
      {
        type: 'list',
        body: 'Se o resultado do seu c√≥digo passar no teste de caso na aba de resultado, voc√™ conclui o desafio üéâ.',
      },
      {
        type: 'alert',
        body: 'Lembre-se de manter o comando leia( ) no programa para capturar os dados de entrada.',
      },
    ],
    testCases: [
      {
        input: ["'Ol√°, mundo!'"],
        expectedOutput: 'Ol√°, mundo!',
        isLocked: false,
      },
    ],

    code: `
var mensagem = leia()

// Escreva seu c√≥digo aqui embaixo
`,
    difficulty: 'easy',
    categories: ['b√°sico'],
  },
  {
    id: 2,
    starId: 8,
    title: 'An√°lise do ambiente',
    texts: [
      {
        type: 'default',
        body: 'Parece que permitiram voc√™ adentrar no planeta Datahon! Entretanto, √© melhor fazer uma an√°lise do ambiente antes de fazer um pouso seguro, o que o seu foguete j√° fez de antem√£o, retornando para voc√™ dados do planeta como nome, temperatura e se tem ar respir√°vel.',
      },
      {
        type: 'list',
        body: 'Sua miss√£o √© escrever qual o tipo de dado de cada um na ordem em que s√£o declarados, veja um exemplo:',
      },
      {
        type: 'code',
        body: `var nomeEstrela = "Proxima Centauri"
var temperatura = 100
var temCorAmarela = falso

escreva(\${nomeEstrela}: texto, \${temperatura}: numero, \${temCorAmarela}: falso")

Resultado: 
Proxima Centauri: texto, 100: n√∫mero, falso: l√≥gico`,
      },
      {
        type: 'alert',
        body: 'Dica: voc√™ pode colocar o nome dos tipos em vari√°veis e concaten√°-las com os textos usando interpola√ß√£o ou operador de adi√ß√£o.',
      },
    ],
    testCases: [
      {
        input: null,
        expectedOutput: `Datahon: texto, 53.5: n√∫mero, falso: l√≥gico`,
        isLocked: false,
      },
    ],

    code: `
var nome = "Datahon"
var temperatura = 53.5
var temOxigenio = verdadeiro

escreva()`,
    difficulty: 'easy',
    categories: ['b√°sico', 'textos', 'n√∫meros'],
  },
  {
    id: 2,
    starId: 8,
    title: 'An√°lise do ambiente',
    texts: [
      {
        type: 'default',
        body: 'Parece que permitiram voc√™ adentrar no planeta Datahon! Entretanto, √© melhor fazer uma an√°lise do ambiente antes de fazer um pouso seguro, o que o seu foguete j√° fez de antem√£o, retornando para voc√™ dados do planeta como nome, idade, temperatura e se tem ar respir√°vel.',
      },
      {
        type: 'default',
        body: 'Sua miss√£o √© escrever qual o tipo de dado de cada um na ordem em que s√£o declarados, veja um exemplo',
      },
      {
        type: 'code',
        body: `var nomeEstrela = "Proxima Centauri"
var temCorAmarela = verdadeiro

escreva("tipo nomeEstrela: " + "texto" + ", tipo nomeEstrela: l√≥gico")

saida: tipo nomeEstrela: texto, tipo temCorAmarela: l√≥gico`,
      },
      {
        type: 'alert',
        body: 'Dica: voc√™ pode colocar o nome dos tipos em vari√°veis e concaten√°-las com os textos, mas lembre-se de respeitar as v√≠rgulas e os espa√ßos',
      },
    ],
    testCases: [
      {
        input: null,
        expectedOutput: `tipo nomeEstrela: texto, tipo nomeEstrela: l√≥gico`,
        isLocked: false,
      },
    ],

    code: `
var nome = "Datahon"
var temperatura = 53.5
var temOxigenio = falso

var tipoNome
var tipoTemperatura
var tipoOxigenio

escreva("l√≥gico")`,
    difficulty: 'easy',
    categories: ['b√°sico', 'textos', 'n√∫meros'],
  },
  {
    id: 12,
    starId: null,
    title: 'Somar energias',
    texts: [
      {
        type: 'default',
        body: 'Em uma gal√°xia muito, muito distante, h√° uma nave espacial que precisa de um sistema para calcular a soma de energia de duas fontes diferentes.',
      },
      {
        type: 'default',
        body: 'Ent√£o, crie uma fun√ß√£o que receba dois valores de energia como argumentos e retorne a soma total de energia',
      },
      {
        type: 'markdown',
        body: `
Saida: "Ol√°, mundo!"`,
      },
      {
        type: 'alert',
        body: 'N√£o se esque√ßa de usar o "retorna" na fun√ß√£o',
      },
    ],
    testCases: [
      {
        input: [3, 2],
        expectedOutput: 5,
        isLocked: false,
      },
      {
        input: [-3, -6],
        expectedOutput: -9,
        isLocked: false,
      },
      {
        input: [7, 3],
        expectedOutput: 3,
        isLocked: false,
      },
    ],

    code: `
function calcularEnergia(energia1, energia2) {

}`,
    difficulty: 'hard',
    categories: ['b√°sico', 'matem√°tica', 'n√∫meros'],
  },
  {
    id: 13,
    starId: null,
    title: 'Pedido de ajuda',
    texts: [
      {
        type: 'default',
        body: 'Voc√™ est√° navegando pelo espa√ßo e de repente seu foguete quebra üò¢. Tudo o que resta fazer √© enviar uma messagem de socorro espa√ßo a fora',
      },
      {
        type: 'default',
        body: 'Logo, sua miss√£o √© criar uma simples fun√ß√£o que retorne "Socorro, preciso de ajuda!"',
      },
      {
        type: 'code',
        body: `Saida: "Ol√°, mundo!"`,
      },
      {
        type: 'alert',
        body: 'N√£o s√£o se esque√ßa de usar o "retorna" na fun√ß√£o e tamb√©m n√£o alterar o nome da fun√ß√£o que colocamos',
      },
      {
        type: 'alert',
        body: 'Lembre-se de prestar aten√ß√£o nas letras mai√∫sculas e min√∫sculas, assim como a pontua√ß√£o',
      },
    ],
    function: 'pedirAjuda()',
    testCases: [
      {
        input: [],
        expectedOutput: 'Socorro, preciso de ajuda!',
        isLocked: false,
      },
    ],
    code: `
function hello() {

}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'textos'],
  },
  {
    id: 14,
    starId: null,
    title: 'Conversor de n√∫meros para crons',
    texts: [
      {
        type: 'default',
        body: 'Voc√™ √© um engenheiro de nave espacial em uma miss√£o para explorar uma gal√°xia distante. A tripula√ß√£o da nave utiliza uma unidade de tempo espacial para medir o tempo, que √© diferente da unidade de tempo terrestre.',
      },
      {
        type: 'default',
        body: 'A unidade de tempo espacial √© chamada de "cron". Um cron √© igual a 60 minutos terrestres. Por exemplo, se a tripula√ß√£o diz que um evento ocorrer√° em 3 crons, isso significa que o evento ocorrer√° em 3 x 60 = 180 minutos terrestres.',
      },
      {
        type: 'default',
        body: 'Voc√™ precisa criar uma fun√ß√£o chamada minutosParaCrons que converta uma quantidade de minutos terrestres em crons.',
      },
      {
        type: 'code',
        body: `
Entrada: 240
Saida: 4

Entrada: 360
Saida: 6`,
      },
      {
        type: 'alert',
        body: 'N√£o s√£o se esque√ßa de usar o "retorna" na fun√ß√£o e tamb√©m n√£o alterar o nome da fun√ß√£o que colocamos.',
      },
      {
        type: 'alert',
        body: 'Dica: Lembre-se de que um cron √© igual a 60 minutos terrestres.',
      },
    ],
    function: 'converterMinutosParaCrons()',
    testCases: [
      {
        input: [300],
        expectedOutput: 5,
        isLocked: false,
      },
      {
        input: [180],
        expectedOutput: 3,
        isLocked: false,
      },
      {
        input: [120],
        expectedOutput: 2,
        isLocked: false,
      },
    ],

    code: `
function converterMinutosParaCrons(minutos) {

}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'matem√°tica', 'n√∫meros'],
  },
  {
    id: 14,
    starId: null,
    title: 'Detector de naves bumerangue',
    texts: [
      {
        type: 'default',
        body: 'Em uma gal√°xia muito distante, existe uma frota de naves espaciais que patrulham o espa√ßo em busca de amea√ßas alien√≠genas.',
      },
      {
        type: 'default',
        body: 'O c√≥digo de cada uma dessas naves √© composto por tr√™s n√∫meros de 1 a N e s√£o equipadas com um dispositivo que pode detectar a presen√ßa de outras naves em um raio de alcance.',
      },
      {
        type: 'default',
        body: 'Aqui est√° o desafio: escreva uma fun√ß√£o conteBumerangues que retorne o n√∫mero de vezes que uma nave do tipo "bumerangue" √© detectada em uma determinada patrulha. O c√≥digo de uma nave "bumerangue" possui uma sequ√™ncia de tr√™s n√∫meros consecutivos em que a primeiro e a terceiro s√£o o mesmo, mas o segundo n√∫mero √© diferente.',
      },
      {
        type: 'default',
        body: 'Por exemplo, se o vetor de entrada for [1, 2, 1, 3, 1, 4, 2, 5, 2, 6], a fun√ß√£o deve retornar 2, porque existem duas sequ√™ncias de tr√™s n√∫meros consecutivos em que a primeira e a terceiro n√∫mero s√£o iguais: [1, 2, 1] e [2, 5, 2].',
      },
      {
        type: 'code',
        body: `
Entrada: [3, 7, 3, 2, 1, 5, 1, 2, 2, -2, 2]
Resultado: 3
Explicacao: a partir do vetor de entrada √© poss√≠vel extrair 3 naves bumerangues: [3, 7, 3], [1, 5, 1], [2, -2, 2]

Entrada: [9, 5, 9, 5, 1, 1, 1]
Resultado: 2
Explicacao: a partir do vetor de entrada √© poss√≠vel extrair 2 naves bumerangues: [9, 5, 9], [5, 9, 4]

Entrada: [1, 7, 1, 7, 1, 7, 1]
Resultado: 5
Explicacao: a partir do vetor de entrada √© poss√≠vel extrair 5 naves bumerangues: [1, 7, 1], [7, 1, 7], [1, 7, 1], [7, 1, 7], e [1, 7, 1]`,
      },
      {
        type: 'alert',
        body: 'Observe que [5, 5, 5] (vetor com 3 d√≠gitos identicos) n√£o √© considerado uma nave bumerangue porque o valor do meio √© identico ao primeiro e o terceiro.',
      },
    ],
    function: 'conteNavesBumerangues()',
    testCases: [
      {
        input: [[5, 6, 6, 7, 6, 3, 9]],
        expectedOutput: 1,
        isLocked: false,
      },
      {
        input: [[4, 4, 4, 9, 9, 9, 9]],
        expectedOutput: 0,
        isLocked: true,
      },
      {
        input: [[1, 2, 1, 3, 1, 4, 2, 5, 2, 6]],
        expectedOutput: 3,
        isLocked: true,
      },
    ],

    code: `
function conteNavesBumerangues(numeros) {

}`,
    difficulty: 'hard',
    categories: ['vetores', 'la√ßos'],
  },
  {
    id: 15,
    starId: null,
    title: 'Chuva de asteroides',
    texts: [
      {
        type: 'default',
        body: 'Faz alguns minutos que seu foguete saiu para o espa√ßo, mas voc√™ j√° encontrou um planeta √† vista!.',
      },
      {
        type: 'default',
        body: 'Por√©m, h√° tr√™s asteroides gigantes vindo em sua dire√ß√£o.',
      },
      {
        type: 'list',
        title: 'Que??',
        body: 'Seu dever √© testar se o escudo protetor do foguete est√° ativo (valor verdadeiro) e que a resist√™ncia (valor 700) √© maior que a soma das for√ßas dos tr√™s asteroides (A, B, C).',
      },
      {
        type: 'code',
        body: `
Entrada: 100, 200, 300, verdadeiro
Resultado: verdadeiro
// Explica√ß√£o:
// a soma das for√ßas d√° 600
// e a resistencia √© 700.
// Como o escudo est√° ativo (verdadeiro)
// e essa soma √© menor que 700, 
// logo o resultado √© verdadeiro

Entrada: 500, 500, 500, verdadeiro
Resultado: falso
// Explica√ß√£o:
// a soma √© 1500 e a resit√™ncia √© 700, 
// logo o resultado j√° √© falso

Entrada: 50, 100, 150, falso
Resultado: falso
// Explica√ß√£o: 
// a soma √© 300 e a resit√™ncia √© 700,
// por√©m o escudo n√£o est√° ativo,
// ent√£o o resultado √© falso`,
      },
      {
        type: 'alert',
        body: 'Dica: coloque a soma das for√ßas em uma vari√°vel chamada soma e depois compare se ela √© maior ou n√£o que a resist√™ncia.',
      },
      {
        type: 'alert',
        body: 'N√£o se esque√ßa de comparar tamb√©m se o escudo est√° ativo.',
      },
      {
        type: 'alert',
        body: 'O comando "leia()" √© super importante para resolver o desafio. Ent√£o, por favor, n√£o remova nenhum comando "leia()".',
      },
    ],
    function: null,
    testCases: [
      {
        input: [100, 100, 100, 'verdadeiro'],
        expectedOutput: 'verdadeiro',
        isLocked: false,
      },
      {
        input: [300, 400, 800, 'verdadeiro'],
        expectedOutput: 'falso',
        isLocked: false,
      },
      {
        input: [50, 200, 200, 'falso'],
        expectedOutput: 'falso',
        isLocked: false,
      },
      {
        input: [100, 500, 100, 'falso'],
        expectedOutput: 'falso',
        isLocked: false,
      },
    ],

    code: `
var asteroideA = leia();
var asteroideB = leia();
var asteroideC = leia();

var escudoAtivo = leia();

var resitencia = 700`,
    difficulty: 'easy',
    categories: ['matem√°tica', 'b√°sico', 'n√∫meros'],
  },
  {
    id: 16,
    starId: null,
    title: 'Quantos planetas habitados?',
    texts: [
      {
        type: 'default',
        body: 'Em uma gal√°xia distante, existem v√°rias naves espaciais que est√£o explorando novos mundos.',
      },
      {
        type: 'default',
        body: 'Cada nave tem sensores que coletam dados sobre a presen√ßa de diferentes formas de vida nos planetas visitados.',
      },
      {
        type: 'default',
        body: 'Os sensores s√£o controlados por um sistema de intelig√™ncia artificial que detecta a presen√ßa ou aus√™ncia de vida com base em diferentes fatores.',
      },
      {
        type: 'default',
        body: 'Voc√™ tem uma func√£o que recebe um vetor de valores l√≥gicos coletados pelos sensores de v√°rias naves espaciais, representando a presen√ßa ou aus√™ncia de vida em diferentes planetas.',
      },
      {
        type: 'default',
        body: 'Seu dasafio √©: fazer com que a fun√ß√£o deve retorne o n√∫mero de valores "verdadeiro" no vetor.',
      },
      {
        type: 'code',
        body: `
Entrada: [verdadeiro, falso, falso, verdadeiro, falso]
Resultado: 2

Entrada: [falso, falso, falso, falso]
Resultado: 0

Entrada: []
Resultado: 2`,
      },
      {
        type: 'alert',
        body: 'A fun√ß√£o deve retornar 0 se o vetor for vazio.',
      },
      {
        type: 'alert',
        body: 'N√£o se preocupe, todos os valores dos vetores s√£o do tipo l√≥gico',
      },
    ],
    functionName: 'quantosPlanetasHabitados',
    testCases: [
      {
        input: [['verdadeiro', 'falso', 'verdadeiro', 'verdadeiro', 'falso']],
        expectedOutput: 3,
        isLocked: false,
      },
      {
        input: [['falso', 'falso', 'falso']],
        expectedOutput: 0,
        isLocked: false,
      },
      {
        input: [['verdadeiro', 'verdadeiro', 'verdadeiro', 'verdadeiro']],
        expectedOutput: 4,
        isLocked: false,
      },
    ],

    code: `
function quantosPlanetasHabitados(planetas) {
    
}`,
    difficulty: 'easy',
  },

  {
    starId: null,
    title: 'Per√≠metro espacial',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Voc√™ √© um engenheiro espacial respons√°vel por construir uma nave em forma de ret√¢ngulo.',
      },
      {
        type: 'list',
        body: 'Sua miss√£o √© calcular o per√≠metro desse ret√¢ngulo em unidades espaciais, cosiderando sua largura e altura.',
      },
      {
        type: 'code',
        body: `
Entrada: 6, 7
Resultado: 26

Entrada: 20, 10
Resultado: 60

Entrada: 2, 9
Resultado: 22`,
      },
      {
        type: 'alert',
        body: 'N√£o s√£o se esque√ßa de usar o "retorna" na fun√ß√£o e tamb√©m n√£o alterar o nome da fun√ß√£o que colocamos.',
      },
      {
        type: 'alert',
        body: 'Considere que o ret√¢ngulo espacial n√£o possui cantos arredondados e que as unidades espaciais s√£o n√∫meros inteiros.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [10, 30],
        expectedOutput: 80,
        isLocked: false,
      },
      {
        input: [20, 20],
        expectedOutput: 80,
        isLocked: false,
      },
      {
        input: [5, 8],
        expectedOutput: 18,
        isLocked: false,
      },
    ],

    code: `function calcularPerimetro(altura, largura) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Per√≠metro espacial',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Em um futuro distante, v√°rias esp√©cies alien√≠genas se unem para explorar o espa√ßo. Cada esp√©cie possui uma lista de espa√ßonaves identificadas por n√∫meros, letras ou combina√ß√µes.',
      },
      {
        type: 'list',
        body: 'Para facilitar a uni√£o, voc√™ deve unir as listas/vetores de cada esp√©cie em uma s√≥, para que todos possam explorar juntos.',
      },
      {
        type: 'code',
        body: `
Entrada: [1, 3, 5], [2, 6, 8]
Resultado: [1, 3, 5, 2, 6, 8]

Entrada: [7, 8], [10, 9, 1, 1, 2]
Resultado: [7, 8, 10, 9, 1, 1, 2]

Entrada: [4, 5, 1], [3, 3, 3, 3, 3]
Resultado: [4, 5, 1, 3, 3, 3, 3, 3]`,
      },
      {
        type: 'alert',
        body: 'Dica: Voc√™ pode resolver esse desafio usando dois la√ßos "para", um para cada vetor e ent√£o juntar em um vetor √∫nico.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [
          [1, 2, 3],
          [4, 5, 6],
        ],
        expectedOutput: [[1, 2, 3, 4, 5, 6]],
        isLocked: false,
      },
      {
        input: [
          [0, 7, 8],
          [100, 200],
        ],
        expectedOutput: [[0, 7, 8, 100, 200]],
        isLocked: false,
      },
      {
        input: [[], [1, 2, 3]],
        expectedOutput: [[1, 2, 3]],
        isLocked: false,
      },
    ],

    code: `function calcularPerimetro(altura, largura) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Planetas pares encontrados',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Escapamos da explos√£o por um triz. S√≥ que agora resta procurar outro planeta para explorar.',
      },
      {
        type: 'default',
        title: null,
        body: 'O radar do foguete indentificou uma quantidade de planetas, por√©m ele diz que apenas os planetas pares realmente s√£o seguros',
      },
      {
        type: 'list',
        title: 'Desafio',
        body: 'Da quantidade total de planetas identificados (come√ßando pelo 1) o seu papel √© mostrar a quantidade de planetas s√£o seguros.',
      },
      {
        type: 'code',
        body: `
Entrada: 8
Resultado: 4
Explicacao: entre 1 e 8 h√° 4 n√∫meros pares

Entrada: 13
Resultado: entre 1 e 13 h√° 6 n√∫meros pares

Entrada: 1
Resultado: 0
Explicacao: entre 1 e 1 n√£o h√° n√∫meros pares`,
      },
      {
        type: 'alert',
        body: 'Para resolver esse desafio, voc√™ pode usar qualquer um dos 3 tipos de la√ßo (para, enquanto ou fazer enquanto)',
      },
      {
        type: 'alert',
        body: 'Dica: para saber se um n√∫mero √© par, voc√™ pode pegar o m√≥dulo do n√∫mero por 2, usando o operador "%", ou seja, dividir por dois e verificar se h√° resto de divis√£o. Por exemplo: 4 √© par, pois 4 m√≥dulo 2 (4 % 2) √© igual a zero; 5 √© √≠mpar, pois 5 m√≥dulo 2 √© diferente de zero (5 % 2).',
      },
    ],
    function: null,
    testCases: [
      {
        input: [10],
        expectedOutput: 5,
        isInputArray: true,
        isLocked: false,
      },
      {
        input: [7],
        expectedOutput: 3,
        isArray: true,
        isLocked: false,
      },
      {
        input: [1],
        expectedOutput: 0,
        isLocked: false,
      },
      {
        input: [0],
        expectedOutput: 0,
        isLocked: false,
      },
    ],

    code: `function somarResist√™ncias(altura, largura) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Resist√™ncias em circuitos',
    texts: [
      {
        type: 'default',
        body: 'No planeta X-23, uma equipe de engenheiros espaciais precisa calcular a soma das resist√™ncias em uma s√©rie de circuitos de energia que alimentam as espa√ßonaves.',
      },
      {
        type: 'default',
        body: ' No entanto, eles enfrentam um problema √∫nico: as resist√™ncias s√£o representadas por cristais m√°gicos encontrados apenas em planetas distantes.',
      },
      {
        type: 'default',
        title: null,
        body: 'Cada cristal m√°gico tem um valor de resist√™ncia associado a ele, medido em unidades m√≠sticas chamadas "ohms". A equipe de engenheiros precisa somar todas as X-resist√™ncias em uma s√©rie de cristais para determinar a resist√™ncia total do circuito.',
      },
      {
        type: 'list',
        title: 'Desafio',
        body: 'Sua tarefa √© retornar a soma total das resist√™ncias de um vetor contendo valores de resist√™ncia (ohms) dos cristais m√°gicos em um circuito.',
      },
      {
        type: 'code',
        body: `
Entrada: [3, 5, 2, 8]
Resultado: "18 ohms"

Entrada: [16, 3.5, 6]
Resultado: "25.5 ohms"

Entrada: [0.5, 0.5]
Resultado: "1 ohm"`,
      },
      {
        type: 'alert',
        body: 'O sigular de ohms √© ohm, ou seja, se a soma do vetor for 1, o "ohm" tem que estar no singular.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [[2, 4, 6, 8, 10]],
        expectedOutput: "30 ohms",
        isLocked: false,
      },
      {
        input: [[0.8, 1.2, 2.6, 3.4, 0.5]],
        expectedOutput: "8.5 ohms",
        isLocked: false,
      },
      {
        input: [[2.5, 1.5, 3.2, 4.8]],
        expectedOutput: "12 ohms",
        isLocked: false,
      },
      {
        input: [[0.5, 0.3, 0.1, 0.1]],
        expectedOutput: "1 ohm",
        isLocked: false,
      },
    ],

    code: `function calcularPerimetro(altura, largura) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: '',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Voc√™ tem uma lista de naves espaciais no formato de objetos. Converta cada objeto em um vetor e retorne uma lista de vetores.',
      },
      {
        type: 'default',
        title: null,
        body: 'Cada objeto possui as seguintes propriedades.',
      },
      {
        type: 'default',
        body: '. nome: o nome da nave (texto)\n. tripulacao: o n√∫mero de tripulantes da nave(inteiro)',
      },
      {
        type: 'code',
        body: `
Entrada: {nome: 'USS Enterprise', tripulacao: 449}
Resultado: [['nome', 'USS Enterprise'], ['tripulacao', 449]]

Entrada: {nome: 'Millennium Falcon', tripulacao: 5}
Resultado: [['nome', 'Millennium Falcon'], ['tripulacao', 5]]

Entrada: {nome: 'Light Freighter', tripulacao: 24}
Resultado: [['nome', 'Light Freighter'], ['tripulacao', 24]]

Entrada: {}
Resultado: []`,
      },
      {
        type: 'alert',
        body: 'Caso a entrada seja um objeto vazio, o retorno dever√° ser um vetor vazio tamb√©m.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ["{ nome: 'Serenity', tripulacao: 9 }"],
        expectedOutput: '[name: "Serenity", tripulacao: 9]',
        isLocked: false,
      },
      {
        input: ["{ nome: 'vashta nerada', tripulacao: 530 }"],
        expectedOutput: '[name: "vashta nerada", tripulacao: 530]',
        isLocked: false,
      },
      {
        input: ['{}'],
        expectedOutput: '[]',
        isLocked: true,
      },
    ],
    code: `funcao converterObjetosNavesEmVetores(naves) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Vetor de m√∫ltiplos',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Em uma gal√°xia distante, a tripula√ß√£o de uma nave espacial precisa calcular uma lista de m√∫ltiplos de um determinado n√∫mero para ajudar em seus c√°lculos de navega√ß√£o.',
      },
      {
        type: 'default',
        title: null,
        body: 'Ent√£o, o desafio √©: retornar um vetor',
      },
      {
        type: 'default',
        title: 'S√≥ isso?',
        body: 'N√£o qualquer tipo de vetor. Voc√™ receber√° dois valores: numero e tamanho.',
      },
      {
        type: 'list',
        body: 'O vetor em quest√£o deve ter a quantidades de n√∫meros igual a "tamanho", contendo m√∫ltiplos do valor "numero".',
      },
      {
        type: 'code',
        body: `
Entrada: 7, 5
Resultado: [7, 14, 21, 28, 35]
Explicacao: o vetor tem cinco n√∫meros, pois tamanho √© igual a 5, e todos eles s√£o m√∫ltiplos de 7

Entrada: 12, 2
Resultado: [12, 24]
Explicacao: o vetor tem dois n√∫meros, pois tamanho √© igual a 10, e todos eles s√£o m√∫ltiplos de 12

Entrada: 17, 6
Resultado: [17, 34, 51, 68, 85, 102]
Explicacao: o vetor tem seis n√∫meros, pois tamanho √© igual a 6, e todos eles s√£o m√∫ltiplos de 17`,
      },
      {
        type: 'alert',
        body: 'Note que o valor "numero" tamb√©m est√° presente no vetor.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [7, 5],
        expectedOutput: [7, 14, 21, 28, 35],
        isLocked: false,
      },
      {
        input: [17, 6],
        expectedOutput: [17, 34, 51, 68, 85, 102],
        isLocked: false,
      },
      {
        input: [3, 1],
        expectedOutput: [3],
        isLocked: false,
      },
      {
        input: [2, 0],
        expectedOutput: [],
        isLocked: true,
      },
    ],
    code: `funcao concatenarAmostras(amostras) {
    
}`,
    difficulty: 'medium',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Amostras de planetas',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Suponha que uma equipe de astronautas tenha descoberto uma nave alien√≠gena e est√° tentando decifrar o c√≥digo de seguran√ßa para acess√°-la.',
      },
      {
        type: 'default',
        title: null,
        body: 'Eles descobriram que o c√≥digo de seguran√ßa consiste em um n√∫mero repdigit, ou seja, um n√∫mero positivo em que todos os d√≠gitos s√£o iguais.',
      },
      {
        type: 'list',
        body: 'Seu dever √© recebe um n√∫mero e verificar se ele √© um repdigit. Seu programa deve retornar verdadeiro se o n√∫mero for de fato um repdigit e falso caso contr√°rio.',
      },
      {
        type: 'code',
        body: `
Entrada: 66
Resultado: verdadeiro
Explicacao: 66 tem dois d√≠gitos, que s√£o todos iguais 

Entrada: 113
Resultado: falso
Explicacao: 113 tem dois tr√™s, mas nem todos s√£o iguais 

Entrada: -11
Resultado: falso
Explicacao: Um repdigit tem que ser um n√∫mero positivo
`,
      },
      {
        type: 'alert',
        body: 'Caso o n√∫mero seja 0, o programa deve retornar verdadeiro.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [666],
        expectedOutput: 'verdadeiro',
        isLocked: false,
      },
      {
        input: [12345],
        expectedOutput: 'falso',
        isLocked: false,
      },
      {
        input: [11111111],
        expectedOutput: 'verdadeiro',
        isLocked: false,
      },
      {
        input: [0],
        expectedOutput: 'verdadeiro',
        isLocked: true,
      },
    ],

    code: `funcao concatenarAmostras(amostras) {
    
}`,
    difficulty: 'medium',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: '',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Voc√™ tem uma lista de naves espaciais no formato de objetos. Converta cada objeto em um vetor e retorne uma lista de vetores.',
      },
      {
        type: 'default',
        title: null,
        body: 'Cada objeto possui as seguintes propriedades.',
      },
      {
        type: 'list',
        body: '. nome: o nome da nave (texto)\n. tripulacao: o n√∫mero de tripulantes da nave(inteiro)',
      },
      {
        type: 'code',
        body: `
Entrada: {nome: 'USS Enterprise', tripulacao: 449}
Resultado: [['nome', 'USS Enterprise'], ['tripulacao', 449]]

Entrada: {nome: 'Millennium Falcon', tripulacao: 5}
Resultado: [['nome', 'Millennium Falcon'], ['tripulacao', 5]]

Entrada: {nome: 'Light Freighter', tripulacao: 24}
Resultado: [['nome', 'Light Freighter'], ['tripulacao', 24]]

Entrada: {}
Resultado: []`,
      },
      {
        type: 'alert',
        body: 'Caso a entrada seja um objeto vazio, o retorno dever√° ser um vetor vazio tamb√©m.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ["{ nome: 'Serenity', tripulacao: 9 }"],
        expectedOutput: '[name: "Serenity", tripulacao: 9]',
        isLocked: false,
      },
      {
        input: ["{ nome: 'vashta nerada', tripulacao: 530 }"],
        expectedOutput: '[name: "vashta nerada", tripulacao: 530]',
        isLocked: false,
      },
      {
        input: ['{}'],
        expectedOutput: '[]',
        isLocked: true,
      },
    ],

    code: `funcao converterObjetosNavesEmVetores(naves) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Contando batatas',
    texts: [
      {
        type: 'default',
        body: 'No distante planeta Nebulosa Potatonia, uma civiliza√ß√£o de seres espaciais com uma predile√ß√£o por batatas criou uma variedade especial de batatas intergal√°cticas.',
      },
      {
        type: 'list',
        title: 'Desafio',
        body: 'Sua tarefa √© retornar a quantidade de batatas de um dado texto contendo diferentes tipos de ingredientes separadas por v√≠rgulas.',
      },
      {
        type: 'code',
        body: `
Entrada: "Batata,Feij√£o,Batata"
Resultado: 2

Entrada: "Arroz,Batata,Batata,Batata,Tomate"
Resultado: 3

Entrada: "Cenoura,Feij√£o,Alface"
Resultado: 0`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Dica matadora: Voc√™ pode transformar o texto em um vetor e contar quantas batatas tem.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ['\"Batata,Arroz,Batata,Feij√£o,Batata\"'],
        expectedOutput: 3,
        isLocked: false,
      },
      {
        input: ['\"Cenoura,Arroz,Tomate,Batata,Alface\"'],
        expectedOutput: 1,
        isLocked: false,
      },
      {
        input: ['\"Batata,Batata,Batata,Batata\"'],
        expectedOutput: 4,
        isLocked: false,
      },
      {
        input: ['\"Arroz,Feij√£o,Cenoura,Tomate\"'],
        expectedOutput: 0,
        isLocked: false,
      },
    ],

    code: `funcao contarBatatas(alimentos) {

}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Removendo textos',
    texts: [
      {
        type: 'default',
        body: 'No planeta Alpha Centauri, os habitantes s√£o seres de diferentes esp√©cies, incluindo criaturas m√°gicas e seres extraterrestres avan√ßados',
      },
      {
        type: 'default',
        title: 'Legal!',
        body: 'Eles precisam de sua ajuda para filtrar uma lista de elementos em um vetor, contendo elementos de diferentes tipos, como n√∫meros, textos e l√≥gicos.',
      },
      {
        type: 'list',
        title: 'Desafio',
        body: 'Sua tarefa √© retornar esse vetor mantendo apenas os elementos que n√£o s√£o do tipo texto.',
      },
      {
        type: 'code',
        body: `
var alimentos = [
    "lentilha lunar"
    "sapo lunar"
    "iogurte de gelo"
    "sapo l√°cteo"
];`,
        isRunnable: false,
      },
      {
        type: 'default',
        title: 'Sapo?',
        body: 'Por algum motivo o foguete incluiu sapos entre os alimentos, eca!',
      },
      {
        type: 'list',
        title: 'Desafio:',
        body: 'Seu papel √© remover todos os itens do vetor alimentos que incluam a palavra "sapo" no nome.',
      },
      {
        type: 'code',
        body: `
Entrada: [piment√£o, sapo de s√≥, melancia]
Resultado: [piment√£o, melancia]

Entrada: [sapo de caju, sapo kiwi, milho de ricota]
Resultado: [milho de ricota]

Entrada: [cevada, tamarindo, sapo coalhado]
Resultado: [cevada, tamarindo]`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Para facilitar seu trabalho j√° coloquei um la√ßo "para-cada" no seu c√≥digo.',
      },
      {
        type: 'alert',
        body: 'Lembre-se dos m√©todos de vetor, caso esque√ßa algum voc√™ pode conferir no dicion√°rio no menu superior.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [["'manga'", "'sapo gasoso'", "'berinjela'"]],
        expectedOutput: 'manga,berinjela',
        isLocked: false,
      },
      {
        input: [["'sapo condensado'", "'cebola doce'", "'camar√£o de batata'", "'sapo de morango'"]],
        expectedOutput: 'cebola doce,camar√£o de batata',
        isLocked: false,
      },
      {
        input: [["'sorvete de sapo'", "'requeij√£o'"]],
        expectedOutput: 'requeij√£o',
        isLocked: true,
      },
    ],

    code: `funcao converterObjetosNavesEmVetores(naves) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Removendo sapos',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Enfim, s√£o e salvos em nosso foguete. Est√° com fome?',
      },
      {
        type: 'default',
        title: 'Sim',
        body: 'O foguete no caminho ao resgate pegou v√°rios alimentos para fazer nosso jantar, veja alguns:',
      },
      {
        type: 'code',
        body: `
var alimentos = [
    "lentilha lunar"
    "sapo lunar"
    "iogurte de gelo"
    "sapo l√°cteo"
];`,
        isRunnable: false,
      },
      {
        type: 'default',
        title: 'Sapo?',
        body: 'Por algum motivo o foguete incluiu sapos entre os alimentos, eca!',
      },
      {
        type: 'list',
        title: 'Desafio:',
        body: 'Seu papel √© remover todos os itens do vetor alimentos que incluam a palavra "sapo" no nome.',
      },
      {
        type: 'code',
        body: `
Entrada: [piment√£o, sapo de s√≥, melancia]
Resultado: [piment√£o, melancia]

Entrada: [sapo de caju, sapo kiwi, milho de ricota]
Resultado: [milho de ricota]

Entrada: [cevada, tamarindo, sapo coalhado]
Resultado: [cevada, tamarindo]`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Para facilitar seu trabalho j√° coloquei um la√ßo "para-cada" no seu c√≥digo.',
      },
      {
        type: 'alert',
        body: 'Lembre-se dos m√©todos de vetor, caso esque√ßa algum voc√™ pode conferir no dicion√°rio no menu superior.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [["'manga'", "'sapo gasoso'", "'berinjela'"]],
        expectedOutput: 'manga,berinjela',
        isLocked: false,
      },
      {
        input: [["'sapo condensado'", "'cebola doce'", "'camar√£o de batata'", "'sapo de morango'"]],
        expectedOutput: 'cebola doce,camar√£o de batata',
        isLocked: false,
      },
      {
        input: [["'sorvete de sapo'", "'requeij√£o'"]],
        expectedOutput: 'requeij√£o',
        isLocked: true,
      },
    ],

    code: `funcao converterObjetosNavesEmVetores(naves) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Removendo sapos',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Em uma gal√°xia distante, em meio a v√°rias ra√ßas extraterrestres, h√° um animal escondido entre elas',
      },
      {
        type: 'default',
        body: 'Os alien√≠genas possuem nomes esquisitos e escritos em letras mai√∫sculas, como "YHJR" ou "WSDFKK"',
      },
      {
        type: 'default',
        body: 'J√° os nomes de animais terrestres, como gato, vaca, cachorro etc, s√£o escritos em letras min√∫sculas.',
      },
      {
        type: 'default',
        body: 'Contudo, os nomes desses seres est√£o embaralhados em um texto gigante, como "UgUNFYGaFYFYGtNUoH"',
      },
      {
        type: 'list',
        title: 'Desafio:',
        body: 'Sua tarefa √© retornar o nome do animal terrestre dessa sopa de letras',
      },
      {
        type: 'default',
        body: 'Veja o exemplo para entender melhor:',
      },
      {
        type: 'code',
        body: `Entrada: "UgUNFYGaFYFYGtNUoH"
Resultado: "gato"

Entrada: "bEEFGBvFBRrHaUHlcNFYaYr"
Resultado: "vaca"

Entrada: "YFcaHUFBbczFBYhFBYLloGBYEFGBMENTrro"
Resultado: "cachorro"`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Note que apesar do nome do animal est√° espalhado entra v√°rias letras, a ordem das letras que comp√µem o nome do animal permanece na ordem correta.',
      },
      {
        type: 'alert',
        body: 'Lembre-se: as letras do nome do animal est√£o em min√∫scula, mas as demais em mai√∫scula.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ["RrTEaOMTtPBoAPC"],
        expectedOutput: 'rato',
        isLocked: false,
      },
      {
        input: ["KPserFCVBMpenTLteDA"],
        expectedOutput: 'serpente',
        isLocked: false,
      },
      {
        input: ["caYWDYUOvaQWEvPaOLlo"],
        expectedOutput: 'cavalo',
        isLocked: true,
      },
      {
        input: ["RTTTUAforUWWmiASgPPPa"],
        expectedOutput: 'formiga',
        isLocked: true,
      },
    ],

    code: `funcao procurarAnimal(letras) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Removendo sapos',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Enfim, s√£o e salvos em nosso foguete. Est√° com fome?',
      },
      {
        type: 'default',
        title: 'Sim',
        body: 'O foguete no caminho ao resgate pegou v√°rios alimentos para fazer nosso jantar, veja alguns:',
      },
      {
        type: 'code',
        body: `
var alimentos = [
    "lentilha lunar"
    "sapo lunar"
    "iogurte de gelo"
    "sapo l√°cteo"
];`,
        isRunnable: false,
      },
      {
        type: 'default',
        title: 'Sapo?',
        body: 'Por algum motivo o foguete incluiu sapos entre os alimentos, eca!',
      },
      {
        type: 'list',
        title: 'Desafio:',
        body: 'Seu papel √© remover todos os itens do vetor alimentos que incluam a palavra "sapo" no nome.',
      },
      {
        type: 'code',
        body: `
Entrada: [piment√£o, sapo de s√≥, melancia]
Resultado: [piment√£o, melancia]

Entrada: [sapo de caju, sapo kiwi, milho de ricota]
Resultado: [milho de ricota]

Entrada: [cevada, tamarindo, sapo coalhado]
Resultado: [cevada, tamarindo]`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Para facilitar seu trabalho j√° coloquei um la√ßo "para-cada" no seu c√≥digo.',
      },
      {
        type: 'alert',
        body: 'Lembre-se dos m√©todos de vetor, caso esque√ßa algum voc√™ pode conferir no dicion√°rio no menu superior.',
      },
    ],
    function: null,
    testCases: [
      {
        input: [["'manga'", "'sapo gasoso'", "'berinjela'"]],
        expectedOutput: 'manga,berinjela',
        isLocked: false,
      },
      {
        input: [["'sapo condensado'", "'cebola doce'", "'camar√£o de batata'", "'sapo de morango'"]],
        expectedOutput: 'cebola doce,camar√£o de batata',
        isLocked: false,
      },
      {
        input: [["'sorvete de sapo'", "'requeij√£o'"]],
        expectedOutput: 'requeij√£o',
        isLocked: true,
      },
    ],

    code: `funcao converterObjetosNavesEmVetores(naves) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Removendo sapos',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Em uma gal√°xia distante, em meio a v√°rias ra√ßas extraterrestres, h√° um animal escondido entre elas',
      },
      {
        type: 'default',
        body: 'Os alien√≠genas possuem nomes esquisitos e escritos em letras mai√∫sculas, como "YHJR" ou "WSDFKK"',
      },
      {
        type: 'default',
        body: 'J√° os nomes de animais terrestres, como gato, vaca, cachorro etc, s√£o escritos em letras min√∫sculas.',
      },
      {
        type: 'default',
        body: 'Contudo, os nomes desses seres est√£o embaralhados em um texto gigante, como "UgUNFYGaFYFYGtNUoH"',
      },
      {
        type: 'list',
        title: 'Desafio:',
        body: 'Sua tarefa √© identificar o nome do animal terrestre nessa sopa de letras',
      },
      {
        type: 'default',
        body: 'Veja o exemplo para entender melhor:',
      },
      {
        type: 'code',
        body: `Entrada: "UgUNFYGaFYFYGtNUoH"
Resultado: "gato"

Entrada: "bEEFGBvFBRrHaUHlcNFYaYr"
Resultado: "vaca"

Entrada: "YFcaHUFBbczFBYhFBYLloGBYEFGBMENTrro"
Resultado: "cachorro"`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Note que apesar do nome do animal est√° espalhado entra v√°rias letras, a ordem das letras que comp√µem o nome do animal permanece correto.',
      },
      {
        type: 'alert',
        body: 'Lembre-se: as letras do nome do animal est√£o em min√∫scula, mas as demais em mai√∫scula.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ["'RrTEaOMTtPBoAPC'"],
        expectedOutput: 'rato',
        isLocked: false,
      },
      {
        input: ["'KPserFCVBMpenTLteDA'"],
        expectedOutput: 'serpente',
        isLocked: false,
      },
      {
        input: ["'caYWDYUOvaQWEPOlLo'"],
        expectedOutput: 'cavalo',
        isLocked: true,
      },
      {
        input: ["'RTTTUAforUWWmiASgPPPa'"],
        expectedOutput: 'formiga',
        isLocked: true,
      },
    ],

    code: `funcao procurarAnimal(letras) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: '',
    texts: [
      {
        type: 'default',
        body: 'Em uma nave espacial, a tripula√ß√£o est√° tentando enviar mensagens importantes para outras espa√ßonaves.',
      },
      {
        type: 'default',
        body: 'No entanto, o teclado principal da nave est√° com defeito e algumas teclas n√£o est√£o funcionando corretamente. Isso dificulta a digita√ß√£o correta das mensagens.Por exemplo, ao digitar "Ol√°, mundo", a mensagem pode ser enviada como "Ox√°, zundo"',
      },
      {
        type: 'list',
        body: 'Sua tarefa √© identificar quais teclas est√£o quebradas, ou seja, as teclas que foram digitadas incorretamente devido ao defeito do teclado.',
      },
      {
        type: 'default',
        body: 'Voc√™ receber√° uma fun√ß√£o chamada "identificarTeclas" recebendo dois par√¢metros: a frase correta e a incorreta.',
      },
      {
        type: 'default',
        body: 'Voc√™ deve retornar um vetor contendo as letras que s√£o diferentes entre os duas frases',
      },
      {
        type: 'code',
        body: `Entrada: 'miss√£o em progresso', 'Mill√£o em progrello'
Sa√≠da: ['s']

Entrada: 'alien encontrado', 'Alien enzongrado'
Sa√≠da: ['c', 't']

Entrada: 'explora√ß√£o bem-sucedida', 'Exclora√ß√£o fem-xucedida'
Sa√≠da: ['p', 'b', 's']
`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Note que no primeiro exemplo o vetor de resultado tem apenas a letra "s" e n√£o quatro letras "s". Isso porque voc√™ deve identificar apenas uma tecla quebrada por frase, ou seja, o vetor retornado n√£o pode conter letras repetidas',
      },
      {
        type: 'alert',
        body: 'Isso porque voc√™ deve identificar apenas uma tecla quebrada por frase, ou seja, o vetor retornado n√£o pode conter letras repetidas',
      },
      {
        type: 'alert',
        body: 'Todas as frases passadas para voc√™ estar√£o em letras min√∫sculas.',
      },
      {
        type: 'alert',
        body: 'A ordem das letras do vetor a ser retornado deve corresponder com a ordem em que elas s√£o encontradas na frase correta.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ["'laser ativado'", "'baser ativago'"],
        expectedOutput: ['l', 'd'],
        isLocked: false,
      },
      {
        input: ["'energia est√° completa'", "'enerbiu est√° completu'"],
        expectedOutput: ['g', 'a'],
        isLocked: false,
      },
      {
        input: ["'sistema comprometido'", "'sisdemo bompromedido'"],
        expectedOutput: ['t', 'a', 'c'],
        isLocked: false,
      },
    ],

    code: `funcao identificarTeclas(fraseCorreta, fraseIconrreta) {

}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'Verificando n√∫mero c√≥smico',
    texts: [
      {
        type: 'default',
        body: 'Em uma gal√°xia distante, existem criaturas m√≠sticas que residem em diferentes planetas. Cada criatura √© identificada por um n√∫mero √∫nico que representa sua ess√™ncia c√≥smica.',
      },
      {
        type: 'default',
        body: '√â fornecido a voc√™ uma fun√ß√£o chamada "verificarNumero", que receber√° um n√∫mero c√≥smico como par√¢metro.',
      },
      {
        type: 'list',
        title: 'Tarefa',
        body: 'Sua tarefa √© retornar verdadeiro se o n√∫mero for menor ou igual a zero, e falso caso contr√°rio.',
      },
      {
        type: 'default',
        body: 'Aqui est√° um exemplo para entender o desafio.',
      },
      {
        type: 'code',
        body: `
Entrada: 5
Resultado: falso

Entrada: 0
Resultado: verdadeiro

Entrada: -2
Resultado: verdadeiro`,
        isRunnable: false,
      },
      {
        type: 'alert',
        body: 'Voc√™ ter√° que retornar um n√∫mero, ent√£o n√£o esque√ßa de utilizar a instru√ß√£o "retorna" dentro da fun√ß√£o.',
      },
    ],
    function: 'verificarNumero',
    testCases: [
      {
        input: [0],
        expectedOutput: 'verdadeiro',
        isLocked: false,
      },
      {
        input: [10],
        expectedOutput: 'falso',
        isLocked: false,
      },
      {
        input: [-5.5],
        expectedOutput: 'falso',
        isLocked: false,
      },
    ],

    code: `funcao converterObjetosNavesEmVetores(naves) {
    
}`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
  {
    starId: null,
    title: 'O Castelo',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Chegamos ao castelo.',
      },
      {
        type: 'default',
        title: 'Que castelo meu?',
        body: 'Por que castelo? Porque a pessoa que estava pedindo a nossa ajuda √© na verdade uma princesa.',
      },
      {
        type: 'default',
        body: 'Contudo, n√£o fazemos a menor ideia onde ela est√°, e o desafio √© encontrar ela no castelo.',
      },
      {
        type: 'default',
        body: 'O castelo em quest√£o tem tr√™ partes, representado por tr√™s vetores: topo, meio e baixo',
      },
      {
        type: 'code',
        body: `var castelo = [
    [1, 1, 1], // Parte do topo do castelo
    [1, 1, 1], // Parte do meio castelo
    [1, 1, 1], // Parte de baixo do castelo 
];`,
      },
      {
        type: 'default',
        body: 'Cada parte do castelo possui c√¥modos, que s√£o representados por n√∫meros, como voc√™ bem deve ter percebido.',
      },
      {
        type: 'default',
        body: 'Logo, o castelo √© um vetor de vetores',
      },
      {
        type: 'default',
        body: 'S√≥ que a parte do meio pode ter mais vetores, assim como cada parte pode ter mais ou menos n√∫meros (c√¥modos).',
      },
      {
        type: 'code',
        body: `var castelo = [
    [1, 1], // Parte do topo do castelo
    [1, 1, 1], // Parte do meio castelo
    [1, 1, 1], // Parte do meio castelo
    [1, 1, 1, 1, 1], // Parte de baixo do castelo 
];`,
      },
      {
        type: 'default',
        body: 'A princesa √© representada pelo n√∫mero 0. Ent√£o o vetor que tiver o n√∫mero ser√° onde est√° a princesa.',
      },
      {
        type: 'code',
        body: `var castelo = [
    [1, 1], 
    [1, 1, 1],
    [1, 0, 1], // √â aqui onde est√° a princesa
    [1, 1, 1, 1],  
];`,
      },
      {
        type: 'list',
        title: 'Desafio',
        body: 'A sua miss√£o √© indicar onde est√° a princesa. Voc√™ deve pegar o vetor correto e substituir o n√∫mero zero pelo texto "princesa" em min√∫sculo, e por fim retornar esse vetor transformado.',
      },
      {
        type: 'code',
        body: `
Entrada: [[1,1,1], [1,0,1], [1,1,1]]
Resultado: [1, "princesa", 1]

Entrada: [[1,1,1], [1,1,1], [0,1,1,1]]
Resultado: ["princesa", 1, 1, 1]

Entrada: [[1,1,1], [1,1,1], [0,1,1]]
Resultado: ["princesa", 1, 1,]
 
Entrada: [[1,0], [1,1], [1,1], [1]]
Resultado: [1, "princesa"]`,
      },
      {
        type: 'alert',
        body: 'Voc√™ pode resolver esse desafio usando apenas la√ßo, mas recomendo usar a fun√ß√£o "filtrarPor()" e sem seguida "mapear()", pois assim ser√° mais f√°cil.',
      },
      {
        type: 'alert',
        body: 'J√° armei a fun√ß√£o "procurarPrincesa()" onde voc√™ deve colocar o "retorna" do vetor de resultado. Ent√£o, por favor, n√£o altere o nome dessa fun√ß√£o.',
      },
      {
        type: 'alert',
        body: 'Dica: Voc√™ pode criar suas pr√≥prias fun√ß√µes em qualquer lugar do programa, desde que cada uma respeite o escopo da outra.',
      },
      {
        type: 'alert',
        body: 'Lembre-se: o retorno de uma fun√ß√£o de alta ordem que usa vetores, como "filtrarPor" e "mapear" sempre ser√° um vetor.',
      },
    ],
    function: null,
    testCases: [
      {
        input: ['[[1,1,1], [1,0,1], [1,1,1]]'],
        expectedOutput: [[1, 'princesa', 1]],
        isLocked: false,
      },
      {
        input: ['[[1,1,1], [1,1,1], [0,1,1,1]]'],
        expectedOutput: [['princesa', 1, 1, 1]],
        isLocked: false,
      },
      {
        input: ['[[1,1,1], [1,1,1], [0,1,1]]'],
        expectedOutput: [['princesa', 1, 1]],
        isLocked: false,
      },
      {
        input: ['[[1,0], [1,1], [1,1], [1]]'],
        expectedOutput: [[1, 'princesa']],
        isLocked: false,
      },
    ],

    code: `funcao concatenarAmostras(amostras) {
    
}`,
    difficulty: 'medium',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
];

[
  {
    starId: null,
    title: 'Reconhecendo ra√ßa alien√≠gena',
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Conseguimos passar pelo portal roxo üöÄ! S√≥ que agora paramos em um planeta desconhecido.',
      },
      {
        type: 'default',
        title: null,
        body: 'Est√° vindo uma ra√ßa estranha em nossa dire√ß√£o, e o foguete est√° com problema em reconhec√™-la. Contudo, ela possui caracter√≠scas comuns com outras ra√ßas no banco de dados (v√°rias olhos e cor diferenciada)',
      },
      {
        type: 'default',
        title: null,
        body: 'Existem 3 ra√ßas com esse fen√≥tipo:',
      },
      {
        type: 'list',
        body: 'Trox: se tiver 3 olhos e cor verde',
      },
      {
        type: 'list',
        body: 'Blonk: se tiver 2 olhos e cor laranja',
      },
      {
        type: 'list',
        body: 'Plimp: se tiver 6 olhos e cor marrom',
      },
      {
        type: 'list',
        title: 'O que fazer?',
        body: 'O seu desafio √© escrever um programa que escreva o nome da ra√ßa de acordo com esses dados. Se n√£o n√£o se encaixarem em nenhuma das ra√ßas conhecidas, o programa deve escrever "desconhecido".',
      },
      {
        type: 'code',
        body: `Entrada: 3, "verde"
Resultado: Trox

Entrada: 2, "laranja"
Resultado: Blonk

Entrada: 6, "marrom"
Resultado: Plimp

Entrada: 1, "branco"
Resultado: desconhecido`,
      },
      {
        type: 'alert',
        body: 'Note que se a quantidade de olhos e cor n√£o corresponder a nenhuma dessa ra√ßas, o resultado ser√° desconhecido!',
      },
      {
        type: 'alert',
        body: 'Qual ser√° a melhor estrutua para resolver esse desafio: "se senao se e senao" ou "escolha caso"? ü§î',
      },
      {
        type: 'alert',
        body: 'N√£o remova nenhum comando leia() do programa!',
      },
    ],
    function: null,
    testCases: [
      {
        input: [3, "'verde'"],
        expectedOutput: 'Trox',
        isLocked: false,
      },
      {
        input: [2, "'laranja'"],
        expectedOutput: 'Blonk',
        isLocked: false,
      },
      {
        input: [6, "'marrom'"],
        expectedOutput: 'Plimp',
        isLocked: false,
      },
      {
        input: [4, "'preto'"],
        expectedOutput: 'desconhecido',
        isLocked: false,
      },
    ],

    code: `/*
Trox: se tiver 3 olhos e cor verde
Blonk: se tiver 2 olhos e cor laranja
Plimp: se tiver 6 olhos e cor marrom
 */

var olhos = leia();
var cor = leia();`,
    difficulty: 'easy',
    categories: ['b√°sico', 'geometria', 'matem√°tica', 'n√∫meros'],
  },
];

`var alimentos = leia();
var alimentosSemSapos = [];
para cada alimento em alimentos {
    // Escreva seu c√≥digo aqui abaixo

}

escreva(alimentosSemSapos);
`;

`
var multiplos = [];
para (var i = 1; i <= tamanho; i++) {
  multiplos.empilhar(numero * i);
}
retorna multiplos;
`