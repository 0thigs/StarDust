export const theories = [
  {
    starId: 1,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Ol√°, seja bem-vindo. Primeiramente, para come√ßarmos essa jornada √© necess√°rio deixar claro o conceito de l√≥gica e algoritmos, pois esses conceitos ser√£o de vital import√¢ncia para o entendimento de assuntos mais avan√ßados, ent√£o vamos l√°! üöÄ.',
      },
      {
        type: 'default',
        title: 'Come√ßando pelo come√ßo',
        body: 'Sempre que decidimos fazer qualquer atividade em nosso dia a dia, acabamos seguindo uma sequ√™ncia l√≥gica.',
      },
      {
        type: 'default',
        title: null,
        body: 'Na maior parte do tempo, fazemos isso de maneira t√£o natural que nem nos damos conta, mas quando percebemos, conseguimos enxergar passos que levaram ao resultado final.',
      },
      {
        type: 'default',
        title: 'Ou seja...',
        body: 'Uma sequ√™ncia l√≥gica nada mais s√£o que passos executados at√© atingir um determinado objetivo.',
      },
      {
        type: 'default',
        title: 'L√≥gica est√° em todo lugar',
        body: 'Imagine que voc√™ √© aspirante a explorador espacial e deseja desbravar os confins do espa√ßo long√≠nquo com seu foguete. O problema √© que voc√™ n√£o tem equipamento para isso e muito menos um foguete :(',
      },
      {
        type: 'alert',
        body: 'A l√≥gica de programa√ß√£o √© semelhante a isso, mas em vez de solucionar a quest√£o de como fazer uma explora√ß√£o espacial, voc√™ est√° resolvendo um problema em um programa de computador. Para tanto, voc√™ precisa pensar de forma l√≥gica e organizada para criar uma sequ√™ncia de passos que resolva esse problema.',
      },
      {
        type: 'default',
        title: 'A√≠ que entra os algoritmos',
        body: 'Um algoritmo √© como um roteiro para um programa de computador. Ele √© uma sequ√™ncia de passos que o programa deve seguir para alcan√ßar um objetivo espec√≠fico. Como aspirante a explorador espacial, voc√™ pode pensar em um algoritmo como uma lista de tarefas que voc√™ precisa para resolver o primeiro problema que voc√™ se depara.',
      },
      {
        type: 'default',
        title: null,
        body: 'Por exemplo, se o seu objetivo √© arrumar equipamento adequado para a viagem espacial, o seu algoritmo pode ter os seguintes passos:',
      },
      {
        type: 'code',
        body: `algoritmo arrumar um foguete
  
  Inicio

Invadir um centro espacial;
Encontrar um foguete;
Entrar no foguete enquanto ningu√©m estiver olhando;
Conferir se n√£o h√° combust√≠vel suficiente;
Conferir a quantidade de suprimentos;
Conferir quantidade de oxig√™nio;
Se n√£o tiver = sair e roubar mais
senao ligar o foguete;
Esperar foquete entrar em √≥rbita;
Relaxar e curtir a viagem;
  
  Fim`,
      },
      {
        type: 'default',
        title: 'Mas √© s√≥ isso?',
        body: 'Obviamente, h√° v√°rias formas de chegar nesse mesmo resultado, como tamb√©m pode existir mais passos antes de outros passos. Contudo, o objetivo sempre vai ser esse: pensar logicamente para estipular uma sequ√™ncia de passos para a resolu√ß√£o de um problema, o que damos o nome de l√≥gica de programa√ß√£o dentro do contexto da computa√ß√£o, enquanto a sequ√™ncia em si desses eventos, damos o nome de algoritmo.',
      },
      {
        type: 'alert',
        body: 'A diferen√ßa √© que qualquer sequ√™ncia l√≥gica de passos pode ser considerado um algoritmo, como uma receita de bolo ou um assalto a um centro espacial. J√° em programa√ß√£o, os algoritmos s√£o escritos para criar programas, mas sempre obedecendo uma s√©rie de regras estabelecidas por cada linguagem de programa√ß√£o, o que √© o que a gente chama de sintaxe.',
      },
      {
        type: 'default',
        title: 'Por que aprender L√≥gica de Programa√ß√£o?',
        body: 'Aprender l√≥gica de programa√ß√£o √© importante porque permite que voc√™ resolva problemas de maneira mais eficiente e organizada, ajuda na solu√ß√£o de tarefas complexas e facilita a cria√ß√£o de programas que automatizam tarefas e processos. Al√©m disso, √© uma habilidade altamente valorizada no mercado de trabalho.',
      },
      {
        type: 'default',
        title: 'Como funciona a L√≥gica de Programa√ß√£o na pr√°tica?',
        body: 'Como voc√™ j√° percebeu, a L√≥gica de Programa√ß√£o funciona atrav√©s de algoritmos, ou seja, por meio de passos l√≥gicos e bem definidos que deve ser seguidos para resolver um problema. Esses passos s√£o escritos em um c√≥digo que √© interpretado pelo computador para que ele possa executar a tarefa desejada.',
      },
      {
        type: 'list',
        body: 'Agora que voc√™ aprendeu o b√°sico de l√≥gica e algoritmos, vamos testar seus conhecimentos at√© ent√£o adquiridos üöÄ.',
      },
    ],
  },
  {
    starId: 2,
    texts: [
      {
        type: 'default',
        title: 'Introdu√ß√£o',
        body: 'Agora que voc√™ finalmente est√° no espa√ßo, imagino que voc√™ queira explorar novos planetas e talvez econtrar novas vidas alien√≠genas.',
      },
      {
        type: 'default',
        title: 'Introdu√ß√£o',
        body: 'Para isso voc√™ vai ter que instruir seu foguete escrevendo c√≥digos.',
      },
      {
        type: 'alert',
        body: 'Uma linguagem de programa√ß√£o normalmente possui uma sintaxe pr√≥pria, que √© o conjunto de regras que determina quais combina√ß√µes de s√≠mbolos e palavras-chaves podem ser utilizadas para fazer com que o programa fa√ßa algo.',
      },
      {
        type: 'default',
        title: 'Qual linguagem usar?',
        body: 'Para nossa sorte, o foguete entende uma linguagem especial chamada Del√©gua. Ela possui uma sintaxe f√°cil e intuitiva em portugu√™s, o que facilita bastante.',
      },
      {
        type: 'default',
        title: null,
        body: 'Por exemplo, para fazer com que o foguete imprima no painel: "explorar o espa√ßo √© legal", basta fazer isso',
      },
      {
        type: 'code',
        body: `escreva("explorar o espa√ßo √© legal")`,
      },
      {
        type: 'default',
        title: null,
        body: 'Simples e f√°cil, mas caso voc√™ queria que o foguete leia e receba informa√ß√µes suas, voc√™ pode usar o comando leia:',
      },
      {
        type: 'code',
        body: `var seuNome = leia()`,
      },
      {
        type: 'default',
        title: 'O que diabos √© var?',
        body: 'Para receber dados, naturalmente voc√™ tem que colocar em algum lugar, que no caso sempre vai ser em algo que chamamos de vari√°vel.',
      },
      {
        type: 'default',
        title: 'Mas o que diabos s√£o vari√°veis?',
        body: 'vari√°veis nada mais s√£o do que espa√ßos na mem√≥ria de um programa, onde voc√™ pode armazenar um tipo de dado, elas tem esse nome porque elas podem variar, ou seja, receber outros valores no decorrer do programa.',
      },
      {
        type: 'alert',
        body: 'Voc√™ n√£o precisa entender tudo de vari√°veis agora, pois usaremos elas mais para frente.',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora √© s√≥ fazer o programa exibir o dado dentro da vari√°vel.',
      },
      {
        type: 'code',
        body: `var seuNome = leia()
escreva(seuNome)`,
      },
      {
        type: 'default',
        title: null,
        body: 'Legal, mas na hora de escrever um c√≥digo consistente, voc√™ precisa tomar alguns cuidados:',
      },
      {
        type: 'list',
        body: '1 - √â preciso respeitar sempre a sintaxe definida pela linguagem, por exemplo, caso voc√™ tivesse colocado EXIBA ao inv√©s de ESCREVA, deixado de usar os par√™nteses ou as aspas para exibir textos, o c√≥digo daria erro. ',
      },
      {
        type: 'list',
        body: '2 - Voc√™ deve entender a fun√ß√£o, quando e porqu√™ usar cada comando, por exemplo, para escrever dados externos na tela, eu preciso usar o comando leia, pois ele tem a serve para ler informa√ß√µes que vem de fora do programa, para a√≠ ent√£o usar o comando escreva.',
      },
      {
        type: 'list',
        body: '3 - √â crucial compreender que o fluxo de um programa √© sempre de cima para baixo, ou seja, n√£o faz sentido eu tentat ler uma informa√ß√£o com leia depois de exibi-la na tela com escreva',
      },
      {
        type: 'alert',
        body: 'leia e escreva s√£o considerados comandos de entrada e sa√≠da respectivamente, justamente porque com o leia voc√™ est√° entrando com dados, enquanto com o escreva voc√™ est√° fazendo dados sa√≠rem para serem exibidos digamos assim.',
      },
      {
        type: 'list',
        body: 'Agora que voc√™ um pouco mais sobre programas e pseudoc√≥digos t√° na hora revisar tudo isso, preparado(a)?.',
      },
    ],
  },
  {
    starId: 3,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Ok, parace que voc√™ n√£o encontrou nenhum nada de interessante no espa√ßo ainda, justamente porque seu foguete n√£o sabe quem o est√° pilotando.',
      },
      {
        type: 'default',
        title: 'E agora?',
        body: 'Para resolver esse problema voc√™ tem que escrever um programa que exiba seu nome para ele, e para isso voc√™ ter√° que usar os comandos leia e escreva explicados anteriormente.',
      },
      {
        type: 'default',
        title: null,
        body: 'Por√©m, como voc√™ j√° sabe, √© necess√°rio armazenar seu nome em uma vari√°vel no c√≥digo para ent√£o escrev√™-lo.',
      },
      {
        type: 'default',
        title: 'Explica o que s√£o vari√°veis logo!',
        body: 'Vari√°veis s√£o espa√ßos reservados na mem√≥ria de um programa para algum tipo de dado, pronto.',
      },
      {
        type: 'default',
        title: 'Como usar essa tais de vari√°veis?',
        body: 'Para us√°-las de fato √© necess√°rio declarar elas para o programa que ela existe, escrevendo o comando var, seguido do nome da vari√°vel que voc√™ deseja que ela tenha, exemplo:',
      },
      {
        type: 'code',
        body: `var nomeCompleto`,
      },
      {
        type: 'default',
        title: 'Como colocar dados nelas?',
        body: 'Simples, basta colocar o sinal de "=" depois da vari√°vel e em seguida o dado que voc√™ deseja.',
      },
      {
        type: 'code',
        body: `var nome = "Kau√™ Cabess"
var idade = 90`,
      },
      {
        type: 'default',
        title: null,
        body: 'Neste exemplo, estamos criando duas vari√°veis, uma chamada "nome" que armazenar√° o valor "Kau√™ Cabess" e outra chamada "idade" que armazenar√° o valor 90.',
      },
      {
        type: 'alert',
        body: 'Al√©m disso, voc√™ tamb√©m pode atribuir o valor de uma vari√°vel a outra, utilizando o seguinte formato:.',
      },
      {
        type: 'code',
        body: `
var nome = "Kau√™ Cabess"
var nomeCompleto = nome`,
      },
      {
        type: 'default',
        title: null,
        body: 'Agora observe um exemplo completo utilizando tudo que vimos at√© agora.',
      },
      {
        type: 'code',
        body: `var nome = leia()
var idade = leia()
var nomeCompleto = nome

escreva("seu nome completo √© ", nomeCompleto)
escreva("sua idade √© ", idade)`,
      },
      {
        type: 'alert',
        body: 'Dica: voc√™ tamb√©m fazer com que o programa escreva um texto e o conte√∫do de uma vari√°vel ao mesmo tempo, basta separ√°-los entre v√≠rgulas, assim como mostrado no exemplo acima.',
      },
      {
        type: 'default',
        title: 'Regras para nomes de vari√°veis',
        body: 'Ao nomear suas vari√°veis, √© importante seguir algumas regras b√°sicas:',
      },
      {
        type: 'list',
        body: '1 - O nome da vari√°vel deve iniciar com uma letra ou sublinhado (_).',
      },
      {
        type: 'list',
        body: '2 - O nome da vari√°vel n√£o pode conter espa√ßos.',
      },
      {
        type: 'list',
        body: '3 - O nome da vari√°vel n√£o pode ser uma palavra reservada da liguagem, ou seja, um nome de um comando por exemplo.',
      },
      {
        type: 'list',
        body: '4 - O nome da vari√°vel deve ser descritivo e f√°cil de entender.',
      },
      {
        type: 'default',
        title: 'Concluindo',
        body: 'A atribui√ß√£o de vari√°veis √© uma parte fundamental da programa√ß√£o, pois permite armazenar valores e acess√°-los ao longo do c√≥digo. Ao seguir as regras e a sintaxe corretas, voc√™ poder√° atribuir valores a suas vari√°veis sem problemas em programas futuros.',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora que voc√™ aprendeu mais um pouco, que tal praticar tudo o que j√° vimos at√© agora?',
      },
    ],
  },
 
  {
    starId: 5,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Ol√°, agora que voc√™ aprendeu mais sobre vari√°veis para armazenar dados, vamos nos aprofundar nos tipos de dados',
      },
      {
        type: 'default',
        title: null,
        body: 'Na programa√ß√£o, os tipos de dados s√£o importantes para identificarmos o tipo de informa√ß√£o que estamos lidando, e, com isso, agir de maneira adequada na manipula√ß√£o dos dados.',
      },
      {
        type: 'default',
        title: null,
        body: 'como voc√™ j√° sabe, existem 4 tipos de dados b√°sicos',
      },
      {
        type: 'list',
        body: `
          1 - Caractere 
          2 - Inteiro 
          3 - Real 
          4 - L√≥gico
          `,
      },
      {
        type: 'alert',
        body: 'Por agora, vamos falar sobre o tipo que caracter, que nada mais do que um tipo para lidar com textos.',
      },
      {
        type: 'default',
        title: null,
        body: 'Ent√£o, o tipo caractere √© utilizado para representar valores que s√£o compostos por uma ou mais letras, n√∫meros ou s√≠mbolos. Esses valores s√£o conhecidos como "strings".',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de caractere',
        body: 'Para declarar uma vari√°vel do tipo caractere em Portugol, voc√™ deve escrever o seguinte:',
      },
      {
        type: 'code',
        body: `
      var
          nome: caractere
            `,
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de caractere',
        body: 'Agora voc√™ pode atribuir valores a vari√°veis do tipo caractere da seguinte forma:',
      },
      {
        type: 'code',
        body: `
      nomeDaVarivael <- "algum texto"
            `,
      },
      {
        type: 'alert',
        body: 'Lembre-se sempre de colocar as aspas para indicar que √© uma string.',
      },
      {
        type: 'alert',
        body: '√â importante notar tamb√©m que, na hora de atribuir um valor √† uma vari√°vel, o tipo de dado da vari√°vel seja compat√≠vel com o tipo de dado da informa√ß√£o que estamos atribuindo, ou seja, uma vari√°vel do tipo caractere apenas aceitas valores que s√£o string',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de caractere',
        body: 'Aqui est√£o alguns exemplos de como voc√™ pode declarar e atribuir valores a vari√°veis do tipo caractere em Portugol:',
      },
      {
        type: 'code',
        body: `
  algoritmo "aprendendoSobreStrings"
  
  var
      nome: caractere
      sobrenome: caractere
      frase: caractere 
  
  inicio
      nome <- "Jo√£o"
      sobrenome <- "Santos"
      frase <- "Ol√°, mundo!" 
  fimalgoritmo 
            `,
      },
      {
        type: 'default',
        title: 'Concatena√ß√£o',
        body: '√â poss√≠vel tamb√©m unir textos por meio do operador +, a√ß√£o que chamamos de concatena√ß√£o:',
      },
      {
        type: 'code',
        body: `
      escreva('Hoje fui para' + 'padaria')
  
      Resultado:
          Hoje fui para padaria
            `,
      },
      {
        type: 'alert',
        body: 'Voc√™ tamb√©m pode concatenar conte√∫dos de texto que est√£o em vari√°veis. Veja o exemplo',
      },
      {
        type: 'code',
        body: `
  jogador1 = "Pedro"
  jogador2 = "Matheus"
  escreva("Os jogadores: " + jogador1 + "e" + jogador2)
  escreva("v√£o estreiar na quadra hoje!")
  
  Resultado:
  Os jogadores Pedro e Matheus v√£o treinar na quadra hoje!
            `,
      },
      {
        type: 'default',
        title: null,
        body: 'Agora que voc√™ conchece mais sobre tipo caractere, que tal refor√ßar isso com algumas quest√µes?.',
      },
    ],
  },
  {
    starId: 6,
    texts: [
      {
        type: 'default',
        title: null,
        body: 'Muito bom, agora vamos falar sobre o tipos que representam os num√©ricos.',
      },
      {
        type: 'default',
        title: 'Tipo inteiro',
        body: 'Primeiramente, vamos falar o tipo inteiro. Ele diz respeito aos n√∫meros sem parte decimal ou fracion√°ria, como -5, 0, 1, 2, 3, entre outros.',
      },
      {
        type: 'default',
        title: 'Declarando inteiros',
        body: 'No Portugol, declaramos uma vari√°vel inteira da seguinte forma:',
      },
      {
        type: 'code',
        body: `
      var
          numero: inteiro
            `,
      },
      {
        type: 'default',
        title: 'Declarando inteiros',
        body: 'Em seguida, podemos atribuir um valor a ela, por exemplo:',
      },
      {
        type: 'code',
        body: `
          numero <- 5
            `,
      },
      {
        type: 'default',
        title: 'Opera√ß√µes Matem√°ticas com Inteiros',
        body: 'Podemos realizar opera√ß√µes matem√°ticas com inteiros, como adi√ß√£o, subtra√ß√£o, multiplica√ß√£o e divis√£o e atribuir a vari√°veis. Aqui est√£o alguns exemplos:',
      },
      {
        type: 'code',
        body: `
          var
              a = 10;
              b = 5;
          inicio
              soma = a + b;
              subtracao = a - b;
              multiplicacao = a * b;
              divisao = a / b;
  
              escreval(soma)
              escreval(subtracao)
              escreval(multiplicacao)
              escreva(divisao)
          fimalgoritmo
  
          resultado:
          15
          5
          50
          2
   `,
      },
      {
        type: 'alert',
        body: 'Cuidade, ao dividir inteiros, o resultado ser√° sempre inteiro. Por exemplo, 10 dividido por 3 √© 3, e n√£o 3,3333...',
      },
      {
        type: 'default',
        title: null,
        body: 'Falaremos mais sobre esses operadores futuramente. Agora como lidar com n√∫meros reais?',
      },
      {
        type: 'default',
        title: 'Tipo real',
        body: 'Tipo real √© um tipo de dado que armazena n√∫meros com parte decimal ou fracion√°ria, como 3.14, -0.5, 0.0, entre outros.',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de real',
        body: 'No Portugol, declaramos uma vari√°vel real da seguinte forma:',
      },
      {
        type: 'code',
        body: `
      var
          pi: real
            `,
      },
      {
        type: 'default',
        title: 'Declara√ß√£o de real',
        body: 'Em seguida, podemos atribuir um valor a ela, por exemplo:',
      },
      {
        type: 'code',
        body: `
      pi <- 3.14;
            `,
      },
      {
        type: 'alert',
        body: 'Em outras palavras, um tipo inteiro sempre vai ser um n√∫mero inteiro, enquanto um tipo real sempre vai ser um n√∫mero real d√£.',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora vamos testar o que voc√™ aprendeu sobre num√©ricos',
      },
    ],
  },
  {
    starId: 7,
    texts: [
      {
        type: 'default',
        title: 'introdu√ß√£o',
        body: 'Os dados do tipo l√≥gico s√£o valores que armazenam uma √∫nica op√ß√£o entre duas possibilidades poss√≠veis: Verdadeiro ou Falso.',
      },
      {
        type: 'alert',
        body: 'O tipo l√≥gico tamb√©m √© conhecido por booleano ou em ingl√™s boolean em homenagem ao matem√°tico George Boole.',
      },
      {
        type: 'default',
        title: null,
        body: 'O tipo l√≥gico representa a linguagem que um computador verdadeiramente entende, ou seja, o bin√°rio, j√° que verdadeiro e falso representam 1 e 0 respectivamente:',
      },
      {
        type: 'alert',
        body: 'Dessa forma, √© poss√≠vel usar esse valores para trabalhar com opera√ß√µes l√≥gicas, como "e" e "ou", como tamb√©m com estruturas condicionais, mas vamos deixar isso para outra hora.',
      },
      {
        type: 'default',
        title: 'Declara√ß√£o do tipo l√≥gico',
        body: 'Em Portugol, o tipo de dado l√≥gico √© representado pela palavra reservada logico. Logo, para declarar uma vari√°vel do tipo l√≥gico, podemos usar a seguinte sintaxe:',
      },
      {
        type: 'code',
        body: `
      var
          nomeDaVariavel: logico
            `,
      },
      {
        type: 'default',
        title: 'declara√ß√£o do tipo l√≥gico',
        body: 'Por exemplo, para declarar uma vari√°vel que armazena se uma pessoa √© maior de idade, podemos fazer:',
      },
      {
        type: 'code',
        body: `
      var
          eMaiorDeIdade: logico
            `,
      },
      {
        type: 'default',
        title: null,
        body: 'Agora, podemos inicializar a vari√°vel com um valor l√≥gico (verdadeiro ou falso):',
      },
      {
        type: 'code',
        body: `
          eMaiorDeIdade <- verdadeiro
            `,
      },
      {
        type: 'alert',
        body: 'Quando n√£o iniciamos uma vari√°vel do tipo l√≥gico ela recebe o valor padr√£o de falso',
      },
      {
        type: 'default',
        title: null,
        body: 'Agora que voc√™ aprendeu um pouco mais sobre valores l√≥gicos que tal praticar um pouco mais?',
      },
    ],
  },
];

// Work in Progress
// body: `
// ALGORITMO ‚Äúdeclaracao‚Äù

// VAR
//     varInteiro: inteiro
//     varReal: real
//     varCaractere: caractere
//     varLogico: Logico
// INICIO
//     varInteiro <- 1
//     varReal <- 1.5
//     varCaractere <- ‚Äúteste‚Äù
//     varLogico <- VERDADEIRO
//     ESCREVAL(varInteiro, varReal, varCaractere, varLogico)

// FIMALGORITMO
//     `,

// TIPOS DE DADOS
/*
    Ol√°! Vamos come√ßar uma aula introdut√≥ria sobre tipos de dados usando Portugol.
    
    O que s√£o tipos de dados?
    Tipos de dados s√£o categorias que s√£o atribu√≠das a vari√°veis em um programa de computador. Isso ajuda a identificar o tipo de informa√ß√£o que uma vari√°vel armazena, permitindo ao computador tomar decis√µes sobre como tratar esses dados.
    
    Quais s√£o os tipos de dados b√°sicos no Portugol?
    
    INTEIRO: Armazena n√∫meros inteiros, sem casas decimais. Exemplo: -10, 0, 5, 100.
    REAL: Armazena n√∫meros reais, com casas decimais. Exemplo: -10,5, 0,25, 5,7.
    CARACTERE: Armazena um √∫nico caractere, entre aspas simples. Exemplo: 'a', 'Z', '#'.
    CADEIA: Armazena uma cadeia de caracteres, entre aspas duplas. Exemplo: "Ol√° mundo!", "12345".
    
    Ol√°! Vamos come√ßar uma aula introdut√≥ria sobre tipos de dados usando Portugol.
    
    O que s√£o tipos de dados?
    Tipos de dados s√£o categorias que s√£o atribu√≠das a vari√°veis em um programa de computador. Isso ajuda a identificar o tipo de informa√ß√£o que uma vari√°vel armazena, permitindo ao computador tomar decis√µes sobre como tratar esses dados.
    
    Quais s√£o os tipos de dados b√°sicos no Portugol?
    
    INTEIRO: Armazena n√∫meros inteiros, sem casas decimais. Exemplo: -10, 0, 5, 100.
    REAL: Armazena n√∫meros reais, com casas decimais. Exemplo: -10,5, 0,25, 5,7.
    CARACTERE: Armazena um √∫nico caractere, entre aspas simples. Exemplo: 'a', 'Z', '#'.
    CADEIA: Armazena uma cadeia de caracteres, entre aspas duplas. Exemplo: "Ol√° mundo!", "12345".
    Por que √© importante identificar o tipo de dado de uma vari√°vel?
    Identificar o tipo de dado de uma vari√°vel √© importante porque permite ao computador saber como tratar esses dados. Por exemplo, se voc√™ est√° trabalhando com uma vari√°vel INTEIRO, o computador sabe que essa vari√°vel armazena apenas n√∫meros inteiros, ent√£o ele s√≥ permitir√° que voc√™ execute opera√ß√µes matem√°ticas v√°lidas para n√∫meros inteiros. Se voc√™ tentar fazer uma opera√ß√£o inv√°lida, como dividir um n√∫mero inteiro por outro n√∫mero inteiro e obter um resultado com casas decimais, o computador apresentar√° um erro.
    
    Como declarar vari√°veis com tipos de dados no Portugol?
    Para declarar uma vari√°vel com um tipo de dado espec√≠fico, voc√™ precisa usar a seguinte sintaxe:
    TIPO NOME_DA_VARIAVEL;
    Exemplos:
    INTEIRO idade;
    REAL altura;
    CARACTERE primeiraLetra;
    CADEIA nomeCompleto;
    
    Em resumo, os tipos de dados s√£o importantes porque permitem que o computador saiba como tratar as informa√ß√µes armazenadas em vari√°veis. No Portugol, existem 4 tipos de dados b√°sicos: INTEIRO, REAL, CARACTERE e CADEIA. √â importante declarar as vari√°veis corretamente para garantir que o programa funcione de maneira correta.
    
    */
